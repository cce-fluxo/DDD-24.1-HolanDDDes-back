
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Endereco
 * 
 */
export type Endereco = $Result.DefaultSelection<Prisma.$EnderecoPayload>
/**
 * Model FotosHotel
 * 
 */
export type FotosHotel = $Result.DefaultSelection<Prisma.$FotosHotelPayload>
/**
 * Model Hotel
 * 
 */
export type Hotel = $Result.DefaultSelection<Prisma.$HotelPayload>
/**
 * Model Avaliacao
 * 
 */
export type Avaliacao = $Result.DefaultSelection<Prisma.$AvaliacaoPayload>
/**
 * Model Descricao_detalhada
 * 
 */
export type Descricao_detalhada = $Result.DefaultSelection<Prisma.$Descricao_detalhadaPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Proprietario
 * 
 */
export type Proprietario = $Result.DefaultSelection<Prisma.$ProprietarioPayload>
/**
 * Model FotoUsuario
 * 
 */
export type FotoUsuario = $Result.DefaultSelection<Prisma.$FotoUsuarioPayload>
/**
 * Model Notificacao
 * 
 */
export type Notificacao = $Result.DefaultSelection<Prisma.$NotificacaoPayload>
/**
 * Model Acomodacao
 * 
 */
export type Acomodacao = $Result.DefaultSelection<Prisma.$AcomodacaoPayload>
/**
 * Model TipoAcomodacao
 * 
 */
export type TipoAcomodacao = $Result.DefaultSelection<Prisma.$TipoAcomodacaoPayload>
/**
 * Model Foto_Acomodacao
 * 
 */
export type Foto_Acomodacao = $Result.DefaultSelection<Prisma.$Foto_AcomodacaoPayload>
/**
 * Model Reserva
 * 
 */
export type Reserva = $Result.DefaultSelection<Prisma.$ReservaPayload>
/**
 * Model Gerenciamento_ganhos_acomodacao
 * 
 */
export type Gerenciamento_ganhos_acomodacao = $Result.DefaultSelection<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
/**
 * Model Avaliacao_acomodacao
 * 
 */
export type Avaliacao_acomodacao = $Result.DefaultSelection<Prisma.$Avaliacao_acomodacaoPayload>
/**
 * Model Cobranca
 * 
 */
export type Cobranca = $Result.DefaultSelection<Prisma.$CobrancaPayload>
/**
 * Model Gerenciamento_ganhos
 * 
 */
export type Gerenciamento_ganhos = $Result.DefaultSelection<Prisma.$Gerenciamento_ganhosPayload>
/**
 * Model Interesse
 * 
 */
export type Interesse = $Result.DefaultSelection<Prisma.$InteressePayload>
/**
 * Model ProprietarioNoInteresse
 * 
 */
export type ProprietarioNoInteresse = $Result.DefaultSelection<Prisma.$ProprietarioNoInteressePayload>
/**
 * Model Cupom
 * 
 */
export type Cupom = $Result.DefaultSelection<Prisma.$CupomPayload>
/**
 * Model ClienteNoCupom
 * 
 */
export type ClienteNoCupom = $Result.DefaultSelection<Prisma.$ClienteNoCupomPayload>
/**
 * Model Favorito
 * 
 */
export type Favorito = $Result.DefaultSelection<Prisma.$FavoritoPayload>
/**
 * Model ComodidadeAcomodacao
 * 
 */
export type ComodidadeAcomodacao = $Result.DefaultSelection<Prisma.$ComodidadeAcomodacaoPayload>
/**
 * Model ComodidadeNaAcomodacao
 * 
 */
export type ComodidadeNaAcomodacao = $Result.DefaultSelection<Prisma.$ComodidadeNaAcomodacaoPayload>
/**
 * Model ComodidadeHotel
 * 
 */
export type ComodidadeHotel = $Result.DefaultSelection<Prisma.$ComodidadeHotelPayload>
/**
 * Model ComodidadeNoHotel
 * 
 */
export type ComodidadeNoHotel = $Result.DefaultSelection<Prisma.$ComodidadeNoHotelPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Enderecos
 * const enderecos = await prisma.endereco.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Enderecos
   * const enderecos = await prisma.endereco.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.endereco`: Exposes CRUD operations for the **Endereco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Enderecos
    * const enderecos = await prisma.endereco.findMany()
    * ```
    */
  get endereco(): Prisma.EnderecoDelegate<ExtArgs>;

  /**
   * `prisma.fotosHotel`: Exposes CRUD operations for the **FotosHotel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FotosHotels
    * const fotosHotels = await prisma.fotosHotel.findMany()
    * ```
    */
  get fotosHotel(): Prisma.FotosHotelDelegate<ExtArgs>;

  /**
   * `prisma.hotel`: Exposes CRUD operations for the **Hotel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hotels
    * const hotels = await prisma.hotel.findMany()
    * ```
    */
  get hotel(): Prisma.HotelDelegate<ExtArgs>;

  /**
   * `prisma.avaliacao`: Exposes CRUD operations for the **Avaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacaos
    * const avaliacaos = await prisma.avaliacao.findMany()
    * ```
    */
  get avaliacao(): Prisma.AvaliacaoDelegate<ExtArgs>;

  /**
   * `prisma.descricao_detalhada`: Exposes CRUD operations for the **Descricao_detalhada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Descricao_detalhadas
    * const descricao_detalhadas = await prisma.descricao_detalhada.findMany()
    * ```
    */
  get descricao_detalhada(): Prisma.Descricao_detalhadaDelegate<ExtArgs>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs>;

  /**
   * `prisma.proprietario`: Exposes CRUD operations for the **Proprietario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proprietarios
    * const proprietarios = await prisma.proprietario.findMany()
    * ```
    */
  get proprietario(): Prisma.ProprietarioDelegate<ExtArgs>;

  /**
   * `prisma.fotoUsuario`: Exposes CRUD operations for the **FotoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FotoUsuarios
    * const fotoUsuarios = await prisma.fotoUsuario.findMany()
    * ```
    */
  get fotoUsuario(): Prisma.FotoUsuarioDelegate<ExtArgs>;

  /**
   * `prisma.notificacao`: Exposes CRUD operations for the **Notificacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacaos
    * const notificacaos = await prisma.notificacao.findMany()
    * ```
    */
  get notificacao(): Prisma.NotificacaoDelegate<ExtArgs>;

  /**
   * `prisma.acomodacao`: Exposes CRUD operations for the **Acomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Acomodacaos
    * const acomodacaos = await prisma.acomodacao.findMany()
    * ```
    */
  get acomodacao(): Prisma.AcomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.tipoAcomodacao`: Exposes CRUD operations for the **TipoAcomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoAcomodacaos
    * const tipoAcomodacaos = await prisma.tipoAcomodacao.findMany()
    * ```
    */
  get tipoAcomodacao(): Prisma.TipoAcomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.foto_Acomodacao`: Exposes CRUD operations for the **Foto_Acomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Foto_Acomodacaos
    * const foto_Acomodacaos = await prisma.foto_Acomodacao.findMany()
    * ```
    */
  get foto_Acomodacao(): Prisma.Foto_AcomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.reserva`: Exposes CRUD operations for the **Reserva** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reserva.findMany()
    * ```
    */
  get reserva(): Prisma.ReservaDelegate<ExtArgs>;

  /**
   * `prisma.gerenciamento_ganhos_acomodacao`: Exposes CRUD operations for the **Gerenciamento_ganhos_acomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gerenciamento_ganhos_acomodacaos
    * const gerenciamento_ganhos_acomodacaos = await prisma.gerenciamento_ganhos_acomodacao.findMany()
    * ```
    */
  get gerenciamento_ganhos_acomodacao(): Prisma.Gerenciamento_ganhos_acomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.avaliacao_acomodacao`: Exposes CRUD operations for the **Avaliacao_acomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacao_acomodacaos
    * const avaliacao_acomodacaos = await prisma.avaliacao_acomodacao.findMany()
    * ```
    */
  get avaliacao_acomodacao(): Prisma.Avaliacao_acomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.cobranca`: Exposes CRUD operations for the **Cobranca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cobrancas
    * const cobrancas = await prisma.cobranca.findMany()
    * ```
    */
  get cobranca(): Prisma.CobrancaDelegate<ExtArgs>;

  /**
   * `prisma.gerenciamento_ganhos`: Exposes CRUD operations for the **Gerenciamento_ganhos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gerenciamento_ganhos
    * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findMany()
    * ```
    */
  get gerenciamento_ganhos(): Prisma.Gerenciamento_ganhosDelegate<ExtArgs>;

  /**
   * `prisma.interesse`: Exposes CRUD operations for the **Interesse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Interesses
    * const interesses = await prisma.interesse.findMany()
    * ```
    */
  get interesse(): Prisma.InteresseDelegate<ExtArgs>;

  /**
   * `prisma.proprietarioNoInteresse`: Exposes CRUD operations for the **ProprietarioNoInteresse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProprietarioNoInteresses
    * const proprietarioNoInteresses = await prisma.proprietarioNoInteresse.findMany()
    * ```
    */
  get proprietarioNoInteresse(): Prisma.ProprietarioNoInteresseDelegate<ExtArgs>;

  /**
   * `prisma.cupom`: Exposes CRUD operations for the **Cupom** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cupoms
    * const cupoms = await prisma.cupom.findMany()
    * ```
    */
  get cupom(): Prisma.CupomDelegate<ExtArgs>;

  /**
   * `prisma.clienteNoCupom`: Exposes CRUD operations for the **ClienteNoCupom** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClienteNoCupoms
    * const clienteNoCupoms = await prisma.clienteNoCupom.findMany()
    * ```
    */
  get clienteNoCupom(): Prisma.ClienteNoCupomDelegate<ExtArgs>;

  /**
   * `prisma.favorito`: Exposes CRUD operations for the **Favorito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favorito.findMany()
    * ```
    */
  get favorito(): Prisma.FavoritoDelegate<ExtArgs>;

  /**
   * `prisma.comodidadeAcomodacao`: Exposes CRUD operations for the **ComodidadeAcomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComodidadeAcomodacaos
    * const comodidadeAcomodacaos = await prisma.comodidadeAcomodacao.findMany()
    * ```
    */
  get comodidadeAcomodacao(): Prisma.ComodidadeAcomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.comodidadeNaAcomodacao`: Exposes CRUD operations for the **ComodidadeNaAcomodacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComodidadeNaAcomodacaos
    * const comodidadeNaAcomodacaos = await prisma.comodidadeNaAcomodacao.findMany()
    * ```
    */
  get comodidadeNaAcomodacao(): Prisma.ComodidadeNaAcomodacaoDelegate<ExtArgs>;

  /**
   * `prisma.comodidadeHotel`: Exposes CRUD operations for the **ComodidadeHotel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComodidadeHotels
    * const comodidadeHotels = await prisma.comodidadeHotel.findMany()
    * ```
    */
  get comodidadeHotel(): Prisma.ComodidadeHotelDelegate<ExtArgs>;

  /**
   * `prisma.comodidadeNoHotel`: Exposes CRUD operations for the **ComodidadeNoHotel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComodidadeNoHotels
    * const comodidadeNoHotels = await prisma.comodidadeNoHotel.findMany()
    * ```
    */
  get comodidadeNoHotel(): Prisma.ComodidadeNoHotelDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.19.1
   * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Endereco: 'Endereco',
    FotosHotel: 'FotosHotel',
    Hotel: 'Hotel',
    Avaliacao: 'Avaliacao',
    Descricao_detalhada: 'Descricao_detalhada',
    Usuario: 'Usuario',
    Client: 'Client',
    Proprietario: 'Proprietario',
    FotoUsuario: 'FotoUsuario',
    Notificacao: 'Notificacao',
    Acomodacao: 'Acomodacao',
    TipoAcomodacao: 'TipoAcomodacao',
    Foto_Acomodacao: 'Foto_Acomodacao',
    Reserva: 'Reserva',
    Gerenciamento_ganhos_acomodacao: 'Gerenciamento_ganhos_acomodacao',
    Avaliacao_acomodacao: 'Avaliacao_acomodacao',
    Cobranca: 'Cobranca',
    Gerenciamento_ganhos: 'Gerenciamento_ganhos',
    Interesse: 'Interesse',
    ProprietarioNoInteresse: 'ProprietarioNoInteresse',
    Cupom: 'Cupom',
    ClienteNoCupom: 'ClienteNoCupom',
    Favorito: 'Favorito',
    ComodidadeAcomodacao: 'ComodidadeAcomodacao',
    ComodidadeNaAcomodacao: 'ComodidadeNaAcomodacao',
    ComodidadeHotel: 'ComodidadeHotel',
    ComodidadeNoHotel: 'ComodidadeNoHotel'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "endereco" | "fotosHotel" | "hotel" | "avaliacao" | "descricao_detalhada" | "usuario" | "client" | "proprietario" | "fotoUsuario" | "notificacao" | "acomodacao" | "tipoAcomodacao" | "foto_Acomodacao" | "reserva" | "gerenciamento_ganhos_acomodacao" | "avaliacao_acomodacao" | "cobranca" | "gerenciamento_ganhos" | "interesse" | "proprietarioNoInteresse" | "cupom" | "clienteNoCupom" | "favorito" | "comodidadeAcomodacao" | "comodidadeNaAcomodacao" | "comodidadeHotel" | "comodidadeNoHotel"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Endereco: {
        payload: Prisma.$EnderecoPayload<ExtArgs>
        fields: Prisma.EnderecoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnderecoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnderecoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          findFirst: {
            args: Prisma.EnderecoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnderecoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          findMany: {
            args: Prisma.EnderecoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>[]
          }
          create: {
            args: Prisma.EnderecoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          createMany: {
            args: Prisma.EnderecoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnderecoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>[]
          }
          delete: {
            args: Prisma.EnderecoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          update: {
            args: Prisma.EnderecoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          deleteMany: {
            args: Prisma.EnderecoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnderecoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EnderecoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          aggregate: {
            args: Prisma.EnderecoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEndereco>
          }
          groupBy: {
            args: Prisma.EnderecoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnderecoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnderecoCountArgs<ExtArgs>
            result: $Utils.Optional<EnderecoCountAggregateOutputType> | number
          }
        }
      }
      FotosHotel: {
        payload: Prisma.$FotosHotelPayload<ExtArgs>
        fields: Prisma.FotosHotelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FotosHotelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FotosHotelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          findFirst: {
            args: Prisma.FotosHotelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FotosHotelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          findMany: {
            args: Prisma.FotosHotelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>[]
          }
          create: {
            args: Prisma.FotosHotelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          createMany: {
            args: Prisma.FotosHotelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FotosHotelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>[]
          }
          delete: {
            args: Prisma.FotosHotelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          update: {
            args: Prisma.FotosHotelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          deleteMany: {
            args: Prisma.FotosHotelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FotosHotelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FotosHotelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotosHotelPayload>
          }
          aggregate: {
            args: Prisma.FotosHotelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFotosHotel>
          }
          groupBy: {
            args: Prisma.FotosHotelGroupByArgs<ExtArgs>
            result: $Utils.Optional<FotosHotelGroupByOutputType>[]
          }
          count: {
            args: Prisma.FotosHotelCountArgs<ExtArgs>
            result: $Utils.Optional<FotosHotelCountAggregateOutputType> | number
          }
        }
      }
      Hotel: {
        payload: Prisma.$HotelPayload<ExtArgs>
        fields: Prisma.HotelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HotelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HotelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          findFirst: {
            args: Prisma.HotelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HotelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          findMany: {
            args: Prisma.HotelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>[]
          }
          create: {
            args: Prisma.HotelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          createMany: {
            args: Prisma.HotelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HotelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>[]
          }
          delete: {
            args: Prisma.HotelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          update: {
            args: Prisma.HotelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          deleteMany: {
            args: Prisma.HotelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HotelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HotelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HotelPayload>
          }
          aggregate: {
            args: Prisma.HotelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHotel>
          }
          groupBy: {
            args: Prisma.HotelGroupByArgs<ExtArgs>
            result: $Utils.Optional<HotelGroupByOutputType>[]
          }
          count: {
            args: Prisma.HotelCountArgs<ExtArgs>
            result: $Utils.Optional<HotelCountAggregateOutputType> | number
          }
        }
      }
      Avaliacao: {
        payload: Prisma.$AvaliacaoPayload<ExtArgs>
        fields: Prisma.AvaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findFirst: {
            args: Prisma.AvaliacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findMany: {
            args: Prisma.AvaliacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          create: {
            args: Prisma.AvaliacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          createMany: {
            args: Prisma.AvaliacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AvaliacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          delete: {
            args: Prisma.AvaliacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          update: {
            args: Prisma.AvaliacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.AvaliacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AvaliacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          aggregate: {
            args: Prisma.AvaliacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliacao>
          }
          groupBy: {
            args: Prisma.AvaliacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoCountAggregateOutputType> | number
          }
        }
      }
      Descricao_detalhada: {
        payload: Prisma.$Descricao_detalhadaPayload<ExtArgs>
        fields: Prisma.Descricao_detalhadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Descricao_detalhadaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Descricao_detalhadaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          findFirst: {
            args: Prisma.Descricao_detalhadaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Descricao_detalhadaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          findMany: {
            args: Prisma.Descricao_detalhadaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>[]
          }
          create: {
            args: Prisma.Descricao_detalhadaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          createMany: {
            args: Prisma.Descricao_detalhadaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Descricao_detalhadaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>[]
          }
          delete: {
            args: Prisma.Descricao_detalhadaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          update: {
            args: Prisma.Descricao_detalhadaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          deleteMany: {
            args: Prisma.Descricao_detalhadaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Descricao_detalhadaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Descricao_detalhadaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Descricao_detalhadaPayload>
          }
          aggregate: {
            args: Prisma.Descricao_detalhadaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescricao_detalhada>
          }
          groupBy: {
            args: Prisma.Descricao_detalhadaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Descricao_detalhadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Descricao_detalhadaCountArgs<ExtArgs>
            result: $Utils.Optional<Descricao_detalhadaCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Proprietario: {
        payload: Prisma.$ProprietarioPayload<ExtArgs>
        fields: Prisma.ProprietarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProprietarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProprietarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          findFirst: {
            args: Prisma.ProprietarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProprietarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          findMany: {
            args: Prisma.ProprietarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>[]
          }
          create: {
            args: Prisma.ProprietarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          createMany: {
            args: Prisma.ProprietarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProprietarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>[]
          }
          delete: {
            args: Prisma.ProprietarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          update: {
            args: Prisma.ProprietarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          deleteMany: {
            args: Prisma.ProprietarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProprietarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProprietarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioPayload>
          }
          aggregate: {
            args: Prisma.ProprietarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProprietario>
          }
          groupBy: {
            args: Prisma.ProprietarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProprietarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProprietarioCountArgs<ExtArgs>
            result: $Utils.Optional<ProprietarioCountAggregateOutputType> | number
          }
        }
      }
      FotoUsuario: {
        payload: Prisma.$FotoUsuarioPayload<ExtArgs>
        fields: Prisma.FotoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FotoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FotoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.FotoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FotoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          findMany: {
            args: Prisma.FotoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>[]
          }
          create: {
            args: Prisma.FotoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          createMany: {
            args: Prisma.FotoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FotoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.FotoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          update: {
            args: Prisma.FotoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.FotoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FotoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FotoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FotoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.FotoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFotoUsuario>
          }
          groupBy: {
            args: Prisma.FotoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FotoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FotoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<FotoUsuarioCountAggregateOutputType> | number
          }
        }
      }
      Notificacao: {
        payload: Prisma.$NotificacaoPayload<ExtArgs>
        fields: Prisma.NotificacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findFirst: {
            args: Prisma.NotificacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          findMany: {
            args: Prisma.NotificacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          create: {
            args: Prisma.NotificacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          createMany: {
            args: Prisma.NotificacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>[]
          }
          delete: {
            args: Prisma.NotificacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          update: {
            args: Prisma.NotificacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          deleteMany: {
            args: Prisma.NotificacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacaoPayload>
          }
          aggregate: {
            args: Prisma.NotificacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacao>
          }
          groupBy: {
            args: Prisma.NotificacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacaoCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacaoCountAggregateOutputType> | number
          }
        }
      }
      Acomodacao: {
        payload: Prisma.$AcomodacaoPayload<ExtArgs>
        fields: Prisma.AcomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AcomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AcomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          findFirst: {
            args: Prisma.AcomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AcomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          findMany: {
            args: Prisma.AcomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>[]
          }
          create: {
            args: Prisma.AcomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          createMany: {
            args: Prisma.AcomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AcomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>[]
          }
          delete: {
            args: Prisma.AcomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          update: {
            args: Prisma.AcomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.AcomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AcomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AcomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AcomodacaoPayload>
          }
          aggregate: {
            args: Prisma.AcomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAcomodacao>
          }
          groupBy: {
            args: Prisma.AcomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AcomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AcomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AcomodacaoCountAggregateOutputType> | number
          }
        }
      }
      TipoAcomodacao: {
        payload: Prisma.$TipoAcomodacaoPayload<ExtArgs>
        fields: Prisma.TipoAcomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoAcomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoAcomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          findFirst: {
            args: Prisma.TipoAcomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoAcomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          findMany: {
            args: Prisma.TipoAcomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>[]
          }
          create: {
            args: Prisma.TipoAcomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          createMany: {
            args: Prisma.TipoAcomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoAcomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>[]
          }
          delete: {
            args: Prisma.TipoAcomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          update: {
            args: Prisma.TipoAcomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.TipoAcomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoAcomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoAcomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAcomodacaoPayload>
          }
          aggregate: {
            args: Prisma.TipoAcomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoAcomodacao>
          }
          groupBy: {
            args: Prisma.TipoAcomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoAcomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoAcomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoAcomodacaoCountAggregateOutputType> | number
          }
        }
      }
      Foto_Acomodacao: {
        payload: Prisma.$Foto_AcomodacaoPayload<ExtArgs>
        fields: Prisma.Foto_AcomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Foto_AcomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Foto_AcomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          findFirst: {
            args: Prisma.Foto_AcomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Foto_AcomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          findMany: {
            args: Prisma.Foto_AcomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>[]
          }
          create: {
            args: Prisma.Foto_AcomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          createMany: {
            args: Prisma.Foto_AcomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Foto_AcomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>[]
          }
          delete: {
            args: Prisma.Foto_AcomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          update: {
            args: Prisma.Foto_AcomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.Foto_AcomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Foto_AcomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Foto_AcomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_AcomodacaoPayload>
          }
          aggregate: {
            args: Prisma.Foto_AcomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoto_Acomodacao>
          }
          groupBy: {
            args: Prisma.Foto_AcomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Foto_AcomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Foto_AcomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<Foto_AcomodacaoCountAggregateOutputType> | number
          }
        }
      }
      Reserva: {
        payload: Prisma.$ReservaPayload<ExtArgs>
        fields: Prisma.ReservaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findFirst: {
            args: Prisma.ReservaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findMany: {
            args: Prisma.ReservaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          create: {
            args: Prisma.ReservaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          createMany: {
            args: Prisma.ReservaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          delete: {
            args: Prisma.ReservaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          update: {
            args: Prisma.ReservaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          deleteMany: {
            args: Prisma.ReservaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReservaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          aggregate: {
            args: Prisma.ReservaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReserva>
          }
          groupBy: {
            args: Prisma.ReservaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaCountAggregateOutputType> | number
          }
        }
      }
      Gerenciamento_ganhos_acomodacao: {
        payload: Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>
        fields: Prisma.Gerenciamento_ganhos_acomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          findFirst: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          findMany: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>[]
          }
          create: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          createMany: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>[]
          }
          delete: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          update: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload>
          }
          aggregate: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGerenciamento_ganhos_acomodacao>
          }
          groupBy: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Gerenciamento_ganhos_acomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Gerenciamento_ganhos_acomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<Gerenciamento_ganhos_acomodacaoCountAggregateOutputType> | number
          }
        }
      }
      Avaliacao_acomodacao: {
        payload: Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>
        fields: Prisma.Avaliacao_acomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Avaliacao_acomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Avaliacao_acomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          findFirst: {
            args: Prisma.Avaliacao_acomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Avaliacao_acomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          findMany: {
            args: Prisma.Avaliacao_acomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>[]
          }
          create: {
            args: Prisma.Avaliacao_acomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          createMany: {
            args: Prisma.Avaliacao_acomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Avaliacao_acomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>[]
          }
          delete: {
            args: Prisma.Avaliacao_acomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          update: {
            args: Prisma.Avaliacao_acomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.Avaliacao_acomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Avaliacao_acomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Avaliacao_acomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Avaliacao_acomodacaoPayload>
          }
          aggregate: {
            args: Prisma.Avaliacao_acomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliacao_acomodacao>
          }
          groupBy: {
            args: Prisma.Avaliacao_acomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Avaliacao_acomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Avaliacao_acomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<Avaliacao_acomodacaoCountAggregateOutputType> | number
          }
        }
      }
      Cobranca: {
        payload: Prisma.$CobrancaPayload<ExtArgs>
        fields: Prisma.CobrancaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CobrancaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CobrancaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          findFirst: {
            args: Prisma.CobrancaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CobrancaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          findMany: {
            args: Prisma.CobrancaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>[]
          }
          create: {
            args: Prisma.CobrancaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          createMany: {
            args: Prisma.CobrancaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CobrancaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>[]
          }
          delete: {
            args: Prisma.CobrancaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          update: {
            args: Prisma.CobrancaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          deleteMany: {
            args: Prisma.CobrancaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CobrancaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CobrancaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobrancaPayload>
          }
          aggregate: {
            args: Prisma.CobrancaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCobranca>
          }
          groupBy: {
            args: Prisma.CobrancaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CobrancaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CobrancaCountArgs<ExtArgs>
            result: $Utils.Optional<CobrancaCountAggregateOutputType> | number
          }
        }
      }
      Gerenciamento_ganhos: {
        payload: Prisma.$Gerenciamento_ganhosPayload<ExtArgs>
        fields: Prisma.Gerenciamento_ganhosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Gerenciamento_ganhosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Gerenciamento_ganhosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          findFirst: {
            args: Prisma.Gerenciamento_ganhosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Gerenciamento_ganhosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          findMany: {
            args: Prisma.Gerenciamento_ganhosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>[]
          }
          create: {
            args: Prisma.Gerenciamento_ganhosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          createMany: {
            args: Prisma.Gerenciamento_ganhosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Gerenciamento_ganhosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>[]
          }
          delete: {
            args: Prisma.Gerenciamento_ganhosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          update: {
            args: Prisma.Gerenciamento_ganhosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          deleteMany: {
            args: Prisma.Gerenciamento_ganhosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Gerenciamento_ganhosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Gerenciamento_ganhosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Gerenciamento_ganhosPayload>
          }
          aggregate: {
            args: Prisma.Gerenciamento_ganhosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGerenciamento_ganhos>
          }
          groupBy: {
            args: Prisma.Gerenciamento_ganhosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Gerenciamento_ganhosGroupByOutputType>[]
          }
          count: {
            args: Prisma.Gerenciamento_ganhosCountArgs<ExtArgs>
            result: $Utils.Optional<Gerenciamento_ganhosCountAggregateOutputType> | number
          }
        }
      }
      Interesse: {
        payload: Prisma.$InteressePayload<ExtArgs>
        fields: Prisma.InteresseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InteresseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InteresseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          findFirst: {
            args: Prisma.InteresseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InteresseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          findMany: {
            args: Prisma.InteresseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>[]
          }
          create: {
            args: Prisma.InteresseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          createMany: {
            args: Prisma.InteresseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InteresseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>[]
          }
          delete: {
            args: Prisma.InteresseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          update: {
            args: Prisma.InteresseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          deleteMany: {
            args: Prisma.InteresseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InteresseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InteresseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteressePayload>
          }
          aggregate: {
            args: Prisma.InteresseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInteresse>
          }
          groupBy: {
            args: Prisma.InteresseGroupByArgs<ExtArgs>
            result: $Utils.Optional<InteresseGroupByOutputType>[]
          }
          count: {
            args: Prisma.InteresseCountArgs<ExtArgs>
            result: $Utils.Optional<InteresseCountAggregateOutputType> | number
          }
        }
      }
      ProprietarioNoInteresse: {
        payload: Prisma.$ProprietarioNoInteressePayload<ExtArgs>
        fields: Prisma.ProprietarioNoInteresseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProprietarioNoInteresseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProprietarioNoInteresseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          findFirst: {
            args: Prisma.ProprietarioNoInteresseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProprietarioNoInteresseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          findMany: {
            args: Prisma.ProprietarioNoInteresseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>[]
          }
          create: {
            args: Prisma.ProprietarioNoInteresseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          createMany: {
            args: Prisma.ProprietarioNoInteresseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProprietarioNoInteresseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>[]
          }
          delete: {
            args: Prisma.ProprietarioNoInteresseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          update: {
            args: Prisma.ProprietarioNoInteresseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          deleteMany: {
            args: Prisma.ProprietarioNoInteresseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProprietarioNoInteresseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProprietarioNoInteresseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProprietarioNoInteressePayload>
          }
          aggregate: {
            args: Prisma.ProprietarioNoInteresseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProprietarioNoInteresse>
          }
          groupBy: {
            args: Prisma.ProprietarioNoInteresseGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProprietarioNoInteresseGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProprietarioNoInteresseCountArgs<ExtArgs>
            result: $Utils.Optional<ProprietarioNoInteresseCountAggregateOutputType> | number
          }
        }
      }
      Cupom: {
        payload: Prisma.$CupomPayload<ExtArgs>
        fields: Prisma.CupomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CupomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CupomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          findFirst: {
            args: Prisma.CupomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CupomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          findMany: {
            args: Prisma.CupomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>[]
          }
          create: {
            args: Prisma.CupomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          createMany: {
            args: Prisma.CupomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CupomCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>[]
          }
          delete: {
            args: Prisma.CupomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          update: {
            args: Prisma.CupomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          deleteMany: {
            args: Prisma.CupomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CupomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CupomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CupomPayload>
          }
          aggregate: {
            args: Prisma.CupomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCupom>
          }
          groupBy: {
            args: Prisma.CupomGroupByArgs<ExtArgs>
            result: $Utils.Optional<CupomGroupByOutputType>[]
          }
          count: {
            args: Prisma.CupomCountArgs<ExtArgs>
            result: $Utils.Optional<CupomCountAggregateOutputType> | number
          }
        }
      }
      ClienteNoCupom: {
        payload: Prisma.$ClienteNoCupomPayload<ExtArgs>
        fields: Prisma.ClienteNoCupomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteNoCupomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteNoCupomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          findFirst: {
            args: Prisma.ClienteNoCupomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteNoCupomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          findMany: {
            args: Prisma.ClienteNoCupomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>[]
          }
          create: {
            args: Prisma.ClienteNoCupomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          createMany: {
            args: Prisma.ClienteNoCupomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteNoCupomCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>[]
          }
          delete: {
            args: Prisma.ClienteNoCupomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          update: {
            args: Prisma.ClienteNoCupomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          deleteMany: {
            args: Prisma.ClienteNoCupomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteNoCupomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteNoCupomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteNoCupomPayload>
          }
          aggregate: {
            args: Prisma.ClienteNoCupomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClienteNoCupom>
          }
          groupBy: {
            args: Prisma.ClienteNoCupomGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteNoCupomGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteNoCupomCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteNoCupomCountAggregateOutputType> | number
          }
        }
      }
      Favorito: {
        payload: Prisma.$FavoritoPayload<ExtArgs>
        fields: Prisma.FavoritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findFirst: {
            args: Prisma.FavoritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findMany: {
            args: Prisma.FavoritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          create: {
            args: Prisma.FavoritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          createMany: {
            args: Prisma.FavoritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          delete: {
            args: Prisma.FavoritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          update: {
            args: Prisma.FavoritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          deleteMany: {
            args: Prisma.FavoritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          aggregate: {
            args: Prisma.FavoritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorito>
          }
          groupBy: {
            args: Prisma.FavoritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoritoCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritoCountAggregateOutputType> | number
          }
        }
      }
      ComodidadeAcomodacao: {
        payload: Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>
        fields: Prisma.ComodidadeAcomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComodidadeAcomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComodidadeAcomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          findFirst: {
            args: Prisma.ComodidadeAcomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComodidadeAcomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          findMany: {
            args: Prisma.ComodidadeAcomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>[]
          }
          create: {
            args: Prisma.ComodidadeAcomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          createMany: {
            args: Prisma.ComodidadeAcomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComodidadeAcomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>[]
          }
          delete: {
            args: Prisma.ComodidadeAcomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          update: {
            args: Prisma.ComodidadeAcomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.ComodidadeAcomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComodidadeAcomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ComodidadeAcomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeAcomodacaoPayload>
          }
          aggregate: {
            args: Prisma.ComodidadeAcomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComodidadeAcomodacao>
          }
          groupBy: {
            args: Prisma.ComodidadeAcomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeAcomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComodidadeAcomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeAcomodacaoCountAggregateOutputType> | number
          }
        }
      }
      ComodidadeNaAcomodacao: {
        payload: Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>
        fields: Prisma.ComodidadeNaAcomodacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComodidadeNaAcomodacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComodidadeNaAcomodacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          findFirst: {
            args: Prisma.ComodidadeNaAcomodacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComodidadeNaAcomodacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          findMany: {
            args: Prisma.ComodidadeNaAcomodacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>[]
          }
          create: {
            args: Prisma.ComodidadeNaAcomodacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          createMany: {
            args: Prisma.ComodidadeNaAcomodacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComodidadeNaAcomodacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>[]
          }
          delete: {
            args: Prisma.ComodidadeNaAcomodacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          update: {
            args: Prisma.ComodidadeNaAcomodacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          deleteMany: {
            args: Prisma.ComodidadeNaAcomodacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComodidadeNaAcomodacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ComodidadeNaAcomodacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNaAcomodacaoPayload>
          }
          aggregate: {
            args: Prisma.ComodidadeNaAcomodacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComodidadeNaAcomodacao>
          }
          groupBy: {
            args: Prisma.ComodidadeNaAcomodacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeNaAcomodacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComodidadeNaAcomodacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeNaAcomodacaoCountAggregateOutputType> | number
          }
        }
      }
      ComodidadeHotel: {
        payload: Prisma.$ComodidadeHotelPayload<ExtArgs>
        fields: Prisma.ComodidadeHotelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComodidadeHotelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComodidadeHotelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          findFirst: {
            args: Prisma.ComodidadeHotelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComodidadeHotelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          findMany: {
            args: Prisma.ComodidadeHotelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>[]
          }
          create: {
            args: Prisma.ComodidadeHotelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          createMany: {
            args: Prisma.ComodidadeHotelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComodidadeHotelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>[]
          }
          delete: {
            args: Prisma.ComodidadeHotelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          update: {
            args: Prisma.ComodidadeHotelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          deleteMany: {
            args: Prisma.ComodidadeHotelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComodidadeHotelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ComodidadeHotelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeHotelPayload>
          }
          aggregate: {
            args: Prisma.ComodidadeHotelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComodidadeHotel>
          }
          groupBy: {
            args: Prisma.ComodidadeHotelGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeHotelGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComodidadeHotelCountArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeHotelCountAggregateOutputType> | number
          }
        }
      }
      ComodidadeNoHotel: {
        payload: Prisma.$ComodidadeNoHotelPayload<ExtArgs>
        fields: Prisma.ComodidadeNoHotelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComodidadeNoHotelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComodidadeNoHotelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          findFirst: {
            args: Prisma.ComodidadeNoHotelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComodidadeNoHotelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          findMany: {
            args: Prisma.ComodidadeNoHotelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>[]
          }
          create: {
            args: Prisma.ComodidadeNoHotelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          createMany: {
            args: Prisma.ComodidadeNoHotelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComodidadeNoHotelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>[]
          }
          delete: {
            args: Prisma.ComodidadeNoHotelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          update: {
            args: Prisma.ComodidadeNoHotelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          deleteMany: {
            args: Prisma.ComodidadeNoHotelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComodidadeNoHotelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ComodidadeNoHotelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComodidadeNoHotelPayload>
          }
          aggregate: {
            args: Prisma.ComodidadeNoHotelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComodidadeNoHotel>
          }
          groupBy: {
            args: Prisma.ComodidadeNoHotelGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeNoHotelGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComodidadeNoHotelCountArgs<ExtArgs>
            result: $Utils.Optional<ComodidadeNoHotelCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EnderecoCountOutputType
   */

  export type EnderecoCountOutputType = {
    Hotel: number
  }

  export type EnderecoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Hotel?: boolean | EnderecoCountOutputTypeCountHotelArgs
  }

  // Custom InputTypes
  /**
   * EnderecoCountOutputType without action
   */
  export type EnderecoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoCountOutputType
     */
    select?: EnderecoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EnderecoCountOutputType without action
   */
  export type EnderecoCountOutputTypeCountHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HotelWhereInput
  }


  /**
   * Count Type HotelCountOutputType
   */

  export type HotelCountOutputType = {
    Acomodacao: number
    Avaliacao: number
    ComodidadeNoHotel: number
    Favorito: number
    FotosHotel: number
  }

  export type HotelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacao?: boolean | HotelCountOutputTypeCountAcomodacaoArgs
    Avaliacao?: boolean | HotelCountOutputTypeCountAvaliacaoArgs
    ComodidadeNoHotel?: boolean | HotelCountOutputTypeCountComodidadeNoHotelArgs
    Favorito?: boolean | HotelCountOutputTypeCountFavoritoArgs
    FotosHotel?: boolean | HotelCountOutputTypeCountFotosHotelArgs
  }

  // Custom InputTypes
  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HotelCountOutputType
     */
    select?: HotelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeCountAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AcomodacaoWhereInput
  }

  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeCountAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }

  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeCountComodidadeNoHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNoHotelWhereInput
  }

  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeCountFavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }

  /**
   * HotelCountOutputType without action
   */
  export type HotelCountOutputTypeCountFotosHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FotosHotelWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    FotoUsuario: number
    Notificacao: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    FotoUsuario?: boolean | UsuarioCountOutputTypeCountFotoUsuarioArgs
    Notificacao?: boolean | UsuarioCountOutputTypeCountNotificacaoArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountFotoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FotoUsuarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    Avaliacao: number
    Avaliacao_acomodacao: number
    Cupom: number
    Favorito: number
    Reserva: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Avaliacao?: boolean | ClientCountOutputTypeCountAvaliacaoArgs
    Avaliacao_acomodacao?: boolean | ClientCountOutputTypeCountAvaliacao_acomodacaoArgs
    Cupom?: boolean | ClientCountOutputTypeCountCupomArgs
    Favorito?: boolean | ClientCountOutputTypeCountFavoritoArgs
    Reserva?: boolean | ClientCountOutputTypeCountReservaArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountAvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountAvaliacao_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Avaliacao_acomodacaoWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountCupomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteNoCupomWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountFavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountReservaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }


  /**
   * Count Type ProprietarioCountOutputType
   */

  export type ProprietarioCountOutputType = {
    Gerenciamento_ganhos: number
    Interesse: number
  }

  export type ProprietarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Gerenciamento_ganhos?: boolean | ProprietarioCountOutputTypeCountGerenciamento_ganhosArgs
    Interesse?: boolean | ProprietarioCountOutputTypeCountInteresseArgs
  }

  // Custom InputTypes
  /**
   * ProprietarioCountOutputType without action
   */
  export type ProprietarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioCountOutputType
     */
    select?: ProprietarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProprietarioCountOutputType without action
   */
  export type ProprietarioCountOutputTypeCountGerenciamento_ganhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Gerenciamento_ganhosWhereInput
  }

  /**
   * ProprietarioCountOutputType without action
   */
  export type ProprietarioCountOutputTypeCountInteresseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProprietarioNoInteresseWhereInput
  }


  /**
   * Count Type AcomodacaoCountOutputType
   */

  export type AcomodacaoCountOutputType = {
    Avaliacao_acomodacao: number
    ComodidadeNaAcomodacao: number
    FotoAcomodacao: number
    Gerenciamento_ganhos: number
    Reserva: number
  }

  export type AcomodacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Avaliacao_acomodacao?: boolean | AcomodacaoCountOutputTypeCountAvaliacao_acomodacaoArgs
    ComodidadeNaAcomodacao?: boolean | AcomodacaoCountOutputTypeCountComodidadeNaAcomodacaoArgs
    FotoAcomodacao?: boolean | AcomodacaoCountOutputTypeCountFotoAcomodacaoArgs
    Gerenciamento_ganhos?: boolean | AcomodacaoCountOutputTypeCountGerenciamento_ganhosArgs
    Reserva?: boolean | AcomodacaoCountOutputTypeCountReservaArgs
  }

  // Custom InputTypes
  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AcomodacaoCountOutputType
     */
    select?: AcomodacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeCountAvaliacao_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Avaliacao_acomodacaoWhereInput
  }

  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeCountComodidadeNaAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNaAcomodacaoWhereInput
  }

  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeCountFotoAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Foto_AcomodacaoWhereInput
  }

  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeCountGerenciamento_ganhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
  }

  /**
   * AcomodacaoCountOutputType without action
   */
  export type AcomodacaoCountOutputTypeCountReservaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }


  /**
   * Count Type TipoAcomodacaoCountOutputType
   */

  export type TipoAcomodacaoCountOutputType = {
    Acomodacaoes: number
  }

  export type TipoAcomodacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacaoes?: boolean | TipoAcomodacaoCountOutputTypeCountAcomodacaoesArgs
  }

  // Custom InputTypes
  /**
   * TipoAcomodacaoCountOutputType without action
   */
  export type TipoAcomodacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacaoCountOutputType
     */
    select?: TipoAcomodacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoAcomodacaoCountOutputType without action
   */
  export type TipoAcomodacaoCountOutputTypeCountAcomodacaoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AcomodacaoWhereInput
  }


  /**
   * Count Type InteresseCountOutputType
   */

  export type InteresseCountOutputType = {
    Proprietario: number
  }

  export type InteresseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Proprietario?: boolean | InteresseCountOutputTypeCountProprietarioArgs
  }

  // Custom InputTypes
  /**
   * InteresseCountOutputType without action
   */
  export type InteresseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteresseCountOutputType
     */
    select?: InteresseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InteresseCountOutputType without action
   */
  export type InteresseCountOutputTypeCountProprietarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProprietarioNoInteresseWhereInput
  }


  /**
   * Count Type CupomCountOutputType
   */

  export type CupomCountOutputType = {
    Cliente: number
  }

  export type CupomCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Cliente?: boolean | CupomCountOutputTypeCountClienteArgs
  }

  // Custom InputTypes
  /**
   * CupomCountOutputType without action
   */
  export type CupomCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CupomCountOutputType
     */
    select?: CupomCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CupomCountOutputType without action
   */
  export type CupomCountOutputTypeCountClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteNoCupomWhereInput
  }


  /**
   * Count Type ComodidadeAcomodacaoCountOutputType
   */

  export type ComodidadeAcomodacaoCountOutputType = {
    Acomodacao: number
  }

  export type ComodidadeAcomodacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacao?: boolean | ComodidadeAcomodacaoCountOutputTypeCountAcomodacaoArgs
  }

  // Custom InputTypes
  /**
   * ComodidadeAcomodacaoCountOutputType without action
   */
  export type ComodidadeAcomodacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacaoCountOutputType
     */
    select?: ComodidadeAcomodacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComodidadeAcomodacaoCountOutputType without action
   */
  export type ComodidadeAcomodacaoCountOutputTypeCountAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNaAcomodacaoWhereInput
  }


  /**
   * Count Type ComodidadeHotelCountOutputType
   */

  export type ComodidadeHotelCountOutputType = {
    Hotel: number
  }

  export type ComodidadeHotelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Hotel?: boolean | ComodidadeHotelCountOutputTypeCountHotelArgs
  }

  // Custom InputTypes
  /**
   * ComodidadeHotelCountOutputType without action
   */
  export type ComodidadeHotelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotelCountOutputType
     */
    select?: ComodidadeHotelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComodidadeHotelCountOutputType without action
   */
  export type ComodidadeHotelCountOutputTypeCountHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNoHotelWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Endereco
   */

  export type AggregateEndereco = {
    _count: EnderecoCountAggregateOutputType | null
    _avg: EnderecoAvgAggregateOutputType | null
    _sum: EnderecoSumAggregateOutputType | null
    _min: EnderecoMinAggregateOutputType | null
    _max: EnderecoMaxAggregateOutputType | null
  }

  export type EnderecoAvgAggregateOutputType = {
    id: number | null
    numero: number | null
  }

  export type EnderecoSumAggregateOutputType = {
    id: number | null
    numero: number | null
  }

  export type EnderecoMinAggregateOutputType = {
    id: number | null
    numero: number | null
    rua: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    pais: string | null
  }

  export type EnderecoMaxAggregateOutputType = {
    id: number | null
    numero: number | null
    rua: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    pais: string | null
  }

  export type EnderecoCountAggregateOutputType = {
    id: number
    numero: number
    rua: number
    bairro: number
    cidade: number
    estado: number
    pais: number
    _all: number
  }


  export type EnderecoAvgAggregateInputType = {
    id?: true
    numero?: true
  }

  export type EnderecoSumAggregateInputType = {
    id?: true
    numero?: true
  }

  export type EnderecoMinAggregateInputType = {
    id?: true
    numero?: true
    rua?: true
    bairro?: true
    cidade?: true
    estado?: true
    pais?: true
  }

  export type EnderecoMaxAggregateInputType = {
    id?: true
    numero?: true
    rua?: true
    bairro?: true
    cidade?: true
    estado?: true
    pais?: true
  }

  export type EnderecoCountAggregateInputType = {
    id?: true
    numero?: true
    rua?: true
    bairro?: true
    cidade?: true
    estado?: true
    pais?: true
    _all?: true
  }

  export type EnderecoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Endereco to aggregate.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Enderecos
    **/
    _count?: true | EnderecoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnderecoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnderecoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnderecoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnderecoMaxAggregateInputType
  }

  export type GetEnderecoAggregateType<T extends EnderecoAggregateArgs> = {
        [P in keyof T & keyof AggregateEndereco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEndereco[P]>
      : GetScalarType<T[P], AggregateEndereco[P]>
  }




  export type EnderecoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoWhereInput
    orderBy?: EnderecoOrderByWithAggregationInput | EnderecoOrderByWithAggregationInput[]
    by: EnderecoScalarFieldEnum[] | EnderecoScalarFieldEnum
    having?: EnderecoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnderecoCountAggregateInputType | true
    _avg?: EnderecoAvgAggregateInputType
    _sum?: EnderecoSumAggregateInputType
    _min?: EnderecoMinAggregateInputType
    _max?: EnderecoMaxAggregateInputType
  }

  export type EnderecoGroupByOutputType = {
    id: number
    numero: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
    _count: EnderecoCountAggregateOutputType | null
    _avg: EnderecoAvgAggregateOutputType | null
    _sum: EnderecoSumAggregateOutputType | null
    _min: EnderecoMinAggregateOutputType | null
    _max: EnderecoMaxAggregateOutputType | null
  }

  type GetEnderecoGroupByPayload<T extends EnderecoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnderecoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnderecoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnderecoGroupByOutputType[P]>
            : GetScalarType<T[P], EnderecoGroupByOutputType[P]>
        }
      >
    >


  export type EnderecoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    rua?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    pais?: boolean
    Hotel?: boolean | Endereco$HotelArgs<ExtArgs>
    _count?: boolean | EnderecoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["endereco"]>

  export type EnderecoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    rua?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    pais?: boolean
  }, ExtArgs["result"]["endereco"]>

  export type EnderecoSelectScalar = {
    id?: boolean
    numero?: boolean
    rua?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    pais?: boolean
  }

  export type EnderecoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Hotel?: boolean | Endereco$HotelArgs<ExtArgs>
    _count?: boolean | EnderecoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EnderecoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EnderecoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Endereco"
    objects: {
      Hotel: Prisma.$HotelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numero: number | null
      rua: string
      bairro: string
      cidade: string
      estado: string
      pais: string
    }, ExtArgs["result"]["endereco"]>
    composites: {}
  }

  type EnderecoGetPayload<S extends boolean | null | undefined | EnderecoDefaultArgs> = $Result.GetResult<Prisma.$EnderecoPayload, S>

  type EnderecoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EnderecoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EnderecoCountAggregateInputType | true
    }

  export interface EnderecoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Endereco'], meta: { name: 'Endereco' } }
    /**
     * Find zero or one Endereco that matches the filter.
     * @param {EnderecoFindUniqueArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnderecoFindUniqueArgs>(args: SelectSubset<T, EnderecoFindUniqueArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Endereco that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EnderecoFindUniqueOrThrowArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnderecoFindUniqueOrThrowArgs>(args: SelectSubset<T, EnderecoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Endereco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindFirstArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnderecoFindFirstArgs>(args?: SelectSubset<T, EnderecoFindFirstArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Endereco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindFirstOrThrowArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnderecoFindFirstOrThrowArgs>(args?: SelectSubset<T, EnderecoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Enderecos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Enderecos
     * const enderecos = await prisma.endereco.findMany()
     * 
     * // Get first 10 Enderecos
     * const enderecos = await prisma.endereco.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const enderecoWithIdOnly = await prisma.endereco.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EnderecoFindManyArgs>(args?: SelectSubset<T, EnderecoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Endereco.
     * @param {EnderecoCreateArgs} args - Arguments to create a Endereco.
     * @example
     * // Create one Endereco
     * const Endereco = await prisma.endereco.create({
     *   data: {
     *     // ... data to create a Endereco
     *   }
     * })
     * 
     */
    create<T extends EnderecoCreateArgs>(args: SelectSubset<T, EnderecoCreateArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Enderecos.
     * @param {EnderecoCreateManyArgs} args - Arguments to create many Enderecos.
     * @example
     * // Create many Enderecos
     * const endereco = await prisma.endereco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnderecoCreateManyArgs>(args?: SelectSubset<T, EnderecoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Enderecos and returns the data saved in the database.
     * @param {EnderecoCreateManyAndReturnArgs} args - Arguments to create many Enderecos.
     * @example
     * // Create many Enderecos
     * const endereco = await prisma.endereco.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Enderecos and only return the `id`
     * const enderecoWithIdOnly = await prisma.endereco.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnderecoCreateManyAndReturnArgs>(args?: SelectSubset<T, EnderecoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Endereco.
     * @param {EnderecoDeleteArgs} args - Arguments to delete one Endereco.
     * @example
     * // Delete one Endereco
     * const Endereco = await prisma.endereco.delete({
     *   where: {
     *     // ... filter to delete one Endereco
     *   }
     * })
     * 
     */
    delete<T extends EnderecoDeleteArgs>(args: SelectSubset<T, EnderecoDeleteArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Endereco.
     * @param {EnderecoUpdateArgs} args - Arguments to update one Endereco.
     * @example
     * // Update one Endereco
     * const endereco = await prisma.endereco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnderecoUpdateArgs>(args: SelectSubset<T, EnderecoUpdateArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Enderecos.
     * @param {EnderecoDeleteManyArgs} args - Arguments to filter Enderecos to delete.
     * @example
     * // Delete a few Enderecos
     * const { count } = await prisma.endereco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnderecoDeleteManyArgs>(args?: SelectSubset<T, EnderecoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Enderecos
     * const endereco = await prisma.endereco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnderecoUpdateManyArgs>(args: SelectSubset<T, EnderecoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Endereco.
     * @param {EnderecoUpsertArgs} args - Arguments to update or create a Endereco.
     * @example
     * // Update or create a Endereco
     * const endereco = await prisma.endereco.upsert({
     *   create: {
     *     // ... data to create a Endereco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Endereco we want to update
     *   }
     * })
     */
    upsert<T extends EnderecoUpsertArgs>(args: SelectSubset<T, EnderecoUpsertArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoCountArgs} args - Arguments to filter Enderecos to count.
     * @example
     * // Count the number of Enderecos
     * const count = await prisma.endereco.count({
     *   where: {
     *     // ... the filter for the Enderecos we want to count
     *   }
     * })
    **/
    count<T extends EnderecoCountArgs>(
      args?: Subset<T, EnderecoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnderecoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnderecoAggregateArgs>(args: Subset<T, EnderecoAggregateArgs>): Prisma.PrismaPromise<GetEnderecoAggregateType<T>>

    /**
     * Group by Endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnderecoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnderecoGroupByArgs['orderBy'] }
        : { orderBy?: EnderecoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnderecoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnderecoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Endereco model
   */
  readonly fields: EnderecoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Endereco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnderecoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Hotel<T extends Endereco$HotelArgs<ExtArgs> = {}>(args?: Subset<T, Endereco$HotelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Endereco model
   */ 
  interface EnderecoFieldRefs {
    readonly id: FieldRef<"Endereco", 'Int'>
    readonly numero: FieldRef<"Endereco", 'Int'>
    readonly rua: FieldRef<"Endereco", 'String'>
    readonly bairro: FieldRef<"Endereco", 'String'>
    readonly cidade: FieldRef<"Endereco", 'String'>
    readonly estado: FieldRef<"Endereco", 'String'>
    readonly pais: FieldRef<"Endereco", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Endereco findUnique
   */
  export type EnderecoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco findUniqueOrThrow
   */
  export type EnderecoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco findFirst
   */
  export type EnderecoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Enderecos.
     */
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco findFirstOrThrow
   */
  export type EnderecoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Enderecos.
     */
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco findMany
   */
  export type EnderecoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Enderecos to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco create
   */
  export type EnderecoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The data needed to create a Endereco.
     */
    data: XOR<EnderecoCreateInput, EnderecoUncheckedCreateInput>
  }

  /**
   * Endereco createMany
   */
  export type EnderecoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Enderecos.
     */
    data: EnderecoCreateManyInput | EnderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Endereco createManyAndReturn
   */
  export type EnderecoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Enderecos.
     */
    data: EnderecoCreateManyInput | EnderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Endereco update
   */
  export type EnderecoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The data needed to update a Endereco.
     */
    data: XOR<EnderecoUpdateInput, EnderecoUncheckedUpdateInput>
    /**
     * Choose, which Endereco to update.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco updateMany
   */
  export type EnderecoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Enderecos.
     */
    data: XOR<EnderecoUpdateManyMutationInput, EnderecoUncheckedUpdateManyInput>
    /**
     * Filter which Enderecos to update
     */
    where?: EnderecoWhereInput
  }

  /**
   * Endereco upsert
   */
  export type EnderecoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The filter to search for the Endereco to update in case it exists.
     */
    where: EnderecoWhereUniqueInput
    /**
     * In case the Endereco found by the `where` argument doesn't exist, create a new Endereco with this data.
     */
    create: XOR<EnderecoCreateInput, EnderecoUncheckedCreateInput>
    /**
     * In case the Endereco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnderecoUpdateInput, EnderecoUncheckedUpdateInput>
  }

  /**
   * Endereco delete
   */
  export type EnderecoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter which Endereco to delete.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco deleteMany
   */
  export type EnderecoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Enderecos to delete
     */
    where?: EnderecoWhereInput
  }

  /**
   * Endereco.Hotel
   */
  export type Endereco$HotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    where?: HotelWhereInput
    orderBy?: HotelOrderByWithRelationInput | HotelOrderByWithRelationInput[]
    cursor?: HotelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HotelScalarFieldEnum | HotelScalarFieldEnum[]
  }

  /**
   * Endereco without action
   */
  export type EnderecoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
  }


  /**
   * Model FotosHotel
   */

  export type AggregateFotosHotel = {
    _count: FotosHotelCountAggregateOutputType | null
    _avg: FotosHotelAvgAggregateOutputType | null
    _sum: FotosHotelSumAggregateOutputType | null
    _min: FotosHotelMinAggregateOutputType | null
    _max: FotosHotelMaxAggregateOutputType | null
  }

  export type FotosHotelAvgAggregateOutputType = {
    id: number | null
    hotelId: number | null
  }

  export type FotosHotelSumAggregateOutputType = {
    id: number | null
    hotelId: number | null
  }

  export type FotosHotelMinAggregateOutputType = {
    id: number | null
    url_foto: string | null
    hotelId: number | null
  }

  export type FotosHotelMaxAggregateOutputType = {
    id: number | null
    url_foto: string | null
    hotelId: number | null
  }

  export type FotosHotelCountAggregateOutputType = {
    id: number
    url_foto: number
    hotelId: number
    _all: number
  }


  export type FotosHotelAvgAggregateInputType = {
    id?: true
    hotelId?: true
  }

  export type FotosHotelSumAggregateInputType = {
    id?: true
    hotelId?: true
  }

  export type FotosHotelMinAggregateInputType = {
    id?: true
    url_foto?: true
    hotelId?: true
  }

  export type FotosHotelMaxAggregateInputType = {
    id?: true
    url_foto?: true
    hotelId?: true
  }

  export type FotosHotelCountAggregateInputType = {
    id?: true
    url_foto?: true
    hotelId?: true
    _all?: true
  }

  export type FotosHotelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FotosHotel to aggregate.
     */
    where?: FotosHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotosHotels to fetch.
     */
    orderBy?: FotosHotelOrderByWithRelationInput | FotosHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FotosHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotosHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotosHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FotosHotels
    **/
    _count?: true | FotosHotelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FotosHotelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FotosHotelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FotosHotelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FotosHotelMaxAggregateInputType
  }

  export type GetFotosHotelAggregateType<T extends FotosHotelAggregateArgs> = {
        [P in keyof T & keyof AggregateFotosHotel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFotosHotel[P]>
      : GetScalarType<T[P], AggregateFotosHotel[P]>
  }




  export type FotosHotelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FotosHotelWhereInput
    orderBy?: FotosHotelOrderByWithAggregationInput | FotosHotelOrderByWithAggregationInput[]
    by: FotosHotelScalarFieldEnum[] | FotosHotelScalarFieldEnum
    having?: FotosHotelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FotosHotelCountAggregateInputType | true
    _avg?: FotosHotelAvgAggregateInputType
    _sum?: FotosHotelSumAggregateInputType
    _min?: FotosHotelMinAggregateInputType
    _max?: FotosHotelMaxAggregateInputType
  }

  export type FotosHotelGroupByOutputType = {
    id: number
    url_foto: string
    hotelId: number
    _count: FotosHotelCountAggregateOutputType | null
    _avg: FotosHotelAvgAggregateOutputType | null
    _sum: FotosHotelSumAggregateOutputType | null
    _min: FotosHotelMinAggregateOutputType | null
    _max: FotosHotelMaxAggregateOutputType | null
  }

  type GetFotosHotelGroupByPayload<T extends FotosHotelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FotosHotelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FotosHotelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FotosHotelGroupByOutputType[P]>
            : GetScalarType<T[P], FotosHotelGroupByOutputType[P]>
        }
      >
    >


  export type FotosHotelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    hotelId?: boolean
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fotosHotel"]>

  export type FotosHotelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    hotelId?: boolean
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fotosHotel"]>

  export type FotosHotelSelectScalar = {
    id?: boolean
    url_foto?: boolean
    hotelId?: boolean
  }

  export type FotosHotelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }
  export type FotosHotelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }

  export type $FotosHotelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FotosHotel"
    objects: {
      id_hotel: Prisma.$HotelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url_foto: string
      hotelId: number
    }, ExtArgs["result"]["fotosHotel"]>
    composites: {}
  }

  type FotosHotelGetPayload<S extends boolean | null | undefined | FotosHotelDefaultArgs> = $Result.GetResult<Prisma.$FotosHotelPayload, S>

  type FotosHotelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FotosHotelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FotosHotelCountAggregateInputType | true
    }

  export interface FotosHotelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FotosHotel'], meta: { name: 'FotosHotel' } }
    /**
     * Find zero or one FotosHotel that matches the filter.
     * @param {FotosHotelFindUniqueArgs} args - Arguments to find a FotosHotel
     * @example
     * // Get one FotosHotel
     * const fotosHotel = await prisma.fotosHotel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FotosHotelFindUniqueArgs>(args: SelectSubset<T, FotosHotelFindUniqueArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FotosHotel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FotosHotelFindUniqueOrThrowArgs} args - Arguments to find a FotosHotel
     * @example
     * // Get one FotosHotel
     * const fotosHotel = await prisma.fotosHotel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FotosHotelFindUniqueOrThrowArgs>(args: SelectSubset<T, FotosHotelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FotosHotel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelFindFirstArgs} args - Arguments to find a FotosHotel
     * @example
     * // Get one FotosHotel
     * const fotosHotel = await prisma.fotosHotel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FotosHotelFindFirstArgs>(args?: SelectSubset<T, FotosHotelFindFirstArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FotosHotel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelFindFirstOrThrowArgs} args - Arguments to find a FotosHotel
     * @example
     * // Get one FotosHotel
     * const fotosHotel = await prisma.fotosHotel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FotosHotelFindFirstOrThrowArgs>(args?: SelectSubset<T, FotosHotelFindFirstOrThrowArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FotosHotels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FotosHotels
     * const fotosHotels = await prisma.fotosHotel.findMany()
     * 
     * // Get first 10 FotosHotels
     * const fotosHotels = await prisma.fotosHotel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fotosHotelWithIdOnly = await prisma.fotosHotel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FotosHotelFindManyArgs>(args?: SelectSubset<T, FotosHotelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FotosHotel.
     * @param {FotosHotelCreateArgs} args - Arguments to create a FotosHotel.
     * @example
     * // Create one FotosHotel
     * const FotosHotel = await prisma.fotosHotel.create({
     *   data: {
     *     // ... data to create a FotosHotel
     *   }
     * })
     * 
     */
    create<T extends FotosHotelCreateArgs>(args: SelectSubset<T, FotosHotelCreateArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FotosHotels.
     * @param {FotosHotelCreateManyArgs} args - Arguments to create many FotosHotels.
     * @example
     * // Create many FotosHotels
     * const fotosHotel = await prisma.fotosHotel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FotosHotelCreateManyArgs>(args?: SelectSubset<T, FotosHotelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FotosHotels and returns the data saved in the database.
     * @param {FotosHotelCreateManyAndReturnArgs} args - Arguments to create many FotosHotels.
     * @example
     * // Create many FotosHotels
     * const fotosHotel = await prisma.fotosHotel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FotosHotels and only return the `id`
     * const fotosHotelWithIdOnly = await prisma.fotosHotel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FotosHotelCreateManyAndReturnArgs>(args?: SelectSubset<T, FotosHotelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FotosHotel.
     * @param {FotosHotelDeleteArgs} args - Arguments to delete one FotosHotel.
     * @example
     * // Delete one FotosHotel
     * const FotosHotel = await prisma.fotosHotel.delete({
     *   where: {
     *     // ... filter to delete one FotosHotel
     *   }
     * })
     * 
     */
    delete<T extends FotosHotelDeleteArgs>(args: SelectSubset<T, FotosHotelDeleteArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FotosHotel.
     * @param {FotosHotelUpdateArgs} args - Arguments to update one FotosHotel.
     * @example
     * // Update one FotosHotel
     * const fotosHotel = await prisma.fotosHotel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FotosHotelUpdateArgs>(args: SelectSubset<T, FotosHotelUpdateArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FotosHotels.
     * @param {FotosHotelDeleteManyArgs} args - Arguments to filter FotosHotels to delete.
     * @example
     * // Delete a few FotosHotels
     * const { count } = await prisma.fotosHotel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FotosHotelDeleteManyArgs>(args?: SelectSubset<T, FotosHotelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FotosHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FotosHotels
     * const fotosHotel = await prisma.fotosHotel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FotosHotelUpdateManyArgs>(args: SelectSubset<T, FotosHotelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FotosHotel.
     * @param {FotosHotelUpsertArgs} args - Arguments to update or create a FotosHotel.
     * @example
     * // Update or create a FotosHotel
     * const fotosHotel = await prisma.fotosHotel.upsert({
     *   create: {
     *     // ... data to create a FotosHotel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FotosHotel we want to update
     *   }
     * })
     */
    upsert<T extends FotosHotelUpsertArgs>(args: SelectSubset<T, FotosHotelUpsertArgs<ExtArgs>>): Prisma__FotosHotelClient<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FotosHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelCountArgs} args - Arguments to filter FotosHotels to count.
     * @example
     * // Count the number of FotosHotels
     * const count = await prisma.fotosHotel.count({
     *   where: {
     *     // ... the filter for the FotosHotels we want to count
     *   }
     * })
    **/
    count<T extends FotosHotelCountArgs>(
      args?: Subset<T, FotosHotelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FotosHotelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FotosHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FotosHotelAggregateArgs>(args: Subset<T, FotosHotelAggregateArgs>): Prisma.PrismaPromise<GetFotosHotelAggregateType<T>>

    /**
     * Group by FotosHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotosHotelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FotosHotelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FotosHotelGroupByArgs['orderBy'] }
        : { orderBy?: FotosHotelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FotosHotelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFotosHotelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FotosHotel model
   */
  readonly fields: FotosHotelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FotosHotel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FotosHotelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    id_hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FotosHotel model
   */ 
  interface FotosHotelFieldRefs {
    readonly id: FieldRef<"FotosHotel", 'Int'>
    readonly url_foto: FieldRef<"FotosHotel", 'String'>
    readonly hotelId: FieldRef<"FotosHotel", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * FotosHotel findUnique
   */
  export type FotosHotelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter, which FotosHotel to fetch.
     */
    where: FotosHotelWhereUniqueInput
  }

  /**
   * FotosHotel findUniqueOrThrow
   */
  export type FotosHotelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter, which FotosHotel to fetch.
     */
    where: FotosHotelWhereUniqueInput
  }

  /**
   * FotosHotel findFirst
   */
  export type FotosHotelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter, which FotosHotel to fetch.
     */
    where?: FotosHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotosHotels to fetch.
     */
    orderBy?: FotosHotelOrderByWithRelationInput | FotosHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FotosHotels.
     */
    cursor?: FotosHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotosHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotosHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FotosHotels.
     */
    distinct?: FotosHotelScalarFieldEnum | FotosHotelScalarFieldEnum[]
  }

  /**
   * FotosHotel findFirstOrThrow
   */
  export type FotosHotelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter, which FotosHotel to fetch.
     */
    where?: FotosHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotosHotels to fetch.
     */
    orderBy?: FotosHotelOrderByWithRelationInput | FotosHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FotosHotels.
     */
    cursor?: FotosHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotosHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotosHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FotosHotels.
     */
    distinct?: FotosHotelScalarFieldEnum | FotosHotelScalarFieldEnum[]
  }

  /**
   * FotosHotel findMany
   */
  export type FotosHotelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter, which FotosHotels to fetch.
     */
    where?: FotosHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotosHotels to fetch.
     */
    orderBy?: FotosHotelOrderByWithRelationInput | FotosHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FotosHotels.
     */
    cursor?: FotosHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotosHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotosHotels.
     */
    skip?: number
    distinct?: FotosHotelScalarFieldEnum | FotosHotelScalarFieldEnum[]
  }

  /**
   * FotosHotel create
   */
  export type FotosHotelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * The data needed to create a FotosHotel.
     */
    data: XOR<FotosHotelCreateInput, FotosHotelUncheckedCreateInput>
  }

  /**
   * FotosHotel createMany
   */
  export type FotosHotelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FotosHotels.
     */
    data: FotosHotelCreateManyInput | FotosHotelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FotosHotel createManyAndReturn
   */
  export type FotosHotelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FotosHotels.
     */
    data: FotosHotelCreateManyInput | FotosHotelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FotosHotel update
   */
  export type FotosHotelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * The data needed to update a FotosHotel.
     */
    data: XOR<FotosHotelUpdateInput, FotosHotelUncheckedUpdateInput>
    /**
     * Choose, which FotosHotel to update.
     */
    where: FotosHotelWhereUniqueInput
  }

  /**
   * FotosHotel updateMany
   */
  export type FotosHotelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FotosHotels.
     */
    data: XOR<FotosHotelUpdateManyMutationInput, FotosHotelUncheckedUpdateManyInput>
    /**
     * Filter which FotosHotels to update
     */
    where?: FotosHotelWhereInput
  }

  /**
   * FotosHotel upsert
   */
  export type FotosHotelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * The filter to search for the FotosHotel to update in case it exists.
     */
    where: FotosHotelWhereUniqueInput
    /**
     * In case the FotosHotel found by the `where` argument doesn't exist, create a new FotosHotel with this data.
     */
    create: XOR<FotosHotelCreateInput, FotosHotelUncheckedCreateInput>
    /**
     * In case the FotosHotel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FotosHotelUpdateInput, FotosHotelUncheckedUpdateInput>
  }

  /**
   * FotosHotel delete
   */
  export type FotosHotelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    /**
     * Filter which FotosHotel to delete.
     */
    where: FotosHotelWhereUniqueInput
  }

  /**
   * FotosHotel deleteMany
   */
  export type FotosHotelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FotosHotels to delete
     */
    where?: FotosHotelWhereInput
  }

  /**
   * FotosHotel without action
   */
  export type FotosHotelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
  }


  /**
   * Model Hotel
   */

  export type AggregateHotel = {
    _count: HotelCountAggregateOutputType | null
    _avg: HotelAvgAggregateOutputType | null
    _sum: HotelSumAggregateOutputType | null
    _min: HotelMinAggregateOutputType | null
    _max: HotelMaxAggregateOutputType | null
  }

  export type HotelAvgAggregateOutputType = {
    id: number | null
    visualizacoes: number | null
    enderecoId: number | null
  }

  export type HotelSumAggregateOutputType = {
    id: number | null
    visualizacoes: number | null
    enderecoId: number | null
  }

  export type HotelMinAggregateOutputType = {
    id: number | null
    nome: string | null
    telefone: string | null
    sobre: string | null
    descricao: string | null
    visualizacoes: number | null
    informacoes_extras: string | null
    pet: boolean | null
    enderecoId: number | null
  }

  export type HotelMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    telefone: string | null
    sobre: string | null
    descricao: string | null
    visualizacoes: number | null
    informacoes_extras: string | null
    pet: boolean | null
    enderecoId: number | null
  }

  export type HotelCountAggregateOutputType = {
    id: number
    nome: number
    telefone: number
    sobre: number
    descricao: number
    visualizacoes: number
    informacoes_extras: number
    pet: number
    enderecoId: number
    _all: number
  }


  export type HotelAvgAggregateInputType = {
    id?: true
    visualizacoes?: true
    enderecoId?: true
  }

  export type HotelSumAggregateInputType = {
    id?: true
    visualizacoes?: true
    enderecoId?: true
  }

  export type HotelMinAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    sobre?: true
    descricao?: true
    visualizacoes?: true
    informacoes_extras?: true
    pet?: true
    enderecoId?: true
  }

  export type HotelMaxAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    sobre?: true
    descricao?: true
    visualizacoes?: true
    informacoes_extras?: true
    pet?: true
    enderecoId?: true
  }

  export type HotelCountAggregateInputType = {
    id?: true
    nome?: true
    telefone?: true
    sobre?: true
    descricao?: true
    visualizacoes?: true
    informacoes_extras?: true
    pet?: true
    enderecoId?: true
    _all?: true
  }

  export type HotelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hotel to aggregate.
     */
    where?: HotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hotels to fetch.
     */
    orderBy?: HotelOrderByWithRelationInput | HotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Hotels
    **/
    _count?: true | HotelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HotelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HotelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HotelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HotelMaxAggregateInputType
  }

  export type GetHotelAggregateType<T extends HotelAggregateArgs> = {
        [P in keyof T & keyof AggregateHotel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHotel[P]>
      : GetScalarType<T[P], AggregateHotel[P]>
  }




  export type HotelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HotelWhereInput
    orderBy?: HotelOrderByWithAggregationInput | HotelOrderByWithAggregationInput[]
    by: HotelScalarFieldEnum[] | HotelScalarFieldEnum
    having?: HotelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HotelCountAggregateInputType | true
    _avg?: HotelAvgAggregateInputType
    _sum?: HotelSumAggregateInputType
    _min?: HotelMinAggregateInputType
    _max?: HotelMaxAggregateInputType
  }

  export type HotelGroupByOutputType = {
    id: number
    nome: string
    telefone: string
    sobre: string | null
    descricao: string | null
    visualizacoes: number
    informacoes_extras: string | null
    pet: boolean
    enderecoId: number
    _count: HotelCountAggregateOutputType | null
    _avg: HotelAvgAggregateOutputType | null
    _sum: HotelSumAggregateOutputType | null
    _min: HotelMinAggregateOutputType | null
    _max: HotelMaxAggregateOutputType | null
  }

  type GetHotelGroupByPayload<T extends HotelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HotelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HotelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HotelGroupByOutputType[P]>
            : GetScalarType<T[P], HotelGroupByOutputType[P]>
        }
      >
    >


  export type HotelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    telefone?: boolean
    sobre?: boolean
    descricao?: boolean
    visualizacoes?: boolean
    informacoes_extras?: boolean
    pet?: boolean
    enderecoId?: boolean
    Acomodacao?: boolean | Hotel$AcomodacaoArgs<ExtArgs>
    Avaliacao?: boolean | Hotel$AvaliacaoArgs<ExtArgs>
    ComodidadeNoHotel?: boolean | Hotel$ComodidadeNoHotelArgs<ExtArgs>
    Descricao_detalhada?: boolean | Hotel$Descricao_detalhadaArgs<ExtArgs>
    Favorito?: boolean | Hotel$FavoritoArgs<ExtArgs>
    FotosHotel?: boolean | Hotel$FotosHotelArgs<ExtArgs>
    endereco?: boolean | EnderecoDefaultArgs<ExtArgs>
    _count?: boolean | HotelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hotel"]>

  export type HotelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    telefone?: boolean
    sobre?: boolean
    descricao?: boolean
    visualizacoes?: boolean
    informacoes_extras?: boolean
    pet?: boolean
    enderecoId?: boolean
    endereco?: boolean | EnderecoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hotel"]>

  export type HotelSelectScalar = {
    id?: boolean
    nome?: boolean
    telefone?: boolean
    sobre?: boolean
    descricao?: boolean
    visualizacoes?: boolean
    informacoes_extras?: boolean
    pet?: boolean
    enderecoId?: boolean
  }

  export type HotelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacao?: boolean | Hotel$AcomodacaoArgs<ExtArgs>
    Avaliacao?: boolean | Hotel$AvaliacaoArgs<ExtArgs>
    ComodidadeNoHotel?: boolean | Hotel$ComodidadeNoHotelArgs<ExtArgs>
    Descricao_detalhada?: boolean | Hotel$Descricao_detalhadaArgs<ExtArgs>
    Favorito?: boolean | Hotel$FavoritoArgs<ExtArgs>
    FotosHotel?: boolean | Hotel$FotosHotelArgs<ExtArgs>
    endereco?: boolean | EnderecoDefaultArgs<ExtArgs>
    _count?: boolean | HotelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HotelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    endereco?: boolean | EnderecoDefaultArgs<ExtArgs>
  }

  export type $HotelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Hotel"
    objects: {
      Acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>[]
      Avaliacao: Prisma.$AvaliacaoPayload<ExtArgs>[]
      ComodidadeNoHotel: Prisma.$ComodidadeNoHotelPayload<ExtArgs>[]
      Descricao_detalhada: Prisma.$Descricao_detalhadaPayload<ExtArgs> | null
      Favorito: Prisma.$FavoritoPayload<ExtArgs>[]
      FotosHotel: Prisma.$FotosHotelPayload<ExtArgs>[]
      endereco: Prisma.$EnderecoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      telefone: string
      sobre: string | null
      descricao: string | null
      visualizacoes: number
      informacoes_extras: string | null
      pet: boolean
      enderecoId: number
    }, ExtArgs["result"]["hotel"]>
    composites: {}
  }

  type HotelGetPayload<S extends boolean | null | undefined | HotelDefaultArgs> = $Result.GetResult<Prisma.$HotelPayload, S>

  type HotelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HotelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HotelCountAggregateInputType | true
    }

  export interface HotelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Hotel'], meta: { name: 'Hotel' } }
    /**
     * Find zero or one Hotel that matches the filter.
     * @param {HotelFindUniqueArgs} args - Arguments to find a Hotel
     * @example
     * // Get one Hotel
     * const hotel = await prisma.hotel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HotelFindUniqueArgs>(args: SelectSubset<T, HotelFindUniqueArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Hotel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HotelFindUniqueOrThrowArgs} args - Arguments to find a Hotel
     * @example
     * // Get one Hotel
     * const hotel = await prisma.hotel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HotelFindUniqueOrThrowArgs>(args: SelectSubset<T, HotelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Hotel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelFindFirstArgs} args - Arguments to find a Hotel
     * @example
     * // Get one Hotel
     * const hotel = await prisma.hotel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HotelFindFirstArgs>(args?: SelectSubset<T, HotelFindFirstArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Hotel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelFindFirstOrThrowArgs} args - Arguments to find a Hotel
     * @example
     * // Get one Hotel
     * const hotel = await prisma.hotel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HotelFindFirstOrThrowArgs>(args?: SelectSubset<T, HotelFindFirstOrThrowArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Hotels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hotels
     * const hotels = await prisma.hotel.findMany()
     * 
     * // Get first 10 Hotels
     * const hotels = await prisma.hotel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hotelWithIdOnly = await prisma.hotel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HotelFindManyArgs>(args?: SelectSubset<T, HotelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Hotel.
     * @param {HotelCreateArgs} args - Arguments to create a Hotel.
     * @example
     * // Create one Hotel
     * const Hotel = await prisma.hotel.create({
     *   data: {
     *     // ... data to create a Hotel
     *   }
     * })
     * 
     */
    create<T extends HotelCreateArgs>(args: SelectSubset<T, HotelCreateArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Hotels.
     * @param {HotelCreateManyArgs} args - Arguments to create many Hotels.
     * @example
     * // Create many Hotels
     * const hotel = await prisma.hotel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HotelCreateManyArgs>(args?: SelectSubset<T, HotelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hotels and returns the data saved in the database.
     * @param {HotelCreateManyAndReturnArgs} args - Arguments to create many Hotels.
     * @example
     * // Create many Hotels
     * const hotel = await prisma.hotel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hotels and only return the `id`
     * const hotelWithIdOnly = await prisma.hotel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HotelCreateManyAndReturnArgs>(args?: SelectSubset<T, HotelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Hotel.
     * @param {HotelDeleteArgs} args - Arguments to delete one Hotel.
     * @example
     * // Delete one Hotel
     * const Hotel = await prisma.hotel.delete({
     *   where: {
     *     // ... filter to delete one Hotel
     *   }
     * })
     * 
     */
    delete<T extends HotelDeleteArgs>(args: SelectSubset<T, HotelDeleteArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Hotel.
     * @param {HotelUpdateArgs} args - Arguments to update one Hotel.
     * @example
     * // Update one Hotel
     * const hotel = await prisma.hotel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HotelUpdateArgs>(args: SelectSubset<T, HotelUpdateArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Hotels.
     * @param {HotelDeleteManyArgs} args - Arguments to filter Hotels to delete.
     * @example
     * // Delete a few Hotels
     * const { count } = await prisma.hotel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HotelDeleteManyArgs>(args?: SelectSubset<T, HotelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hotels
     * const hotel = await prisma.hotel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HotelUpdateManyArgs>(args: SelectSubset<T, HotelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Hotel.
     * @param {HotelUpsertArgs} args - Arguments to update or create a Hotel.
     * @example
     * // Update or create a Hotel
     * const hotel = await prisma.hotel.upsert({
     *   create: {
     *     // ... data to create a Hotel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hotel we want to update
     *   }
     * })
     */
    upsert<T extends HotelUpsertArgs>(args: SelectSubset<T, HotelUpsertArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Hotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelCountArgs} args - Arguments to filter Hotels to count.
     * @example
     * // Count the number of Hotels
     * const count = await prisma.hotel.count({
     *   where: {
     *     // ... the filter for the Hotels we want to count
     *   }
     * })
    **/
    count<T extends HotelCountArgs>(
      args?: Subset<T, HotelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HotelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HotelAggregateArgs>(args: Subset<T, HotelAggregateArgs>): Prisma.PrismaPromise<GetHotelAggregateType<T>>

    /**
     * Group by Hotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HotelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HotelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HotelGroupByArgs['orderBy'] }
        : { orderBy?: HotelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HotelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHotelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Hotel model
   */
  readonly fields: HotelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Hotel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HotelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Acomodacao<T extends Hotel$AcomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$AcomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    Avaliacao<T extends Hotel$AvaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$AvaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany"> | Null>
    ComodidadeNoHotel<T extends Hotel$ComodidadeNoHotelArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$ComodidadeNoHotelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findMany"> | Null>
    Descricao_detalhada<T extends Hotel$Descricao_detalhadaArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$Descricao_detalhadaArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Favorito<T extends Hotel$FavoritoArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$FavoritoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany"> | Null>
    FotosHotel<T extends Hotel$FotosHotelArgs<ExtArgs> = {}>(args?: Subset<T, Hotel$FotosHotelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotosHotelPayload<ExtArgs>, T, "findMany"> | Null>
    endereco<T extends EnderecoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EnderecoDefaultArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Hotel model
   */ 
  interface HotelFieldRefs {
    readonly id: FieldRef<"Hotel", 'Int'>
    readonly nome: FieldRef<"Hotel", 'String'>
    readonly telefone: FieldRef<"Hotel", 'String'>
    readonly sobre: FieldRef<"Hotel", 'String'>
    readonly descricao: FieldRef<"Hotel", 'String'>
    readonly visualizacoes: FieldRef<"Hotel", 'Int'>
    readonly informacoes_extras: FieldRef<"Hotel", 'String'>
    readonly pet: FieldRef<"Hotel", 'Boolean'>
    readonly enderecoId: FieldRef<"Hotel", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Hotel findUnique
   */
  export type HotelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter, which Hotel to fetch.
     */
    where: HotelWhereUniqueInput
  }

  /**
   * Hotel findUniqueOrThrow
   */
  export type HotelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter, which Hotel to fetch.
     */
    where: HotelWhereUniqueInput
  }

  /**
   * Hotel findFirst
   */
  export type HotelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter, which Hotel to fetch.
     */
    where?: HotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hotels to fetch.
     */
    orderBy?: HotelOrderByWithRelationInput | HotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hotels.
     */
    cursor?: HotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hotels.
     */
    distinct?: HotelScalarFieldEnum | HotelScalarFieldEnum[]
  }

  /**
   * Hotel findFirstOrThrow
   */
  export type HotelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter, which Hotel to fetch.
     */
    where?: HotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hotels to fetch.
     */
    orderBy?: HotelOrderByWithRelationInput | HotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hotels.
     */
    cursor?: HotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hotels.
     */
    distinct?: HotelScalarFieldEnum | HotelScalarFieldEnum[]
  }

  /**
   * Hotel findMany
   */
  export type HotelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter, which Hotels to fetch.
     */
    where?: HotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hotels to fetch.
     */
    orderBy?: HotelOrderByWithRelationInput | HotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Hotels.
     */
    cursor?: HotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hotels.
     */
    skip?: number
    distinct?: HotelScalarFieldEnum | HotelScalarFieldEnum[]
  }

  /**
   * Hotel create
   */
  export type HotelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * The data needed to create a Hotel.
     */
    data: XOR<HotelCreateInput, HotelUncheckedCreateInput>
  }

  /**
   * Hotel createMany
   */
  export type HotelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Hotels.
     */
    data: HotelCreateManyInput | HotelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Hotel createManyAndReturn
   */
  export type HotelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Hotels.
     */
    data: HotelCreateManyInput | HotelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Hotel update
   */
  export type HotelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * The data needed to update a Hotel.
     */
    data: XOR<HotelUpdateInput, HotelUncheckedUpdateInput>
    /**
     * Choose, which Hotel to update.
     */
    where: HotelWhereUniqueInput
  }

  /**
   * Hotel updateMany
   */
  export type HotelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Hotels.
     */
    data: XOR<HotelUpdateManyMutationInput, HotelUncheckedUpdateManyInput>
    /**
     * Filter which Hotels to update
     */
    where?: HotelWhereInput
  }

  /**
   * Hotel upsert
   */
  export type HotelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * The filter to search for the Hotel to update in case it exists.
     */
    where: HotelWhereUniqueInput
    /**
     * In case the Hotel found by the `where` argument doesn't exist, create a new Hotel with this data.
     */
    create: XOR<HotelCreateInput, HotelUncheckedCreateInput>
    /**
     * In case the Hotel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HotelUpdateInput, HotelUncheckedUpdateInput>
  }

  /**
   * Hotel delete
   */
  export type HotelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
    /**
     * Filter which Hotel to delete.
     */
    where: HotelWhereUniqueInput
  }

  /**
   * Hotel deleteMany
   */
  export type HotelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hotels to delete
     */
    where?: HotelWhereInput
  }

  /**
   * Hotel.Acomodacao
   */
  export type Hotel$AcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    where?: AcomodacaoWhereInput
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    cursor?: AcomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AcomodacaoScalarFieldEnum | AcomodacaoScalarFieldEnum[]
  }

  /**
   * Hotel.Avaliacao
   */
  export type Hotel$AvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Hotel.ComodidadeNoHotel
   */
  export type Hotel$ComodidadeNoHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    where?: ComodidadeNoHotelWhereInput
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    cursor?: ComodidadeNoHotelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComodidadeNoHotelScalarFieldEnum | ComodidadeNoHotelScalarFieldEnum[]
  }

  /**
   * Hotel.Descricao_detalhada
   */
  export type Hotel$Descricao_detalhadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    where?: Descricao_detalhadaWhereInput
  }

  /**
   * Hotel.Favorito
   */
  export type Hotel$FavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Hotel.FotosHotel
   */
  export type Hotel$FotosHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotosHotel
     */
    select?: FotosHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotosHotelInclude<ExtArgs> | null
    where?: FotosHotelWhereInput
    orderBy?: FotosHotelOrderByWithRelationInput | FotosHotelOrderByWithRelationInput[]
    cursor?: FotosHotelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FotosHotelScalarFieldEnum | FotosHotelScalarFieldEnum[]
  }

  /**
   * Hotel without action
   */
  export type HotelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hotel
     */
    select?: HotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HotelInclude<ExtArgs> | null
  }


  /**
   * Model Avaliacao
   */

  export type AggregateAvaliacao = {
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  export type AvaliacaoAvgAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    hotelId: number | null
    clientId: number | null
  }

  export type AvaliacaoSumAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    hotelId: number | null
    clientId: number | null
  }

  export type AvaliacaoMinAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    hotelId: number | null
    clientId: number | null
  }

  export type AvaliacaoMaxAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    hotelId: number | null
    clientId: number | null
  }

  export type AvaliacaoCountAggregateOutputType = {
    id: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario: number
    hotelId: number
    clientId: number
    _all: number
  }


  export type AvaliacaoAvgAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    hotelId?: true
    clientId?: true
  }

  export type AvaliacaoSumAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    hotelId?: true
    clientId?: true
  }

  export type AvaliacaoMinAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    hotelId?: true
    clientId?: true
  }

  export type AvaliacaoMaxAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    hotelId?: true
    clientId?: true
  }

  export type AvaliacaoCountAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    hotelId?: true
    clientId?: true
    _all?: true
  }

  export type AvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacao to aggregate.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avaliacaos
    **/
    _count?: true | AvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type GetAvaliacaoAggregateType<T extends AvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao[P]>
      : GetScalarType<T[P], AggregateAvaliacao[P]>
  }




  export type AvaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithAggregationInput | AvaliacaoOrderByWithAggregationInput[]
    by: AvaliacaoScalarFieldEnum[] | AvaliacaoScalarFieldEnum
    having?: AvaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliacaoCountAggregateInputType | true
    _avg?: AvaliacaoAvgAggregateInputType
    _sum?: AvaliacaoSumAggregateInputType
    _min?: AvaliacaoMinAggregateInputType
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type AvaliacaoGroupByOutputType = {
    id: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario: number | null
    hotelId: number
    clientId: number
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  type GetAvaliacaoGroupByPayload<T extends AvaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type AvaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    hotelId?: boolean
    clientId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    hotelId?: boolean
    clientId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectScalar = {
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    hotelId?: boolean
    clientId?: boolean
  }

  export type AvaliacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }
  export type AvaliacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }

  export type $AvaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avaliacao"
    objects: {
      cliente: Prisma.$ClientPayload<ExtArgs>
      hotel: Prisma.$HotelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      custo_beneficio: number
      atendimento: number
      comida: number
      limpeza: number
      conforto: number
      localizacao: number
      comentario: number | null
      hotelId: number
      clientId: number
    }, ExtArgs["result"]["avaliacao"]>
    composites: {}
  }

  type AvaliacaoGetPayload<S extends boolean | null | undefined | AvaliacaoDefaultArgs> = $Result.GetResult<Prisma.$AvaliacaoPayload, S>

  type AvaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AvaliacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AvaliacaoCountAggregateInputType | true
    }

  export interface AvaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avaliacao'], meta: { name: 'Avaliacao' } }
    /**
     * Find zero or one Avaliacao that matches the filter.
     * @param {AvaliacaoFindUniqueArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvaliacaoFindUniqueArgs>(args: SelectSubset<T, AvaliacaoFindUniqueArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Avaliacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AvaliacaoFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvaliacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AvaliacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvaliacaoFindFirstArgs>(args?: SelectSubset<T, AvaliacaoFindFirstArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Avaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvaliacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AvaliacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Avaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany()
     * 
     * // Get first 10 Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliacaoWithIdOnly = await prisma.avaliacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AvaliacaoFindManyArgs>(args?: SelectSubset<T, AvaliacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Avaliacao.
     * @param {AvaliacaoCreateArgs} args - Arguments to create a Avaliacao.
     * @example
     * // Create one Avaliacao
     * const Avaliacao = await prisma.avaliacao.create({
     *   data: {
     *     // ... data to create a Avaliacao
     *   }
     * })
     * 
     */
    create<T extends AvaliacaoCreateArgs>(args: SelectSubset<T, AvaliacaoCreateArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Avaliacaos.
     * @param {AvaliacaoCreateManyArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvaliacaoCreateManyArgs>(args?: SelectSubset<T, AvaliacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Avaliacaos and returns the data saved in the database.
     * @param {AvaliacaoCreateManyAndReturnArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Avaliacaos and only return the `id`
     * const avaliacaoWithIdOnly = await prisma.avaliacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AvaliacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, AvaliacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Avaliacao.
     * @param {AvaliacaoDeleteArgs} args - Arguments to delete one Avaliacao.
     * @example
     * // Delete one Avaliacao
     * const Avaliacao = await prisma.avaliacao.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao
     *   }
     * })
     * 
     */
    delete<T extends AvaliacaoDeleteArgs>(args: SelectSubset<T, AvaliacaoDeleteArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Avaliacao.
     * @param {AvaliacaoUpdateArgs} args - Arguments to update one Avaliacao.
     * @example
     * // Update one Avaliacao
     * const avaliacao = await prisma.avaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvaliacaoUpdateArgs>(args: SelectSubset<T, AvaliacaoUpdateArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Avaliacaos.
     * @param {AvaliacaoDeleteManyArgs} args - Arguments to filter Avaliacaos to delete.
     * @example
     * // Delete a few Avaliacaos
     * const { count } = await prisma.avaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvaliacaoDeleteManyArgs>(args?: SelectSubset<T, AvaliacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacaos
     * const avaliacao = await prisma.avaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvaliacaoUpdateManyArgs>(args: SelectSubset<T, AvaliacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avaliacao.
     * @param {AvaliacaoUpsertArgs} args - Arguments to update or create a Avaliacao.
     * @example
     * // Update or create a Avaliacao
     * const avaliacao = await prisma.avaliacao.upsert({
     *   create: {
     *     // ... data to create a Avaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao we want to update
     *   }
     * })
     */
    upsert<T extends AvaliacaoUpsertArgs>(args: SelectSubset<T, AvaliacaoUpsertArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoCountArgs} args - Arguments to filter Avaliacaos to count.
     * @example
     * // Count the number of Avaliacaos
     * const count = await prisma.avaliacao.count({
     *   where: {
     *     // ... the filter for the Avaliacaos we want to count
     *   }
     * })
    **/
    count<T extends AvaliacaoCountArgs>(
      args?: Subset<T, AvaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliacaoAggregateArgs>(args: Subset<T, AvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetAvaliacaoAggregateType<T>>

    /**
     * Group by Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: AvaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avaliacao model
   */
  readonly fields: AvaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Avaliacao model
   */ 
  interface AvaliacaoFieldRefs {
    readonly id: FieldRef<"Avaliacao", 'Int'>
    readonly custo_beneficio: FieldRef<"Avaliacao", 'Int'>
    readonly atendimento: FieldRef<"Avaliacao", 'Int'>
    readonly comida: FieldRef<"Avaliacao", 'Int'>
    readonly limpeza: FieldRef<"Avaliacao", 'Int'>
    readonly conforto: FieldRef<"Avaliacao", 'Int'>
    readonly localizacao: FieldRef<"Avaliacao", 'Int'>
    readonly comentario: FieldRef<"Avaliacao", 'Int'>
    readonly hotelId: FieldRef<"Avaliacao", 'Int'>
    readonly clientId: FieldRef<"Avaliacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Avaliacao findUnique
   */
  export type AvaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findUniqueOrThrow
   */
  export type AvaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findFirst
   */
  export type AvaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findFirstOrThrow
   */
  export type AvaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findMany
   */
  export type AvaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacaos to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao create
   */
  export type AvaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Avaliacao.
     */
    data: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
  }

  /**
   * Avaliacao createMany
   */
  export type AvaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Avaliacao createManyAndReturn
   */
  export type AvaliacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Avaliacao update
   */
  export type AvaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Avaliacao.
     */
    data: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
    /**
     * Choose, which Avaliacao to update.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao updateMany
   */
  export type AvaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avaliacaos.
     */
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which Avaliacaos to update
     */
    where?: AvaliacaoWhereInput
  }

  /**
   * Avaliacao upsert
   */
  export type AvaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Avaliacao to update in case it exists.
     */
    where: AvaliacaoWhereUniqueInput
    /**
     * In case the Avaliacao found by the `where` argument doesn't exist, create a new Avaliacao with this data.
     */
    create: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
    /**
     * In case the Avaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
  }

  /**
   * Avaliacao delete
   */
  export type AvaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter which Avaliacao to delete.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao deleteMany
   */
  export type AvaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacaos to delete
     */
    where?: AvaliacaoWhereInput
  }

  /**
   * Avaliacao without action
   */
  export type AvaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
  }


  /**
   * Model Descricao_detalhada
   */

  export type AggregateDescricao_detalhada = {
    _count: Descricao_detalhadaCountAggregateOutputType | null
    _avg: Descricao_detalhadaAvgAggregateOutputType | null
    _sum: Descricao_detalhadaSumAggregateOutputType | null
    _min: Descricao_detalhadaMinAggregateOutputType | null
    _max: Descricao_detalhadaMaxAggregateOutputType | null
  }

  export type Descricao_detalhadaAvgAggregateOutputType = {
    id: number | null
    hotelId: number | null
  }

  export type Descricao_detalhadaSumAggregateOutputType = {
    id: number | null
    hotelId: number | null
  }

  export type Descricao_detalhadaMinAggregateOutputType = {
    id: number | null
    descricao: string | null
    sobre: string | null
    banheiro: string | null
    quarto: string | null
    regiao: string | null
    hotelId: number | null
  }

  export type Descricao_detalhadaMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
    sobre: string | null
    banheiro: string | null
    quarto: string | null
    regiao: string | null
    hotelId: number | null
  }

  export type Descricao_detalhadaCountAggregateOutputType = {
    id: number
    descricao: number
    sobre: number
    banheiro: number
    quarto: number
    regiao: number
    hotelId: number
    _all: number
  }


  export type Descricao_detalhadaAvgAggregateInputType = {
    id?: true
    hotelId?: true
  }

  export type Descricao_detalhadaSumAggregateInputType = {
    id?: true
    hotelId?: true
  }

  export type Descricao_detalhadaMinAggregateInputType = {
    id?: true
    descricao?: true
    sobre?: true
    banheiro?: true
    quarto?: true
    regiao?: true
    hotelId?: true
  }

  export type Descricao_detalhadaMaxAggregateInputType = {
    id?: true
    descricao?: true
    sobre?: true
    banheiro?: true
    quarto?: true
    regiao?: true
    hotelId?: true
  }

  export type Descricao_detalhadaCountAggregateInputType = {
    id?: true
    descricao?: true
    sobre?: true
    banheiro?: true
    quarto?: true
    regiao?: true
    hotelId?: true
    _all?: true
  }

  export type Descricao_detalhadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descricao_detalhada to aggregate.
     */
    where?: Descricao_detalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descricao_detalhadas to fetch.
     */
    orderBy?: Descricao_detalhadaOrderByWithRelationInput | Descricao_detalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Descricao_detalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descricao_detalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descricao_detalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Descricao_detalhadas
    **/
    _count?: true | Descricao_detalhadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Descricao_detalhadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Descricao_detalhadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Descricao_detalhadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Descricao_detalhadaMaxAggregateInputType
  }

  export type GetDescricao_detalhadaAggregateType<T extends Descricao_detalhadaAggregateArgs> = {
        [P in keyof T & keyof AggregateDescricao_detalhada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescricao_detalhada[P]>
      : GetScalarType<T[P], AggregateDescricao_detalhada[P]>
  }




  export type Descricao_detalhadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Descricao_detalhadaWhereInput
    orderBy?: Descricao_detalhadaOrderByWithAggregationInput | Descricao_detalhadaOrderByWithAggregationInput[]
    by: Descricao_detalhadaScalarFieldEnum[] | Descricao_detalhadaScalarFieldEnum
    having?: Descricao_detalhadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Descricao_detalhadaCountAggregateInputType | true
    _avg?: Descricao_detalhadaAvgAggregateInputType
    _sum?: Descricao_detalhadaSumAggregateInputType
    _min?: Descricao_detalhadaMinAggregateInputType
    _max?: Descricao_detalhadaMaxAggregateInputType
  }

  export type Descricao_detalhadaGroupByOutputType = {
    id: number
    descricao: string | null
    sobre: string | null
    banheiro: string | null
    quarto: string | null
    regiao: string | null
    hotelId: number
    _count: Descricao_detalhadaCountAggregateOutputType | null
    _avg: Descricao_detalhadaAvgAggregateOutputType | null
    _sum: Descricao_detalhadaSumAggregateOutputType | null
    _min: Descricao_detalhadaMinAggregateOutputType | null
    _max: Descricao_detalhadaMaxAggregateOutputType | null
  }

  type GetDescricao_detalhadaGroupByPayload<T extends Descricao_detalhadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Descricao_detalhadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Descricao_detalhadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Descricao_detalhadaGroupByOutputType[P]>
            : GetScalarType<T[P], Descricao_detalhadaGroupByOutputType[P]>
        }
      >
    >


  export type Descricao_detalhadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    sobre?: boolean
    banheiro?: boolean
    quarto?: boolean
    regiao?: boolean
    hotelId?: boolean
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descricao_detalhada"]>

  export type Descricao_detalhadaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    sobre?: boolean
    banheiro?: boolean
    quarto?: boolean
    regiao?: boolean
    hotelId?: boolean
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descricao_detalhada"]>

  export type Descricao_detalhadaSelectScalar = {
    id?: boolean
    descricao?: boolean
    sobre?: boolean
    banheiro?: boolean
    quarto?: boolean
    regiao?: boolean
    hotelId?: boolean
  }

  export type Descricao_detalhadaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }
  export type Descricao_detalhadaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    id_hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }

  export type $Descricao_detalhadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Descricao_detalhada"
    objects: {
      id_hotel: Prisma.$HotelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string | null
      sobre: string | null
      banheiro: string | null
      quarto: string | null
      regiao: string | null
      hotelId: number
    }, ExtArgs["result"]["descricao_detalhada"]>
    composites: {}
  }

  type Descricao_detalhadaGetPayload<S extends boolean | null | undefined | Descricao_detalhadaDefaultArgs> = $Result.GetResult<Prisma.$Descricao_detalhadaPayload, S>

  type Descricao_detalhadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Descricao_detalhadaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Descricao_detalhadaCountAggregateInputType | true
    }

  export interface Descricao_detalhadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Descricao_detalhada'], meta: { name: 'Descricao_detalhada' } }
    /**
     * Find zero or one Descricao_detalhada that matches the filter.
     * @param {Descricao_detalhadaFindUniqueArgs} args - Arguments to find a Descricao_detalhada
     * @example
     * // Get one Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Descricao_detalhadaFindUniqueArgs>(args: SelectSubset<T, Descricao_detalhadaFindUniqueArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Descricao_detalhada that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Descricao_detalhadaFindUniqueOrThrowArgs} args - Arguments to find a Descricao_detalhada
     * @example
     * // Get one Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Descricao_detalhadaFindUniqueOrThrowArgs>(args: SelectSubset<T, Descricao_detalhadaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Descricao_detalhada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaFindFirstArgs} args - Arguments to find a Descricao_detalhada
     * @example
     * // Get one Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Descricao_detalhadaFindFirstArgs>(args?: SelectSubset<T, Descricao_detalhadaFindFirstArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Descricao_detalhada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaFindFirstOrThrowArgs} args - Arguments to find a Descricao_detalhada
     * @example
     * // Get one Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Descricao_detalhadaFindFirstOrThrowArgs>(args?: SelectSubset<T, Descricao_detalhadaFindFirstOrThrowArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Descricao_detalhadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Descricao_detalhadas
     * const descricao_detalhadas = await prisma.descricao_detalhada.findMany()
     * 
     * // Get first 10 Descricao_detalhadas
     * const descricao_detalhadas = await prisma.descricao_detalhada.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const descricao_detalhadaWithIdOnly = await prisma.descricao_detalhada.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Descricao_detalhadaFindManyArgs>(args?: SelectSubset<T, Descricao_detalhadaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Descricao_detalhada.
     * @param {Descricao_detalhadaCreateArgs} args - Arguments to create a Descricao_detalhada.
     * @example
     * // Create one Descricao_detalhada
     * const Descricao_detalhada = await prisma.descricao_detalhada.create({
     *   data: {
     *     // ... data to create a Descricao_detalhada
     *   }
     * })
     * 
     */
    create<T extends Descricao_detalhadaCreateArgs>(args: SelectSubset<T, Descricao_detalhadaCreateArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Descricao_detalhadas.
     * @param {Descricao_detalhadaCreateManyArgs} args - Arguments to create many Descricao_detalhadas.
     * @example
     * // Create many Descricao_detalhadas
     * const descricao_detalhada = await prisma.descricao_detalhada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Descricao_detalhadaCreateManyArgs>(args?: SelectSubset<T, Descricao_detalhadaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Descricao_detalhadas and returns the data saved in the database.
     * @param {Descricao_detalhadaCreateManyAndReturnArgs} args - Arguments to create many Descricao_detalhadas.
     * @example
     * // Create many Descricao_detalhadas
     * const descricao_detalhada = await prisma.descricao_detalhada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Descricao_detalhadas and only return the `id`
     * const descricao_detalhadaWithIdOnly = await prisma.descricao_detalhada.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Descricao_detalhadaCreateManyAndReturnArgs>(args?: SelectSubset<T, Descricao_detalhadaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Descricao_detalhada.
     * @param {Descricao_detalhadaDeleteArgs} args - Arguments to delete one Descricao_detalhada.
     * @example
     * // Delete one Descricao_detalhada
     * const Descricao_detalhada = await prisma.descricao_detalhada.delete({
     *   where: {
     *     // ... filter to delete one Descricao_detalhada
     *   }
     * })
     * 
     */
    delete<T extends Descricao_detalhadaDeleteArgs>(args: SelectSubset<T, Descricao_detalhadaDeleteArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Descricao_detalhada.
     * @param {Descricao_detalhadaUpdateArgs} args - Arguments to update one Descricao_detalhada.
     * @example
     * // Update one Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Descricao_detalhadaUpdateArgs>(args: SelectSubset<T, Descricao_detalhadaUpdateArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Descricao_detalhadas.
     * @param {Descricao_detalhadaDeleteManyArgs} args - Arguments to filter Descricao_detalhadas to delete.
     * @example
     * // Delete a few Descricao_detalhadas
     * const { count } = await prisma.descricao_detalhada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Descricao_detalhadaDeleteManyArgs>(args?: SelectSubset<T, Descricao_detalhadaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descricao_detalhadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Descricao_detalhadas
     * const descricao_detalhada = await prisma.descricao_detalhada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Descricao_detalhadaUpdateManyArgs>(args: SelectSubset<T, Descricao_detalhadaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Descricao_detalhada.
     * @param {Descricao_detalhadaUpsertArgs} args - Arguments to update or create a Descricao_detalhada.
     * @example
     * // Update or create a Descricao_detalhada
     * const descricao_detalhada = await prisma.descricao_detalhada.upsert({
     *   create: {
     *     // ... data to create a Descricao_detalhada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Descricao_detalhada we want to update
     *   }
     * })
     */
    upsert<T extends Descricao_detalhadaUpsertArgs>(args: SelectSubset<T, Descricao_detalhadaUpsertArgs<ExtArgs>>): Prisma__Descricao_detalhadaClient<$Result.GetResult<Prisma.$Descricao_detalhadaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Descricao_detalhadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaCountArgs} args - Arguments to filter Descricao_detalhadas to count.
     * @example
     * // Count the number of Descricao_detalhadas
     * const count = await prisma.descricao_detalhada.count({
     *   where: {
     *     // ... the filter for the Descricao_detalhadas we want to count
     *   }
     * })
    **/
    count<T extends Descricao_detalhadaCountArgs>(
      args?: Subset<T, Descricao_detalhadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Descricao_detalhadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Descricao_detalhada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Descricao_detalhadaAggregateArgs>(args: Subset<T, Descricao_detalhadaAggregateArgs>): Prisma.PrismaPromise<GetDescricao_detalhadaAggregateType<T>>

    /**
     * Group by Descricao_detalhada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Descricao_detalhadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Descricao_detalhadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Descricao_detalhadaGroupByArgs['orderBy'] }
        : { orderBy?: Descricao_detalhadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Descricao_detalhadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescricao_detalhadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Descricao_detalhada model
   */
  readonly fields: Descricao_detalhadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Descricao_detalhada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Descricao_detalhadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    id_hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Descricao_detalhada model
   */ 
  interface Descricao_detalhadaFieldRefs {
    readonly id: FieldRef<"Descricao_detalhada", 'Int'>
    readonly descricao: FieldRef<"Descricao_detalhada", 'String'>
    readonly sobre: FieldRef<"Descricao_detalhada", 'String'>
    readonly banheiro: FieldRef<"Descricao_detalhada", 'String'>
    readonly quarto: FieldRef<"Descricao_detalhada", 'String'>
    readonly regiao: FieldRef<"Descricao_detalhada", 'String'>
    readonly hotelId: FieldRef<"Descricao_detalhada", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Descricao_detalhada findUnique
   */
  export type Descricao_detalhadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter, which Descricao_detalhada to fetch.
     */
    where: Descricao_detalhadaWhereUniqueInput
  }

  /**
   * Descricao_detalhada findUniqueOrThrow
   */
  export type Descricao_detalhadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter, which Descricao_detalhada to fetch.
     */
    where: Descricao_detalhadaWhereUniqueInput
  }

  /**
   * Descricao_detalhada findFirst
   */
  export type Descricao_detalhadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter, which Descricao_detalhada to fetch.
     */
    where?: Descricao_detalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descricao_detalhadas to fetch.
     */
    orderBy?: Descricao_detalhadaOrderByWithRelationInput | Descricao_detalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descricao_detalhadas.
     */
    cursor?: Descricao_detalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descricao_detalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descricao_detalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descricao_detalhadas.
     */
    distinct?: Descricao_detalhadaScalarFieldEnum | Descricao_detalhadaScalarFieldEnum[]
  }

  /**
   * Descricao_detalhada findFirstOrThrow
   */
  export type Descricao_detalhadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter, which Descricao_detalhada to fetch.
     */
    where?: Descricao_detalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descricao_detalhadas to fetch.
     */
    orderBy?: Descricao_detalhadaOrderByWithRelationInput | Descricao_detalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descricao_detalhadas.
     */
    cursor?: Descricao_detalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descricao_detalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descricao_detalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descricao_detalhadas.
     */
    distinct?: Descricao_detalhadaScalarFieldEnum | Descricao_detalhadaScalarFieldEnum[]
  }

  /**
   * Descricao_detalhada findMany
   */
  export type Descricao_detalhadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter, which Descricao_detalhadas to fetch.
     */
    where?: Descricao_detalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descricao_detalhadas to fetch.
     */
    orderBy?: Descricao_detalhadaOrderByWithRelationInput | Descricao_detalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Descricao_detalhadas.
     */
    cursor?: Descricao_detalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descricao_detalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descricao_detalhadas.
     */
    skip?: number
    distinct?: Descricao_detalhadaScalarFieldEnum | Descricao_detalhadaScalarFieldEnum[]
  }

  /**
   * Descricao_detalhada create
   */
  export type Descricao_detalhadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * The data needed to create a Descricao_detalhada.
     */
    data: XOR<Descricao_detalhadaCreateInput, Descricao_detalhadaUncheckedCreateInput>
  }

  /**
   * Descricao_detalhada createMany
   */
  export type Descricao_detalhadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Descricao_detalhadas.
     */
    data: Descricao_detalhadaCreateManyInput | Descricao_detalhadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Descricao_detalhada createManyAndReturn
   */
  export type Descricao_detalhadaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Descricao_detalhadas.
     */
    data: Descricao_detalhadaCreateManyInput | Descricao_detalhadaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Descricao_detalhada update
   */
  export type Descricao_detalhadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * The data needed to update a Descricao_detalhada.
     */
    data: XOR<Descricao_detalhadaUpdateInput, Descricao_detalhadaUncheckedUpdateInput>
    /**
     * Choose, which Descricao_detalhada to update.
     */
    where: Descricao_detalhadaWhereUniqueInput
  }

  /**
   * Descricao_detalhada updateMany
   */
  export type Descricao_detalhadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Descricao_detalhadas.
     */
    data: XOR<Descricao_detalhadaUpdateManyMutationInput, Descricao_detalhadaUncheckedUpdateManyInput>
    /**
     * Filter which Descricao_detalhadas to update
     */
    where?: Descricao_detalhadaWhereInput
  }

  /**
   * Descricao_detalhada upsert
   */
  export type Descricao_detalhadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * The filter to search for the Descricao_detalhada to update in case it exists.
     */
    where: Descricao_detalhadaWhereUniqueInput
    /**
     * In case the Descricao_detalhada found by the `where` argument doesn't exist, create a new Descricao_detalhada with this data.
     */
    create: XOR<Descricao_detalhadaCreateInput, Descricao_detalhadaUncheckedCreateInput>
    /**
     * In case the Descricao_detalhada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Descricao_detalhadaUpdateInput, Descricao_detalhadaUncheckedUpdateInput>
  }

  /**
   * Descricao_detalhada delete
   */
  export type Descricao_detalhadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
    /**
     * Filter which Descricao_detalhada to delete.
     */
    where: Descricao_detalhadaWhereUniqueInput
  }

  /**
   * Descricao_detalhada deleteMany
   */
  export type Descricao_detalhadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descricao_detalhadas to delete
     */
    where?: Descricao_detalhadaWhereInput
  }

  /**
   * Descricao_detalhada without action
   */
  export type Descricao_detalhadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descricao_detalhada
     */
    select?: Descricao_detalhadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Descricao_detalhadaInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    hash_senha: string | null
    telefone: string | null
    data_nascimento: Date | null
    vip: boolean | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    hash_senha: string | null
    telefone: string | null
    data_nascimento: Date | null
    vip: boolean | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    sobrenome: number
    email: number
    hash_senha: number
    telefone: number
    data_nascimento: number
    vip: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    email?: true
    hash_senha?: true
    telefone?: true
    data_nascimento?: true
    vip?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    email?: true
    hash_senha?: true
    telefone?: true
    data_nascimento?: true
    vip?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    email?: true
    hash_senha?: true
    telefone?: true
    data_nascimento?: true
    vip?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone: string | null
    data_nascimento: Date | null
    vip: boolean
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    hash_senha?: boolean
    telefone?: boolean
    data_nascimento?: boolean
    vip?: boolean
    Client?: boolean | Usuario$ClientArgs<ExtArgs>
    FotoUsuario?: boolean | Usuario$FotoUsuarioArgs<ExtArgs>
    Notificacao?: boolean | Usuario$NotificacaoArgs<ExtArgs>
    Proprietario?: boolean | Usuario$ProprietarioArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    hash_senha?: boolean
    telefone?: boolean
    data_nascimento?: boolean
    vip?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    hash_senha?: boolean
    telefone?: boolean
    data_nascimento?: boolean
    vip?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Client?: boolean | Usuario$ClientArgs<ExtArgs>
    FotoUsuario?: boolean | Usuario$FotoUsuarioArgs<ExtArgs>
    Notificacao?: boolean | Usuario$NotificacaoArgs<ExtArgs>
    Proprietario?: boolean | Usuario$ProprietarioArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      Client: Prisma.$ClientPayload<ExtArgs> | null
      FotoUsuario: Prisma.$FotoUsuarioPayload<ExtArgs>[]
      Notificacao: Prisma.$NotificacaoPayload<ExtArgs>[]
      Proprietario: Prisma.$ProprietarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      sobrenome: string
      email: string
      hash_senha: string
      telefone: string | null
      data_nascimento: Date | null
      vip: boolean
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Client<T extends Usuario$ClientArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ClientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    FotoUsuario<T extends Usuario$FotoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$FotoUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    Notificacao<T extends Usuario$NotificacaoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$NotificacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany"> | Null>
    Proprietario<T extends Usuario$ProprietarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ProprietarioArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly sobrenome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly hash_senha: FieldRef<"Usuario", 'String'>
    readonly telefone: FieldRef<"Usuario", 'String'>
    readonly data_nascimento: FieldRef<"Usuario", 'DateTime'>
    readonly vip: FieldRef<"Usuario", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.Client
   */
  export type Usuario$ClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Usuario.FotoUsuario
   */
  export type Usuario$FotoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    where?: FotoUsuarioWhereInput
    orderBy?: FotoUsuarioOrderByWithRelationInput | FotoUsuarioOrderByWithRelationInput[]
    cursor?: FotoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FotoUsuarioScalarFieldEnum | FotoUsuarioScalarFieldEnum[]
  }

  /**
   * Usuario.Notificacao
   */
  export type Usuario$NotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    cursor?: NotificacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Usuario.Proprietario
   */
  export type Usuario$ProprietarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    where?: ProprietarioWhereInput
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ClientSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ClientMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ClientMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    usuarioId: number
    _all: number
  }


  export type ClientAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ClientSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ClientMinAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    usuarioId?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _avg?: ClientAvgAggregateInputType
    _sum?: ClientSumAggregateInputType
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: number
    usuarioId: number
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    Avaliacao?: boolean | Client$AvaliacaoArgs<ExtArgs>
    Avaliacao_acomodacao?: boolean | Client$Avaliacao_acomodacaoArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Cupom?: boolean | Client$CupomArgs<ExtArgs>
    Favorito?: boolean | Client$FavoritoArgs<ExtArgs>
    Reserva?: boolean | Client$ReservaArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    usuarioId?: boolean
  }

  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Avaliacao?: boolean | Client$AvaliacaoArgs<ExtArgs>
    Avaliacao_acomodacao?: boolean | Client$Avaliacao_acomodacaoArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Cupom?: boolean | Client$CupomArgs<ExtArgs>
    Favorito?: boolean | Client$FavoritoArgs<ExtArgs>
    Reserva?: boolean | Client$ReservaArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      Avaliacao: Prisma.$AvaliacaoPayload<ExtArgs>[]
      Avaliacao_acomodacao: Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>[]
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      Cupom: Prisma.$ClienteNoCupomPayload<ExtArgs>[]
      Favorito: Prisma.$FavoritoPayload<ExtArgs>[]
      Reserva: Prisma.$ReservaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Avaliacao<T extends Client$AvaliacaoArgs<ExtArgs> = {}>(args?: Subset<T, Client$AvaliacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany"> | Null>
    Avaliacao_acomodacao<T extends Client$Avaliacao_acomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, Client$Avaliacao_acomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Cupom<T extends Client$CupomArgs<ExtArgs> = {}>(args?: Subset<T, Client$CupomArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findMany"> | Null>
    Favorito<T extends Client$FavoritoArgs<ExtArgs> = {}>(args?: Subset<T, Client$FavoritoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany"> | Null>
    Reserva<T extends Client$ReservaArgs<ExtArgs> = {}>(args?: Subset<T, Client$ReservaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */ 
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'Int'>
    readonly usuarioId: FieldRef<"Client", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
  }

  /**
   * Client.Avaliacao
   */
  export type Client$AvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Client.Avaliacao_acomodacao
   */
  export type Client$Avaliacao_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    where?: Avaliacao_acomodacaoWhereInput
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Avaliacao_acomodacaoScalarFieldEnum | Avaliacao_acomodacaoScalarFieldEnum[]
  }

  /**
   * Client.Cupom
   */
  export type Client$CupomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    where?: ClienteNoCupomWhereInput
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    cursor?: ClienteNoCupomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteNoCupomScalarFieldEnum | ClienteNoCupomScalarFieldEnum[]
  }

  /**
   * Client.Favorito
   */
  export type Client$FavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Client.Reserva
   */
  export type Client$ReservaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model Proprietario
   */

  export type AggregateProprietario = {
    _count: ProprietarioCountAggregateOutputType | null
    _avg: ProprietarioAvgAggregateOutputType | null
    _sum: ProprietarioSumAggregateOutputType | null
    _min: ProprietarioMinAggregateOutputType | null
    _max: ProprietarioMaxAggregateOutputType | null
  }

  export type ProprietarioAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tempo_hospedagem: number | null
  }

  export type ProprietarioSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tempo_hospedagem: number | null
  }

  export type ProprietarioMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tempo_hospedagem: number | null
    avaliacao: string | null
    sobre: string | null
  }

  export type ProprietarioMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tempo_hospedagem: number | null
    avaliacao: string | null
    sobre: string | null
  }

  export type ProprietarioCountAggregateOutputType = {
    id: number
    usuarioId: number
    tempo_hospedagem: number
    avaliacao: number
    sobre: number
    _all: number
  }


  export type ProprietarioAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    tempo_hospedagem?: true
  }

  export type ProprietarioSumAggregateInputType = {
    id?: true
    usuarioId?: true
    tempo_hospedagem?: true
  }

  export type ProprietarioMinAggregateInputType = {
    id?: true
    usuarioId?: true
    tempo_hospedagem?: true
    avaliacao?: true
    sobre?: true
  }

  export type ProprietarioMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    tempo_hospedagem?: true
    avaliacao?: true
    sobre?: true
  }

  export type ProprietarioCountAggregateInputType = {
    id?: true
    usuarioId?: true
    tempo_hospedagem?: true
    avaliacao?: true
    sobre?: true
    _all?: true
  }

  export type ProprietarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proprietario to aggregate.
     */
    where?: ProprietarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proprietarios to fetch.
     */
    orderBy?: ProprietarioOrderByWithRelationInput | ProprietarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProprietarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proprietarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proprietarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Proprietarios
    **/
    _count?: true | ProprietarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProprietarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProprietarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProprietarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProprietarioMaxAggregateInputType
  }

  export type GetProprietarioAggregateType<T extends ProprietarioAggregateArgs> = {
        [P in keyof T & keyof AggregateProprietario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProprietario[P]>
      : GetScalarType<T[P], AggregateProprietario[P]>
  }




  export type ProprietarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProprietarioWhereInput
    orderBy?: ProprietarioOrderByWithAggregationInput | ProprietarioOrderByWithAggregationInput[]
    by: ProprietarioScalarFieldEnum[] | ProprietarioScalarFieldEnum
    having?: ProprietarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProprietarioCountAggregateInputType | true
    _avg?: ProprietarioAvgAggregateInputType
    _sum?: ProprietarioSumAggregateInputType
    _min?: ProprietarioMinAggregateInputType
    _max?: ProprietarioMaxAggregateInputType
  }

  export type ProprietarioGroupByOutputType = {
    id: number
    usuarioId: number
    tempo_hospedagem: number | null
    avaliacao: string | null
    sobre: string | null
    _count: ProprietarioCountAggregateOutputType | null
    _avg: ProprietarioAvgAggregateOutputType | null
    _sum: ProprietarioSumAggregateOutputType | null
    _min: ProprietarioMinAggregateOutputType | null
    _max: ProprietarioMaxAggregateOutputType | null
  }

  type GetProprietarioGroupByPayload<T extends ProprietarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProprietarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProprietarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProprietarioGroupByOutputType[P]>
            : GetScalarType<T[P], ProprietarioGroupByOutputType[P]>
        }
      >
    >


  export type ProprietarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    tempo_hospedagem?: boolean
    avaliacao?: boolean
    sobre?: boolean
    Gerenciamento_ganhos?: boolean | Proprietario$Gerenciamento_ganhosArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Interesse?: boolean | Proprietario$InteresseArgs<ExtArgs>
    _count?: boolean | ProprietarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proprietario"]>

  export type ProprietarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    tempo_hospedagem?: boolean
    avaliacao?: boolean
    sobre?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proprietario"]>

  export type ProprietarioSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    tempo_hospedagem?: boolean
    avaliacao?: boolean
    sobre?: boolean
  }

  export type ProprietarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Gerenciamento_ganhos?: boolean | Proprietario$Gerenciamento_ganhosArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Interesse?: boolean | Proprietario$InteresseArgs<ExtArgs>
    _count?: boolean | ProprietarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProprietarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ProprietarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proprietario"
    objects: {
      Gerenciamento_ganhos: Prisma.$Gerenciamento_ganhosPayload<ExtArgs>[]
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      Interesse: Prisma.$ProprietarioNoInteressePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      tempo_hospedagem: number | null
      avaliacao: string | null
      sobre: string | null
    }, ExtArgs["result"]["proprietario"]>
    composites: {}
  }

  type ProprietarioGetPayload<S extends boolean | null | undefined | ProprietarioDefaultArgs> = $Result.GetResult<Prisma.$ProprietarioPayload, S>

  type ProprietarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProprietarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProprietarioCountAggregateInputType | true
    }

  export interface ProprietarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proprietario'], meta: { name: 'Proprietario' } }
    /**
     * Find zero or one Proprietario that matches the filter.
     * @param {ProprietarioFindUniqueArgs} args - Arguments to find a Proprietario
     * @example
     * // Get one Proprietario
     * const proprietario = await prisma.proprietario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProprietarioFindUniqueArgs>(args: SelectSubset<T, ProprietarioFindUniqueArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Proprietario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProprietarioFindUniqueOrThrowArgs} args - Arguments to find a Proprietario
     * @example
     * // Get one Proprietario
     * const proprietario = await prisma.proprietario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProprietarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ProprietarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Proprietario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioFindFirstArgs} args - Arguments to find a Proprietario
     * @example
     * // Get one Proprietario
     * const proprietario = await prisma.proprietario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProprietarioFindFirstArgs>(args?: SelectSubset<T, ProprietarioFindFirstArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Proprietario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioFindFirstOrThrowArgs} args - Arguments to find a Proprietario
     * @example
     * // Get one Proprietario
     * const proprietario = await prisma.proprietario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProprietarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ProprietarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Proprietarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proprietarios
     * const proprietarios = await prisma.proprietario.findMany()
     * 
     * // Get first 10 Proprietarios
     * const proprietarios = await prisma.proprietario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proprietarioWithIdOnly = await prisma.proprietario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProprietarioFindManyArgs>(args?: SelectSubset<T, ProprietarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Proprietario.
     * @param {ProprietarioCreateArgs} args - Arguments to create a Proprietario.
     * @example
     * // Create one Proprietario
     * const Proprietario = await prisma.proprietario.create({
     *   data: {
     *     // ... data to create a Proprietario
     *   }
     * })
     * 
     */
    create<T extends ProprietarioCreateArgs>(args: SelectSubset<T, ProprietarioCreateArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Proprietarios.
     * @param {ProprietarioCreateManyArgs} args - Arguments to create many Proprietarios.
     * @example
     * // Create many Proprietarios
     * const proprietario = await prisma.proprietario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProprietarioCreateManyArgs>(args?: SelectSubset<T, ProprietarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proprietarios and returns the data saved in the database.
     * @param {ProprietarioCreateManyAndReturnArgs} args - Arguments to create many Proprietarios.
     * @example
     * // Create many Proprietarios
     * const proprietario = await prisma.proprietario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proprietarios and only return the `id`
     * const proprietarioWithIdOnly = await prisma.proprietario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProprietarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ProprietarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Proprietario.
     * @param {ProprietarioDeleteArgs} args - Arguments to delete one Proprietario.
     * @example
     * // Delete one Proprietario
     * const Proprietario = await prisma.proprietario.delete({
     *   where: {
     *     // ... filter to delete one Proprietario
     *   }
     * })
     * 
     */
    delete<T extends ProprietarioDeleteArgs>(args: SelectSubset<T, ProprietarioDeleteArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Proprietario.
     * @param {ProprietarioUpdateArgs} args - Arguments to update one Proprietario.
     * @example
     * // Update one Proprietario
     * const proprietario = await prisma.proprietario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProprietarioUpdateArgs>(args: SelectSubset<T, ProprietarioUpdateArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Proprietarios.
     * @param {ProprietarioDeleteManyArgs} args - Arguments to filter Proprietarios to delete.
     * @example
     * // Delete a few Proprietarios
     * const { count } = await prisma.proprietario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProprietarioDeleteManyArgs>(args?: SelectSubset<T, ProprietarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proprietarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proprietarios
     * const proprietario = await prisma.proprietario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProprietarioUpdateManyArgs>(args: SelectSubset<T, ProprietarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Proprietario.
     * @param {ProprietarioUpsertArgs} args - Arguments to update or create a Proprietario.
     * @example
     * // Update or create a Proprietario
     * const proprietario = await prisma.proprietario.upsert({
     *   create: {
     *     // ... data to create a Proprietario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proprietario we want to update
     *   }
     * })
     */
    upsert<T extends ProprietarioUpsertArgs>(args: SelectSubset<T, ProprietarioUpsertArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Proprietarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioCountArgs} args - Arguments to filter Proprietarios to count.
     * @example
     * // Count the number of Proprietarios
     * const count = await prisma.proprietario.count({
     *   where: {
     *     // ... the filter for the Proprietarios we want to count
     *   }
     * })
    **/
    count<T extends ProprietarioCountArgs>(
      args?: Subset<T, ProprietarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProprietarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proprietario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProprietarioAggregateArgs>(args: Subset<T, ProprietarioAggregateArgs>): Prisma.PrismaPromise<GetProprietarioAggregateType<T>>

    /**
     * Group by Proprietario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProprietarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProprietarioGroupByArgs['orderBy'] }
        : { orderBy?: ProprietarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProprietarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProprietarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proprietario model
   */
  readonly fields: ProprietarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proprietario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProprietarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Gerenciamento_ganhos<T extends Proprietario$Gerenciamento_ganhosArgs<ExtArgs> = {}>(args?: Subset<T, Proprietario$Gerenciamento_ganhosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findMany"> | Null>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Interesse<T extends Proprietario$InteresseArgs<ExtArgs> = {}>(args?: Subset<T, Proprietario$InteresseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proprietario model
   */ 
  interface ProprietarioFieldRefs {
    readonly id: FieldRef<"Proprietario", 'Int'>
    readonly usuarioId: FieldRef<"Proprietario", 'Int'>
    readonly tempo_hospedagem: FieldRef<"Proprietario", 'Int'>
    readonly avaliacao: FieldRef<"Proprietario", 'String'>
    readonly sobre: FieldRef<"Proprietario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Proprietario findUnique
   */
  export type ProprietarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter, which Proprietario to fetch.
     */
    where: ProprietarioWhereUniqueInput
  }

  /**
   * Proprietario findUniqueOrThrow
   */
  export type ProprietarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter, which Proprietario to fetch.
     */
    where: ProprietarioWhereUniqueInput
  }

  /**
   * Proprietario findFirst
   */
  export type ProprietarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter, which Proprietario to fetch.
     */
    where?: ProprietarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proprietarios to fetch.
     */
    orderBy?: ProprietarioOrderByWithRelationInput | ProprietarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proprietarios.
     */
    cursor?: ProprietarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proprietarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proprietarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proprietarios.
     */
    distinct?: ProprietarioScalarFieldEnum | ProprietarioScalarFieldEnum[]
  }

  /**
   * Proprietario findFirstOrThrow
   */
  export type ProprietarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter, which Proprietario to fetch.
     */
    where?: ProprietarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proprietarios to fetch.
     */
    orderBy?: ProprietarioOrderByWithRelationInput | ProprietarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proprietarios.
     */
    cursor?: ProprietarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proprietarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proprietarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proprietarios.
     */
    distinct?: ProprietarioScalarFieldEnum | ProprietarioScalarFieldEnum[]
  }

  /**
   * Proprietario findMany
   */
  export type ProprietarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter, which Proprietarios to fetch.
     */
    where?: ProprietarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proprietarios to fetch.
     */
    orderBy?: ProprietarioOrderByWithRelationInput | ProprietarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Proprietarios.
     */
    cursor?: ProprietarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proprietarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proprietarios.
     */
    skip?: number
    distinct?: ProprietarioScalarFieldEnum | ProprietarioScalarFieldEnum[]
  }

  /**
   * Proprietario create
   */
  export type ProprietarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Proprietario.
     */
    data: XOR<ProprietarioCreateInput, ProprietarioUncheckedCreateInput>
  }

  /**
   * Proprietario createMany
   */
  export type ProprietarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Proprietarios.
     */
    data: ProprietarioCreateManyInput | ProprietarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proprietario createManyAndReturn
   */
  export type ProprietarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Proprietarios.
     */
    data: ProprietarioCreateManyInput | ProprietarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Proprietario update
   */
  export type ProprietarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Proprietario.
     */
    data: XOR<ProprietarioUpdateInput, ProprietarioUncheckedUpdateInput>
    /**
     * Choose, which Proprietario to update.
     */
    where: ProprietarioWhereUniqueInput
  }

  /**
   * Proprietario updateMany
   */
  export type ProprietarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Proprietarios.
     */
    data: XOR<ProprietarioUpdateManyMutationInput, ProprietarioUncheckedUpdateManyInput>
    /**
     * Filter which Proprietarios to update
     */
    where?: ProprietarioWhereInput
  }

  /**
   * Proprietario upsert
   */
  export type ProprietarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Proprietario to update in case it exists.
     */
    where: ProprietarioWhereUniqueInput
    /**
     * In case the Proprietario found by the `where` argument doesn't exist, create a new Proprietario with this data.
     */
    create: XOR<ProprietarioCreateInput, ProprietarioUncheckedCreateInput>
    /**
     * In case the Proprietario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProprietarioUpdateInput, ProprietarioUncheckedUpdateInput>
  }

  /**
   * Proprietario delete
   */
  export type ProprietarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
    /**
     * Filter which Proprietario to delete.
     */
    where: ProprietarioWhereUniqueInput
  }

  /**
   * Proprietario deleteMany
   */
  export type ProprietarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proprietarios to delete
     */
    where?: ProprietarioWhereInput
  }

  /**
   * Proprietario.Gerenciamento_ganhos
   */
  export type Proprietario$Gerenciamento_ganhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    where?: Gerenciamento_ganhosWhereInput
    orderBy?: Gerenciamento_ganhosOrderByWithRelationInput | Gerenciamento_ganhosOrderByWithRelationInput[]
    cursor?: Gerenciamento_ganhosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Gerenciamento_ganhosScalarFieldEnum | Gerenciamento_ganhosScalarFieldEnum[]
  }

  /**
   * Proprietario.Interesse
   */
  export type Proprietario$InteresseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    where?: ProprietarioNoInteresseWhereInput
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProprietarioNoInteresseScalarFieldEnum | ProprietarioNoInteresseScalarFieldEnum[]
  }

  /**
   * Proprietario without action
   */
  export type ProprietarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proprietario
     */
    select?: ProprietarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioInclude<ExtArgs> | null
  }


  /**
   * Model FotoUsuario
   */

  export type AggregateFotoUsuario = {
    _count: FotoUsuarioCountAggregateOutputType | null
    _avg: FotoUsuarioAvgAggregateOutputType | null
    _sum: FotoUsuarioSumAggregateOutputType | null
    _min: FotoUsuarioMinAggregateOutputType | null
    _max: FotoUsuarioMaxAggregateOutputType | null
  }

  export type FotoUsuarioAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type FotoUsuarioSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type FotoUsuarioMinAggregateOutputType = {
    id: number | null
    url_foto: string | null
    usuarioId: number | null
  }

  export type FotoUsuarioMaxAggregateOutputType = {
    id: number | null
    url_foto: string | null
    usuarioId: number | null
  }

  export type FotoUsuarioCountAggregateOutputType = {
    id: number
    url_foto: number
    usuarioId: number
    _all: number
  }


  export type FotoUsuarioAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type FotoUsuarioSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type FotoUsuarioMinAggregateInputType = {
    id?: true
    url_foto?: true
    usuarioId?: true
  }

  export type FotoUsuarioMaxAggregateInputType = {
    id?: true
    url_foto?: true
    usuarioId?: true
  }

  export type FotoUsuarioCountAggregateInputType = {
    id?: true
    url_foto?: true
    usuarioId?: true
    _all?: true
  }

  export type FotoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FotoUsuario to aggregate.
     */
    where?: FotoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotoUsuarios to fetch.
     */
    orderBy?: FotoUsuarioOrderByWithRelationInput | FotoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FotoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FotoUsuarios
    **/
    _count?: true | FotoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FotoUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FotoUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FotoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FotoUsuarioMaxAggregateInputType
  }

  export type GetFotoUsuarioAggregateType<T extends FotoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFotoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFotoUsuario[P]>
      : GetScalarType<T[P], AggregateFotoUsuario[P]>
  }




  export type FotoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FotoUsuarioWhereInput
    orderBy?: FotoUsuarioOrderByWithAggregationInput | FotoUsuarioOrderByWithAggregationInput[]
    by: FotoUsuarioScalarFieldEnum[] | FotoUsuarioScalarFieldEnum
    having?: FotoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FotoUsuarioCountAggregateInputType | true
    _avg?: FotoUsuarioAvgAggregateInputType
    _sum?: FotoUsuarioSumAggregateInputType
    _min?: FotoUsuarioMinAggregateInputType
    _max?: FotoUsuarioMaxAggregateInputType
  }

  export type FotoUsuarioGroupByOutputType = {
    id: number
    url_foto: string
    usuarioId: number
    _count: FotoUsuarioCountAggregateOutputType | null
    _avg: FotoUsuarioAvgAggregateOutputType | null
    _sum: FotoUsuarioSumAggregateOutputType | null
    _min: FotoUsuarioMinAggregateOutputType | null
    _max: FotoUsuarioMaxAggregateOutputType | null
  }

  type GetFotoUsuarioGroupByPayload<T extends FotoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FotoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FotoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FotoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], FotoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type FotoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    usuarioId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fotoUsuario"]>

  export type FotoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    usuarioId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fotoUsuario"]>

  export type FotoUsuarioSelectScalar = {
    id?: boolean
    url_foto?: boolean
    usuarioId?: boolean
  }

  export type FotoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type FotoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $FotoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FotoUsuario"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url_foto: string
      usuarioId: number
    }, ExtArgs["result"]["fotoUsuario"]>
    composites: {}
  }

  type FotoUsuarioGetPayload<S extends boolean | null | undefined | FotoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$FotoUsuarioPayload, S>

  type FotoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FotoUsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FotoUsuarioCountAggregateInputType | true
    }

  export interface FotoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FotoUsuario'], meta: { name: 'FotoUsuario' } }
    /**
     * Find zero or one FotoUsuario that matches the filter.
     * @param {FotoUsuarioFindUniqueArgs} args - Arguments to find a FotoUsuario
     * @example
     * // Get one FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FotoUsuarioFindUniqueArgs>(args: SelectSubset<T, FotoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FotoUsuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FotoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a FotoUsuario
     * @example
     * // Get one FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FotoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, FotoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FotoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioFindFirstArgs} args - Arguments to find a FotoUsuario
     * @example
     * // Get one FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FotoUsuarioFindFirstArgs>(args?: SelectSubset<T, FotoUsuarioFindFirstArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FotoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioFindFirstOrThrowArgs} args - Arguments to find a FotoUsuario
     * @example
     * // Get one FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FotoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, FotoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FotoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FotoUsuarios
     * const fotoUsuarios = await prisma.fotoUsuario.findMany()
     * 
     * // Get first 10 FotoUsuarios
     * const fotoUsuarios = await prisma.fotoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fotoUsuarioWithIdOnly = await prisma.fotoUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FotoUsuarioFindManyArgs>(args?: SelectSubset<T, FotoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FotoUsuario.
     * @param {FotoUsuarioCreateArgs} args - Arguments to create a FotoUsuario.
     * @example
     * // Create one FotoUsuario
     * const FotoUsuario = await prisma.fotoUsuario.create({
     *   data: {
     *     // ... data to create a FotoUsuario
     *   }
     * })
     * 
     */
    create<T extends FotoUsuarioCreateArgs>(args: SelectSubset<T, FotoUsuarioCreateArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FotoUsuarios.
     * @param {FotoUsuarioCreateManyArgs} args - Arguments to create many FotoUsuarios.
     * @example
     * // Create many FotoUsuarios
     * const fotoUsuario = await prisma.fotoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FotoUsuarioCreateManyArgs>(args?: SelectSubset<T, FotoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FotoUsuarios and returns the data saved in the database.
     * @param {FotoUsuarioCreateManyAndReturnArgs} args - Arguments to create many FotoUsuarios.
     * @example
     * // Create many FotoUsuarios
     * const fotoUsuario = await prisma.fotoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FotoUsuarios and only return the `id`
     * const fotoUsuarioWithIdOnly = await prisma.fotoUsuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FotoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, FotoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FotoUsuario.
     * @param {FotoUsuarioDeleteArgs} args - Arguments to delete one FotoUsuario.
     * @example
     * // Delete one FotoUsuario
     * const FotoUsuario = await prisma.fotoUsuario.delete({
     *   where: {
     *     // ... filter to delete one FotoUsuario
     *   }
     * })
     * 
     */
    delete<T extends FotoUsuarioDeleteArgs>(args: SelectSubset<T, FotoUsuarioDeleteArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FotoUsuario.
     * @param {FotoUsuarioUpdateArgs} args - Arguments to update one FotoUsuario.
     * @example
     * // Update one FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FotoUsuarioUpdateArgs>(args: SelectSubset<T, FotoUsuarioUpdateArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FotoUsuarios.
     * @param {FotoUsuarioDeleteManyArgs} args - Arguments to filter FotoUsuarios to delete.
     * @example
     * // Delete a few FotoUsuarios
     * const { count } = await prisma.fotoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FotoUsuarioDeleteManyArgs>(args?: SelectSubset<T, FotoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FotoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FotoUsuarios
     * const fotoUsuario = await prisma.fotoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FotoUsuarioUpdateManyArgs>(args: SelectSubset<T, FotoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FotoUsuario.
     * @param {FotoUsuarioUpsertArgs} args - Arguments to update or create a FotoUsuario.
     * @example
     * // Update or create a FotoUsuario
     * const fotoUsuario = await prisma.fotoUsuario.upsert({
     *   create: {
     *     // ... data to create a FotoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FotoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends FotoUsuarioUpsertArgs>(args: SelectSubset<T, FotoUsuarioUpsertArgs<ExtArgs>>): Prisma__FotoUsuarioClient<$Result.GetResult<Prisma.$FotoUsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FotoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioCountArgs} args - Arguments to filter FotoUsuarios to count.
     * @example
     * // Count the number of FotoUsuarios
     * const count = await prisma.fotoUsuario.count({
     *   where: {
     *     // ... the filter for the FotoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends FotoUsuarioCountArgs>(
      args?: Subset<T, FotoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FotoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FotoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FotoUsuarioAggregateArgs>(args: Subset<T, FotoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetFotoUsuarioAggregateType<T>>

    /**
     * Group by FotoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FotoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FotoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FotoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: FotoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FotoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFotoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FotoUsuario model
   */
  readonly fields: FotoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FotoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FotoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FotoUsuario model
   */ 
  interface FotoUsuarioFieldRefs {
    readonly id: FieldRef<"FotoUsuario", 'Int'>
    readonly url_foto: FieldRef<"FotoUsuario", 'String'>
    readonly usuarioId: FieldRef<"FotoUsuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * FotoUsuario findUnique
   */
  export type FotoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FotoUsuario to fetch.
     */
    where: FotoUsuarioWhereUniqueInput
  }

  /**
   * FotoUsuario findUniqueOrThrow
   */
  export type FotoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FotoUsuario to fetch.
     */
    where: FotoUsuarioWhereUniqueInput
  }

  /**
   * FotoUsuario findFirst
   */
  export type FotoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FotoUsuario to fetch.
     */
    where?: FotoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotoUsuarios to fetch.
     */
    orderBy?: FotoUsuarioOrderByWithRelationInput | FotoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FotoUsuarios.
     */
    cursor?: FotoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FotoUsuarios.
     */
    distinct?: FotoUsuarioScalarFieldEnum | FotoUsuarioScalarFieldEnum[]
  }

  /**
   * FotoUsuario findFirstOrThrow
   */
  export type FotoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FotoUsuario to fetch.
     */
    where?: FotoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotoUsuarios to fetch.
     */
    orderBy?: FotoUsuarioOrderByWithRelationInput | FotoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FotoUsuarios.
     */
    cursor?: FotoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FotoUsuarios.
     */
    distinct?: FotoUsuarioScalarFieldEnum | FotoUsuarioScalarFieldEnum[]
  }

  /**
   * FotoUsuario findMany
   */
  export type FotoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FotoUsuarios to fetch.
     */
    where?: FotoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FotoUsuarios to fetch.
     */
    orderBy?: FotoUsuarioOrderByWithRelationInput | FotoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FotoUsuarios.
     */
    cursor?: FotoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FotoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FotoUsuarios.
     */
    skip?: number
    distinct?: FotoUsuarioScalarFieldEnum | FotoUsuarioScalarFieldEnum[]
  }

  /**
   * FotoUsuario create
   */
  export type FotoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a FotoUsuario.
     */
    data: XOR<FotoUsuarioCreateInput, FotoUsuarioUncheckedCreateInput>
  }

  /**
   * FotoUsuario createMany
   */
  export type FotoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FotoUsuarios.
     */
    data: FotoUsuarioCreateManyInput | FotoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FotoUsuario createManyAndReturn
   */
  export type FotoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FotoUsuarios.
     */
    data: FotoUsuarioCreateManyInput | FotoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FotoUsuario update
   */
  export type FotoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a FotoUsuario.
     */
    data: XOR<FotoUsuarioUpdateInput, FotoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which FotoUsuario to update.
     */
    where: FotoUsuarioWhereUniqueInput
  }

  /**
   * FotoUsuario updateMany
   */
  export type FotoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FotoUsuarios.
     */
    data: XOR<FotoUsuarioUpdateManyMutationInput, FotoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which FotoUsuarios to update
     */
    where?: FotoUsuarioWhereInput
  }

  /**
   * FotoUsuario upsert
   */
  export type FotoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the FotoUsuario to update in case it exists.
     */
    where: FotoUsuarioWhereUniqueInput
    /**
     * In case the FotoUsuario found by the `where` argument doesn't exist, create a new FotoUsuario with this data.
     */
    create: XOR<FotoUsuarioCreateInput, FotoUsuarioUncheckedCreateInput>
    /**
     * In case the FotoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FotoUsuarioUpdateInput, FotoUsuarioUncheckedUpdateInput>
  }

  /**
   * FotoUsuario delete
   */
  export type FotoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which FotoUsuario to delete.
     */
    where: FotoUsuarioWhereUniqueInput
  }

  /**
   * FotoUsuario deleteMany
   */
  export type FotoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FotoUsuarios to delete
     */
    where?: FotoUsuarioWhereInput
  }

  /**
   * FotoUsuario without action
   */
  export type FotoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FotoUsuario
     */
    select?: FotoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FotoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Notificacao
   */

  export type AggregateNotificacao = {
    _count: NotificacaoCountAggregateOutputType | null
    _avg: NotificacaoAvgAggregateOutputType | null
    _sum: NotificacaoSumAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  export type NotificacaoAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type NotificacaoSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type NotificacaoMinAggregateOutputType = {
    id: number | null
    mensagem: string | null
    titulo: string | null
    usuarioId: number | null
    leitura: boolean | null
    data_criacao: Date | null
  }

  export type NotificacaoMaxAggregateOutputType = {
    id: number | null
    mensagem: string | null
    titulo: string | null
    usuarioId: number | null
    leitura: boolean | null
    data_criacao: Date | null
  }

  export type NotificacaoCountAggregateOutputType = {
    id: number
    mensagem: number
    titulo: number
    usuarioId: number
    leitura: number
    data_criacao: number
    _all: number
  }


  export type NotificacaoAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type NotificacaoSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type NotificacaoMinAggregateInputType = {
    id?: true
    mensagem?: true
    titulo?: true
    usuarioId?: true
    leitura?: true
    data_criacao?: true
  }

  export type NotificacaoMaxAggregateInputType = {
    id?: true
    mensagem?: true
    titulo?: true
    usuarioId?: true
    leitura?: true
    data_criacao?: true
  }

  export type NotificacaoCountAggregateInputType = {
    id?: true
    mensagem?: true
    titulo?: true
    usuarioId?: true
    leitura?: true
    data_criacao?: true
    _all?: true
  }

  export type NotificacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacao to aggregate.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificacaos
    **/
    _count?: true | NotificacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacaoMaxAggregateInputType
  }

  export type GetNotificacaoAggregateType<T extends NotificacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacao[P]>
      : GetScalarType<T[P], AggregateNotificacao[P]>
  }




  export type NotificacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacaoWhereInput
    orderBy?: NotificacaoOrderByWithAggregationInput | NotificacaoOrderByWithAggregationInput[]
    by: NotificacaoScalarFieldEnum[] | NotificacaoScalarFieldEnum
    having?: NotificacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacaoCountAggregateInputType | true
    _avg?: NotificacaoAvgAggregateInputType
    _sum?: NotificacaoSumAggregateInputType
    _min?: NotificacaoMinAggregateInputType
    _max?: NotificacaoMaxAggregateInputType
  }

  export type NotificacaoGroupByOutputType = {
    id: number
    mensagem: string
    titulo: string
    usuarioId: number
    leitura: boolean
    data_criacao: Date
    _count: NotificacaoCountAggregateOutputType | null
    _avg: NotificacaoAvgAggregateOutputType | null
    _sum: NotificacaoSumAggregateOutputType | null
    _min: NotificacaoMinAggregateOutputType | null
    _max: NotificacaoMaxAggregateOutputType | null
  }

  type GetNotificacaoGroupByPayload<T extends NotificacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacaoGroupByOutputType[P]>
        }
      >
    >


  export type NotificacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensagem?: boolean
    titulo?: boolean
    usuarioId?: boolean
    leitura?: boolean
    data_criacao?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensagem?: boolean
    titulo?: boolean
    usuarioId?: boolean
    leitura?: boolean
    data_criacao?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacao"]>

  export type NotificacaoSelectScalar = {
    id?: boolean
    mensagem?: boolean
    titulo?: boolean
    usuarioId?: boolean
    leitura?: boolean
    data_criacao?: boolean
  }

  export type NotificacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type NotificacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $NotificacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificacao"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      mensagem: string
      titulo: string
      usuarioId: number
      leitura: boolean
      data_criacao: Date
    }, ExtArgs["result"]["notificacao"]>
    composites: {}
  }

  type NotificacaoGetPayload<S extends boolean | null | undefined | NotificacaoDefaultArgs> = $Result.GetResult<Prisma.$NotificacaoPayload, S>

  type NotificacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificacaoCountAggregateInputType | true
    }

  export interface NotificacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificacao'], meta: { name: 'Notificacao' } }
    /**
     * Find zero or one Notificacao that matches the filter.
     * @param {NotificacaoFindUniqueArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacaoFindUniqueArgs>(args: SelectSubset<T, NotificacaoFindUniqueArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notificacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificacaoFindUniqueOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notificacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacaoFindFirstArgs>(args?: SelectSubset<T, NotificacaoFindFirstArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notificacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindFirstOrThrowArgs} args - Arguments to find a Notificacao
     * @example
     * // Get one Notificacao
     * const notificacao = await prisma.notificacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notificacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacaos
     * const notificacaos = await prisma.notificacao.findMany()
     * 
     * // Get first 10 Notificacaos
     * const notificacaos = await prisma.notificacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacaoFindManyArgs>(args?: SelectSubset<T, NotificacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notificacao.
     * @param {NotificacaoCreateArgs} args - Arguments to create a Notificacao.
     * @example
     * // Create one Notificacao
     * const Notificacao = await prisma.notificacao.create({
     *   data: {
     *     // ... data to create a Notificacao
     *   }
     * })
     * 
     */
    create<T extends NotificacaoCreateArgs>(args: SelectSubset<T, NotificacaoCreateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notificacaos.
     * @param {NotificacaoCreateManyArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacaoCreateManyArgs>(args?: SelectSubset<T, NotificacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacaos and returns the data saved in the database.
     * @param {NotificacaoCreateManyAndReturnArgs} args - Arguments to create many Notificacaos.
     * @example
     * // Create many Notificacaos
     * const notificacao = await prisma.notificacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacaos and only return the `id`
     * const notificacaoWithIdOnly = await prisma.notificacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notificacao.
     * @param {NotificacaoDeleteArgs} args - Arguments to delete one Notificacao.
     * @example
     * // Delete one Notificacao
     * const Notificacao = await prisma.notificacao.delete({
     *   where: {
     *     // ... filter to delete one Notificacao
     *   }
     * })
     * 
     */
    delete<T extends NotificacaoDeleteArgs>(args: SelectSubset<T, NotificacaoDeleteArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notificacao.
     * @param {NotificacaoUpdateArgs} args - Arguments to update one Notificacao.
     * @example
     * // Update one Notificacao
     * const notificacao = await prisma.notificacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacaoUpdateArgs>(args: SelectSubset<T, NotificacaoUpdateArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notificacaos.
     * @param {NotificacaoDeleteManyArgs} args - Arguments to filter Notificacaos to delete.
     * @example
     * // Delete a few Notificacaos
     * const { count } = await prisma.notificacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacaoDeleteManyArgs>(args?: SelectSubset<T, NotificacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacaos
     * const notificacao = await prisma.notificacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacaoUpdateManyArgs>(args: SelectSubset<T, NotificacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notificacao.
     * @param {NotificacaoUpsertArgs} args - Arguments to update or create a Notificacao.
     * @example
     * // Update or create a Notificacao
     * const notificacao = await prisma.notificacao.upsert({
     *   create: {
     *     // ... data to create a Notificacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacao we want to update
     *   }
     * })
     */
    upsert<T extends NotificacaoUpsertArgs>(args: SelectSubset<T, NotificacaoUpsertArgs<ExtArgs>>): Prisma__NotificacaoClient<$Result.GetResult<Prisma.$NotificacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoCountArgs} args - Arguments to filter Notificacaos to count.
     * @example
     * // Count the number of Notificacaos
     * const count = await prisma.notificacao.count({
     *   where: {
     *     // ... the filter for the Notificacaos we want to count
     *   }
     * })
    **/
    count<T extends NotificacaoCountArgs>(
      args?: Subset<T, NotificacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacaoAggregateArgs>(args: Subset<T, NotificacaoAggregateArgs>): Prisma.PrismaPromise<GetNotificacaoAggregateType<T>>

    /**
     * Group by Notificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacaoGroupByArgs['orderBy'] }
        : { orderBy?: NotificacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificacao model
   */
  readonly fields: NotificacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificacao model
   */ 
  interface NotificacaoFieldRefs {
    readonly id: FieldRef<"Notificacao", 'Int'>
    readonly mensagem: FieldRef<"Notificacao", 'String'>
    readonly titulo: FieldRef<"Notificacao", 'String'>
    readonly usuarioId: FieldRef<"Notificacao", 'Int'>
    readonly leitura: FieldRef<"Notificacao", 'Boolean'>
    readonly data_criacao: FieldRef<"Notificacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notificacao findUnique
   */
  export type NotificacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findUniqueOrThrow
   */
  export type NotificacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao findFirst
   */
  export type NotificacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findFirstOrThrow
   */
  export type NotificacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacao to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacaos.
     */
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao findMany
   */
  export type NotificacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter, which Notificacaos to fetch.
     */
    where?: NotificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacaos to fetch.
     */
    orderBy?: NotificacaoOrderByWithRelationInput | NotificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificacaos.
     */
    cursor?: NotificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacaos.
     */
    skip?: number
    distinct?: NotificacaoScalarFieldEnum | NotificacaoScalarFieldEnum[]
  }

  /**
   * Notificacao create
   */
  export type NotificacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificacao.
     */
    data: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
  }

  /**
   * Notificacao createMany
   */
  export type NotificacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificacao createManyAndReturn
   */
  export type NotificacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notificacaos.
     */
    data: NotificacaoCreateManyInput | NotificacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacao update
   */
  export type NotificacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificacao.
     */
    data: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
    /**
     * Choose, which Notificacao to update.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao updateMany
   */
  export type NotificacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificacaos.
     */
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyInput>
    /**
     * Filter which Notificacaos to update
     */
    where?: NotificacaoWhereInput
  }

  /**
   * Notificacao upsert
   */
  export type NotificacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificacao to update in case it exists.
     */
    where: NotificacaoWhereUniqueInput
    /**
     * In case the Notificacao found by the `where` argument doesn't exist, create a new Notificacao with this data.
     */
    create: XOR<NotificacaoCreateInput, NotificacaoUncheckedCreateInput>
    /**
     * In case the Notificacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacaoUpdateInput, NotificacaoUncheckedUpdateInput>
  }

  /**
   * Notificacao delete
   */
  export type NotificacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
    /**
     * Filter which Notificacao to delete.
     */
    where: NotificacaoWhereUniqueInput
  }

  /**
   * Notificacao deleteMany
   */
  export type NotificacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacaos to delete
     */
    where?: NotificacaoWhereInput
  }

  /**
   * Notificacao without action
   */
  export type NotificacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacao
     */
    select?: NotificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacaoInclude<ExtArgs> | null
  }


  /**
   * Model Acomodacao
   */

  export type AggregateAcomodacao = {
    _count: AcomodacaoCountAggregateOutputType | null
    _avg: AcomodacaoAvgAggregateOutputType | null
    _sum: AcomodacaoSumAggregateOutputType | null
    _min: AcomodacaoMinAggregateOutputType | null
    _max: AcomodacaoMaxAggregateOutputType | null
  }

  export type AcomodacaoAvgAggregateOutputType = {
    id: number | null
    banheiros: number | null
    quartos: number | null
    camas: number | null
    valor_diaria: number | null
    valor_pet: number | null
    tipo_acomodacaoId: number | null
    hotelId: number | null
  }

  export type AcomodacaoSumAggregateOutputType = {
    id: number | null
    banheiros: number | null
    quartos: number | null
    camas: number | null
    valor_diaria: number | null
    valor_pet: number | null
    tipo_acomodacaoId: number | null
    hotelId: number | null
  }

  export type AcomodacaoMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    banheiros: number | null
    quartos: number | null
    camas: number | null
    valor_diaria: number | null
    valor_pet: number | null
    complemento: string | null
    tipo_acomodacaoId: number | null
    hotelId: number | null
  }

  export type AcomodacaoMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    banheiros: number | null
    quartos: number | null
    camas: number | null
    valor_diaria: number | null
    valor_pet: number | null
    complemento: string | null
    tipo_acomodacaoId: number | null
    hotelId: number | null
  }

  export type AcomodacaoCountAggregateOutputType = {
    id: number
    titulo: number
    descricao: number
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: number
    tipo_acomodacaoId: number
    hotelId: number
    _all: number
  }


  export type AcomodacaoAvgAggregateInputType = {
    id?: true
    banheiros?: true
    quartos?: true
    camas?: true
    valor_diaria?: true
    valor_pet?: true
    tipo_acomodacaoId?: true
    hotelId?: true
  }

  export type AcomodacaoSumAggregateInputType = {
    id?: true
    banheiros?: true
    quartos?: true
    camas?: true
    valor_diaria?: true
    valor_pet?: true
    tipo_acomodacaoId?: true
    hotelId?: true
  }

  export type AcomodacaoMinAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    banheiros?: true
    quartos?: true
    camas?: true
    valor_diaria?: true
    valor_pet?: true
    complemento?: true
    tipo_acomodacaoId?: true
    hotelId?: true
  }

  export type AcomodacaoMaxAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    banheiros?: true
    quartos?: true
    camas?: true
    valor_diaria?: true
    valor_pet?: true
    complemento?: true
    tipo_acomodacaoId?: true
    hotelId?: true
  }

  export type AcomodacaoCountAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    banheiros?: true
    quartos?: true
    camas?: true
    valor_diaria?: true
    valor_pet?: true
    complemento?: true
    tipo_acomodacaoId?: true
    hotelId?: true
    _all?: true
  }

  export type AcomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Acomodacao to aggregate.
     */
    where?: AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Acomodacaos to fetch.
     */
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Acomodacaos
    **/
    _count?: true | AcomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AcomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AcomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AcomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AcomodacaoMaxAggregateInputType
  }

  export type GetAcomodacaoAggregateType<T extends AcomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAcomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAcomodacao[P]>
      : GetScalarType<T[P], AggregateAcomodacao[P]>
  }




  export type AcomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AcomodacaoWhereInput
    orderBy?: AcomodacaoOrderByWithAggregationInput | AcomodacaoOrderByWithAggregationInput[]
    by: AcomodacaoScalarFieldEnum[] | AcomodacaoScalarFieldEnum
    having?: AcomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AcomodacaoCountAggregateInputType | true
    _avg?: AcomodacaoAvgAggregateInputType
    _sum?: AcomodacaoSumAggregateInputType
    _min?: AcomodacaoMinAggregateInputType
    _max?: AcomodacaoMaxAggregateInputType
  }

  export type AcomodacaoGroupByOutputType = {
    id: number
    titulo: string
    descricao: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    _count: AcomodacaoCountAggregateOutputType | null
    _avg: AcomodacaoAvgAggregateOutputType | null
    _sum: AcomodacaoSumAggregateOutputType | null
    _min: AcomodacaoMinAggregateOutputType | null
    _max: AcomodacaoMaxAggregateOutputType | null
  }

  type GetAcomodacaoGroupByPayload<T extends AcomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AcomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AcomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AcomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AcomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type AcomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    banheiros?: boolean
    quartos?: boolean
    camas?: boolean
    valor_diaria?: boolean
    valor_pet?: boolean
    complemento?: boolean
    tipo_acomodacaoId?: boolean
    hotelId?: boolean
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
    tipoAcomodacao?: boolean | TipoAcomodacaoDefaultArgs<ExtArgs>
    Avaliacao_acomodacao?: boolean | Acomodacao$Avaliacao_acomodacaoArgs<ExtArgs>
    ComodidadeNaAcomodacao?: boolean | Acomodacao$ComodidadeNaAcomodacaoArgs<ExtArgs>
    FotoAcomodacao?: boolean | Acomodacao$FotoAcomodacaoArgs<ExtArgs>
    Gerenciamento_ganhos?: boolean | Acomodacao$Gerenciamento_ganhosArgs<ExtArgs>
    Reserva?: boolean | Acomodacao$ReservaArgs<ExtArgs>
    _count?: boolean | AcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["acomodacao"]>

  export type AcomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    banheiros?: boolean
    quartos?: boolean
    camas?: boolean
    valor_diaria?: boolean
    valor_pet?: boolean
    complemento?: boolean
    tipo_acomodacaoId?: boolean
    hotelId?: boolean
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
    tipoAcomodacao?: boolean | TipoAcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["acomodacao"]>

  export type AcomodacaoSelectScalar = {
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    banheiros?: boolean
    quartos?: boolean
    camas?: boolean
    valor_diaria?: boolean
    valor_pet?: boolean
    complemento?: boolean
    tipo_acomodacaoId?: boolean
    hotelId?: boolean
  }

  export type AcomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
    tipoAcomodacao?: boolean | TipoAcomodacaoDefaultArgs<ExtArgs>
    Avaliacao_acomodacao?: boolean | Acomodacao$Avaliacao_acomodacaoArgs<ExtArgs>
    ComodidadeNaAcomodacao?: boolean | Acomodacao$ComodidadeNaAcomodacaoArgs<ExtArgs>
    FotoAcomodacao?: boolean | Acomodacao$FotoAcomodacaoArgs<ExtArgs>
    Gerenciamento_ganhos?: boolean | Acomodacao$Gerenciamento_ganhosArgs<ExtArgs>
    Reserva?: boolean | Acomodacao$ReservaArgs<ExtArgs>
    _count?: boolean | AcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AcomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
    tipoAcomodacao?: boolean | TipoAcomodacaoDefaultArgs<ExtArgs>
  }

  export type $AcomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Acomodacao"
    objects: {
      hotel: Prisma.$HotelPayload<ExtArgs>
      tipoAcomodacao: Prisma.$TipoAcomodacaoPayload<ExtArgs>
      Avaliacao_acomodacao: Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>[]
      ComodidadeNaAcomodacao: Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>[]
      FotoAcomodacao: Prisma.$Foto_AcomodacaoPayload<ExtArgs>[]
      Gerenciamento_ganhos: Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>[]
      Reserva: Prisma.$ReservaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      descricao: string | null
      banheiros: number
      quartos: number
      camas: number
      valor_diaria: number
      valor_pet: number
      complemento: string
      tipo_acomodacaoId: number
      hotelId: number
    }, ExtArgs["result"]["acomodacao"]>
    composites: {}
  }

  type AcomodacaoGetPayload<S extends boolean | null | undefined | AcomodacaoDefaultArgs> = $Result.GetResult<Prisma.$AcomodacaoPayload, S>

  type AcomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AcomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AcomodacaoCountAggregateInputType | true
    }

  export interface AcomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Acomodacao'], meta: { name: 'Acomodacao' } }
    /**
     * Find zero or one Acomodacao that matches the filter.
     * @param {AcomodacaoFindUniqueArgs} args - Arguments to find a Acomodacao
     * @example
     * // Get one Acomodacao
     * const acomodacao = await prisma.acomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AcomodacaoFindUniqueArgs>(args: SelectSubset<T, AcomodacaoFindUniqueArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Acomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AcomodacaoFindUniqueOrThrowArgs} args - Arguments to find a Acomodacao
     * @example
     * // Get one Acomodacao
     * const acomodacao = await prisma.acomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AcomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AcomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Acomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoFindFirstArgs} args - Arguments to find a Acomodacao
     * @example
     * // Get one Acomodacao
     * const acomodacao = await prisma.acomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AcomodacaoFindFirstArgs>(args?: SelectSubset<T, AcomodacaoFindFirstArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Acomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoFindFirstOrThrowArgs} args - Arguments to find a Acomodacao
     * @example
     * // Get one Acomodacao
     * const acomodacao = await prisma.acomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AcomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AcomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Acomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Acomodacaos
     * const acomodacaos = await prisma.acomodacao.findMany()
     * 
     * // Get first 10 Acomodacaos
     * const acomodacaos = await prisma.acomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const acomodacaoWithIdOnly = await prisma.acomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AcomodacaoFindManyArgs>(args?: SelectSubset<T, AcomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Acomodacao.
     * @param {AcomodacaoCreateArgs} args - Arguments to create a Acomodacao.
     * @example
     * // Create one Acomodacao
     * const Acomodacao = await prisma.acomodacao.create({
     *   data: {
     *     // ... data to create a Acomodacao
     *   }
     * })
     * 
     */
    create<T extends AcomodacaoCreateArgs>(args: SelectSubset<T, AcomodacaoCreateArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Acomodacaos.
     * @param {AcomodacaoCreateManyArgs} args - Arguments to create many Acomodacaos.
     * @example
     * // Create many Acomodacaos
     * const acomodacao = await prisma.acomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AcomodacaoCreateManyArgs>(args?: SelectSubset<T, AcomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Acomodacaos and returns the data saved in the database.
     * @param {AcomodacaoCreateManyAndReturnArgs} args - Arguments to create many Acomodacaos.
     * @example
     * // Create many Acomodacaos
     * const acomodacao = await prisma.acomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Acomodacaos and only return the `id`
     * const acomodacaoWithIdOnly = await prisma.acomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AcomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, AcomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Acomodacao.
     * @param {AcomodacaoDeleteArgs} args - Arguments to delete one Acomodacao.
     * @example
     * // Delete one Acomodacao
     * const Acomodacao = await prisma.acomodacao.delete({
     *   where: {
     *     // ... filter to delete one Acomodacao
     *   }
     * })
     * 
     */
    delete<T extends AcomodacaoDeleteArgs>(args: SelectSubset<T, AcomodacaoDeleteArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Acomodacao.
     * @param {AcomodacaoUpdateArgs} args - Arguments to update one Acomodacao.
     * @example
     * // Update one Acomodacao
     * const acomodacao = await prisma.acomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AcomodacaoUpdateArgs>(args: SelectSubset<T, AcomodacaoUpdateArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Acomodacaos.
     * @param {AcomodacaoDeleteManyArgs} args - Arguments to filter Acomodacaos to delete.
     * @example
     * // Delete a few Acomodacaos
     * const { count } = await prisma.acomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AcomodacaoDeleteManyArgs>(args?: SelectSubset<T, AcomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Acomodacaos
     * const acomodacao = await prisma.acomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AcomodacaoUpdateManyArgs>(args: SelectSubset<T, AcomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Acomodacao.
     * @param {AcomodacaoUpsertArgs} args - Arguments to update or create a Acomodacao.
     * @example
     * // Update or create a Acomodacao
     * const acomodacao = await prisma.acomodacao.upsert({
     *   create: {
     *     // ... data to create a Acomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Acomodacao we want to update
     *   }
     * })
     */
    upsert<T extends AcomodacaoUpsertArgs>(args: SelectSubset<T, AcomodacaoUpsertArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoCountArgs} args - Arguments to filter Acomodacaos to count.
     * @example
     * // Count the number of Acomodacaos
     * const count = await prisma.acomodacao.count({
     *   where: {
     *     // ... the filter for the Acomodacaos we want to count
     *   }
     * })
    **/
    count<T extends AcomodacaoCountArgs>(
      args?: Subset<T, AcomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AcomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AcomodacaoAggregateArgs>(args: Subset<T, AcomodacaoAggregateArgs>): Prisma.PrismaPromise<GetAcomodacaoAggregateType<T>>

    /**
     * Group by Acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AcomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AcomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AcomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: AcomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AcomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAcomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Acomodacao model
   */
  readonly fields: AcomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Acomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AcomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tipoAcomodacao<T extends TipoAcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoAcomodacaoDefaultArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Avaliacao_acomodacao<T extends Acomodacao$Avaliacao_acomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, Acomodacao$Avaliacao_acomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    ComodidadeNaAcomodacao<T extends Acomodacao$ComodidadeNaAcomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, Acomodacao$ComodidadeNaAcomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    FotoAcomodacao<T extends Acomodacao$FotoAcomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, Acomodacao$FotoAcomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    Gerenciamento_ganhos<T extends Acomodacao$Gerenciamento_ganhosArgs<ExtArgs> = {}>(args?: Subset<T, Acomodacao$Gerenciamento_ganhosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    Reserva<T extends Acomodacao$ReservaArgs<ExtArgs> = {}>(args?: Subset<T, Acomodacao$ReservaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Acomodacao model
   */ 
  interface AcomodacaoFieldRefs {
    readonly id: FieldRef<"Acomodacao", 'Int'>
    readonly titulo: FieldRef<"Acomodacao", 'String'>
    readonly descricao: FieldRef<"Acomodacao", 'String'>
    readonly banheiros: FieldRef<"Acomodacao", 'Int'>
    readonly quartos: FieldRef<"Acomodacao", 'Int'>
    readonly camas: FieldRef<"Acomodacao", 'Int'>
    readonly valor_diaria: FieldRef<"Acomodacao", 'Float'>
    readonly valor_pet: FieldRef<"Acomodacao", 'Float'>
    readonly complemento: FieldRef<"Acomodacao", 'String'>
    readonly tipo_acomodacaoId: FieldRef<"Acomodacao", 'Int'>
    readonly hotelId: FieldRef<"Acomodacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Acomodacao findUnique
   */
  export type AcomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Acomodacao to fetch.
     */
    where: AcomodacaoWhereUniqueInput
  }

  /**
   * Acomodacao findUniqueOrThrow
   */
  export type AcomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Acomodacao to fetch.
     */
    where: AcomodacaoWhereUniqueInput
  }

  /**
   * Acomodacao findFirst
   */
  export type AcomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Acomodacao to fetch.
     */
    where?: AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Acomodacaos to fetch.
     */
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Acomodacaos.
     */
    cursor?: AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Acomodacaos.
     */
    distinct?: AcomodacaoScalarFieldEnum | AcomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao findFirstOrThrow
   */
  export type AcomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Acomodacao to fetch.
     */
    where?: AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Acomodacaos to fetch.
     */
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Acomodacaos.
     */
    cursor?: AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Acomodacaos.
     */
    distinct?: AcomodacaoScalarFieldEnum | AcomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao findMany
   */
  export type AcomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Acomodacaos to fetch.
     */
    where?: AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Acomodacaos to fetch.
     */
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Acomodacaos.
     */
    cursor?: AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Acomodacaos.
     */
    skip?: number
    distinct?: AcomodacaoScalarFieldEnum | AcomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao create
   */
  export type AcomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Acomodacao.
     */
    data: XOR<AcomodacaoCreateInput, AcomodacaoUncheckedCreateInput>
  }

  /**
   * Acomodacao createMany
   */
  export type AcomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Acomodacaos.
     */
    data: AcomodacaoCreateManyInput | AcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Acomodacao createManyAndReturn
   */
  export type AcomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Acomodacaos.
     */
    data: AcomodacaoCreateManyInput | AcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Acomodacao update
   */
  export type AcomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Acomodacao.
     */
    data: XOR<AcomodacaoUpdateInput, AcomodacaoUncheckedUpdateInput>
    /**
     * Choose, which Acomodacao to update.
     */
    where: AcomodacaoWhereUniqueInput
  }

  /**
   * Acomodacao updateMany
   */
  export type AcomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Acomodacaos.
     */
    data: XOR<AcomodacaoUpdateManyMutationInput, AcomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which Acomodacaos to update
     */
    where?: AcomodacaoWhereInput
  }

  /**
   * Acomodacao upsert
   */
  export type AcomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Acomodacao to update in case it exists.
     */
    where: AcomodacaoWhereUniqueInput
    /**
     * In case the Acomodacao found by the `where` argument doesn't exist, create a new Acomodacao with this data.
     */
    create: XOR<AcomodacaoCreateInput, AcomodacaoUncheckedCreateInput>
    /**
     * In case the Acomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AcomodacaoUpdateInput, AcomodacaoUncheckedUpdateInput>
  }

  /**
   * Acomodacao delete
   */
  export type AcomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter which Acomodacao to delete.
     */
    where: AcomodacaoWhereUniqueInput
  }

  /**
   * Acomodacao deleteMany
   */
  export type AcomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Acomodacaos to delete
     */
    where?: AcomodacaoWhereInput
  }

  /**
   * Acomodacao.Avaliacao_acomodacao
   */
  export type Acomodacao$Avaliacao_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    where?: Avaliacao_acomodacaoWhereInput
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Avaliacao_acomodacaoScalarFieldEnum | Avaliacao_acomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao.ComodidadeNaAcomodacao
   */
  export type Acomodacao$ComodidadeNaAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    where?: ComodidadeNaAcomodacaoWhereInput
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComodidadeNaAcomodacaoScalarFieldEnum | ComodidadeNaAcomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao.FotoAcomodacao
   */
  export type Acomodacao$FotoAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    where?: Foto_AcomodacaoWhereInput
    orderBy?: Foto_AcomodacaoOrderByWithRelationInput | Foto_AcomodacaoOrderByWithRelationInput[]
    cursor?: Foto_AcomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Foto_AcomodacaoScalarFieldEnum | Foto_AcomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao.Gerenciamento_ganhos
   */
  export type Acomodacao$Gerenciamento_ganhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput | Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput[]
    cursor?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Gerenciamento_ganhos_acomodacaoScalarFieldEnum | Gerenciamento_ganhos_acomodacaoScalarFieldEnum[]
  }

  /**
   * Acomodacao.Reserva
   */
  export type Acomodacao$ReservaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Acomodacao without action
   */
  export type AcomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model TipoAcomodacao
   */

  export type AggregateTipoAcomodacao = {
    _count: TipoAcomodacaoCountAggregateOutputType | null
    _avg: TipoAcomodacaoAvgAggregateOutputType | null
    _sum: TipoAcomodacaoSumAggregateOutputType | null
    _min: TipoAcomodacaoMinAggregateOutputType | null
    _max: TipoAcomodacaoMaxAggregateOutputType | null
  }

  export type TipoAcomodacaoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoAcomodacaoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoAcomodacaoMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type TipoAcomodacaoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type TipoAcomodacaoCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type TipoAcomodacaoAvgAggregateInputType = {
    id?: true
  }

  export type TipoAcomodacaoSumAggregateInputType = {
    id?: true
  }

  export type TipoAcomodacaoMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type TipoAcomodacaoMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type TipoAcomodacaoCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type TipoAcomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAcomodacao to aggregate.
     */
    where?: TipoAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAcomodacaos to fetch.
     */
    orderBy?: TipoAcomodacaoOrderByWithRelationInput | TipoAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoAcomodacaos
    **/
    _count?: true | TipoAcomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoAcomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoAcomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoAcomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoAcomodacaoMaxAggregateInputType
  }

  export type GetTipoAcomodacaoAggregateType<T extends TipoAcomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoAcomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoAcomodacao[P]>
      : GetScalarType<T[P], AggregateTipoAcomodacao[P]>
  }




  export type TipoAcomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoAcomodacaoWhereInput
    orderBy?: TipoAcomodacaoOrderByWithAggregationInput | TipoAcomodacaoOrderByWithAggregationInput[]
    by: TipoAcomodacaoScalarFieldEnum[] | TipoAcomodacaoScalarFieldEnum
    having?: TipoAcomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoAcomodacaoCountAggregateInputType | true
    _avg?: TipoAcomodacaoAvgAggregateInputType
    _sum?: TipoAcomodacaoSumAggregateInputType
    _min?: TipoAcomodacaoMinAggregateInputType
    _max?: TipoAcomodacaoMaxAggregateInputType
  }

  export type TipoAcomodacaoGroupByOutputType = {
    id: number
    nome: string
    _count: TipoAcomodacaoCountAggregateOutputType | null
    _avg: TipoAcomodacaoAvgAggregateOutputType | null
    _sum: TipoAcomodacaoSumAggregateOutputType | null
    _min: TipoAcomodacaoMinAggregateOutputType | null
    _max: TipoAcomodacaoMaxAggregateOutputType | null
  }

  type GetTipoAcomodacaoGroupByPayload<T extends TipoAcomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoAcomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoAcomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoAcomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoAcomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type TipoAcomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    Acomodacaoes?: boolean | TipoAcomodacao$AcomodacaoesArgs<ExtArgs>
    _count?: boolean | TipoAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoAcomodacao"]>

  export type TipoAcomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["tipoAcomodacao"]>

  export type TipoAcomodacaoSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type TipoAcomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacaoes?: boolean | TipoAcomodacao$AcomodacaoesArgs<ExtArgs>
    _count?: boolean | TipoAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TipoAcomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TipoAcomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoAcomodacao"
    objects: {
      Acomodacaoes: Prisma.$AcomodacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tipoAcomodacao"]>
    composites: {}
  }

  type TipoAcomodacaoGetPayload<S extends boolean | null | undefined | TipoAcomodacaoDefaultArgs> = $Result.GetResult<Prisma.$TipoAcomodacaoPayload, S>

  type TipoAcomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TipoAcomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoAcomodacaoCountAggregateInputType | true
    }

  export interface TipoAcomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoAcomodacao'], meta: { name: 'TipoAcomodacao' } }
    /**
     * Find zero or one TipoAcomodacao that matches the filter.
     * @param {TipoAcomodacaoFindUniqueArgs} args - Arguments to find a TipoAcomodacao
     * @example
     * // Get one TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoAcomodacaoFindUniqueArgs>(args: SelectSubset<T, TipoAcomodacaoFindUniqueArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoAcomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TipoAcomodacaoFindUniqueOrThrowArgs} args - Arguments to find a TipoAcomodacao
     * @example
     * // Get one TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoAcomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoAcomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoAcomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoFindFirstArgs} args - Arguments to find a TipoAcomodacao
     * @example
     * // Get one TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoAcomodacaoFindFirstArgs>(args?: SelectSubset<T, TipoAcomodacaoFindFirstArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoAcomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoFindFirstOrThrowArgs} args - Arguments to find a TipoAcomodacao
     * @example
     * // Get one TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoAcomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoAcomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoAcomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoAcomodacaos
     * const tipoAcomodacaos = await prisma.tipoAcomodacao.findMany()
     * 
     * // Get first 10 TipoAcomodacaos
     * const tipoAcomodacaos = await prisma.tipoAcomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoAcomodacaoWithIdOnly = await prisma.tipoAcomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoAcomodacaoFindManyArgs>(args?: SelectSubset<T, TipoAcomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoAcomodacao.
     * @param {TipoAcomodacaoCreateArgs} args - Arguments to create a TipoAcomodacao.
     * @example
     * // Create one TipoAcomodacao
     * const TipoAcomodacao = await prisma.tipoAcomodacao.create({
     *   data: {
     *     // ... data to create a TipoAcomodacao
     *   }
     * })
     * 
     */
    create<T extends TipoAcomodacaoCreateArgs>(args: SelectSubset<T, TipoAcomodacaoCreateArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoAcomodacaos.
     * @param {TipoAcomodacaoCreateManyArgs} args - Arguments to create many TipoAcomodacaos.
     * @example
     * // Create many TipoAcomodacaos
     * const tipoAcomodacao = await prisma.tipoAcomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoAcomodacaoCreateManyArgs>(args?: SelectSubset<T, TipoAcomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoAcomodacaos and returns the data saved in the database.
     * @param {TipoAcomodacaoCreateManyAndReturnArgs} args - Arguments to create many TipoAcomodacaos.
     * @example
     * // Create many TipoAcomodacaos
     * const tipoAcomodacao = await prisma.tipoAcomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoAcomodacaos and only return the `id`
     * const tipoAcomodacaoWithIdOnly = await prisma.tipoAcomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoAcomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoAcomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoAcomodacao.
     * @param {TipoAcomodacaoDeleteArgs} args - Arguments to delete one TipoAcomodacao.
     * @example
     * // Delete one TipoAcomodacao
     * const TipoAcomodacao = await prisma.tipoAcomodacao.delete({
     *   where: {
     *     // ... filter to delete one TipoAcomodacao
     *   }
     * })
     * 
     */
    delete<T extends TipoAcomodacaoDeleteArgs>(args: SelectSubset<T, TipoAcomodacaoDeleteArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoAcomodacao.
     * @param {TipoAcomodacaoUpdateArgs} args - Arguments to update one TipoAcomodacao.
     * @example
     * // Update one TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoAcomodacaoUpdateArgs>(args: SelectSubset<T, TipoAcomodacaoUpdateArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoAcomodacaos.
     * @param {TipoAcomodacaoDeleteManyArgs} args - Arguments to filter TipoAcomodacaos to delete.
     * @example
     * // Delete a few TipoAcomodacaos
     * const { count } = await prisma.tipoAcomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoAcomodacaoDeleteManyArgs>(args?: SelectSubset<T, TipoAcomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoAcomodacaos
     * const tipoAcomodacao = await prisma.tipoAcomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoAcomodacaoUpdateManyArgs>(args: SelectSubset<T, TipoAcomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoAcomodacao.
     * @param {TipoAcomodacaoUpsertArgs} args - Arguments to update or create a TipoAcomodacao.
     * @example
     * // Update or create a TipoAcomodacao
     * const tipoAcomodacao = await prisma.tipoAcomodacao.upsert({
     *   create: {
     *     // ... data to create a TipoAcomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoAcomodacao we want to update
     *   }
     * })
     */
    upsert<T extends TipoAcomodacaoUpsertArgs>(args: SelectSubset<T, TipoAcomodacaoUpsertArgs<ExtArgs>>): Prisma__TipoAcomodacaoClient<$Result.GetResult<Prisma.$TipoAcomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoCountArgs} args - Arguments to filter TipoAcomodacaos to count.
     * @example
     * // Count the number of TipoAcomodacaos
     * const count = await prisma.tipoAcomodacao.count({
     *   where: {
     *     // ... the filter for the TipoAcomodacaos we want to count
     *   }
     * })
    **/
    count<T extends TipoAcomodacaoCountArgs>(
      args?: Subset<T, TipoAcomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoAcomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoAcomodacaoAggregateArgs>(args: Subset<T, TipoAcomodacaoAggregateArgs>): Prisma.PrismaPromise<GetTipoAcomodacaoAggregateType<T>>

    /**
     * Group by TipoAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAcomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoAcomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoAcomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: TipoAcomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoAcomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoAcomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoAcomodacao model
   */
  readonly fields: TipoAcomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoAcomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoAcomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Acomodacaoes<T extends TipoAcomodacao$AcomodacaoesArgs<ExtArgs> = {}>(args?: Subset<T, TipoAcomodacao$AcomodacaoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoAcomodacao model
   */ 
  interface TipoAcomodacaoFieldRefs {
    readonly id: FieldRef<"TipoAcomodacao", 'Int'>
    readonly nome: FieldRef<"TipoAcomodacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoAcomodacao findUnique
   */
  export type TipoAcomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAcomodacao to fetch.
     */
    where: TipoAcomodacaoWhereUniqueInput
  }

  /**
   * TipoAcomodacao findUniqueOrThrow
   */
  export type TipoAcomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAcomodacao to fetch.
     */
    where: TipoAcomodacaoWhereUniqueInput
  }

  /**
   * TipoAcomodacao findFirst
   */
  export type TipoAcomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAcomodacao to fetch.
     */
    where?: TipoAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAcomodacaos to fetch.
     */
    orderBy?: TipoAcomodacaoOrderByWithRelationInput | TipoAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAcomodacaos.
     */
    cursor?: TipoAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAcomodacaos.
     */
    distinct?: TipoAcomodacaoScalarFieldEnum | TipoAcomodacaoScalarFieldEnum[]
  }

  /**
   * TipoAcomodacao findFirstOrThrow
   */
  export type TipoAcomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAcomodacao to fetch.
     */
    where?: TipoAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAcomodacaos to fetch.
     */
    orderBy?: TipoAcomodacaoOrderByWithRelationInput | TipoAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAcomodacaos.
     */
    cursor?: TipoAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAcomodacaos.
     */
    distinct?: TipoAcomodacaoScalarFieldEnum | TipoAcomodacaoScalarFieldEnum[]
  }

  /**
   * TipoAcomodacao findMany
   */
  export type TipoAcomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAcomodacaos to fetch.
     */
    where?: TipoAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAcomodacaos to fetch.
     */
    orderBy?: TipoAcomodacaoOrderByWithRelationInput | TipoAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoAcomodacaos.
     */
    cursor?: TipoAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAcomodacaos.
     */
    skip?: number
    distinct?: TipoAcomodacaoScalarFieldEnum | TipoAcomodacaoScalarFieldEnum[]
  }

  /**
   * TipoAcomodacao create
   */
  export type TipoAcomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoAcomodacao.
     */
    data: XOR<TipoAcomodacaoCreateInput, TipoAcomodacaoUncheckedCreateInput>
  }

  /**
   * TipoAcomodacao createMany
   */
  export type TipoAcomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoAcomodacaos.
     */
    data: TipoAcomodacaoCreateManyInput | TipoAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoAcomodacao createManyAndReturn
   */
  export type TipoAcomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TipoAcomodacaos.
     */
    data: TipoAcomodacaoCreateManyInput | TipoAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoAcomodacao update
   */
  export type TipoAcomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoAcomodacao.
     */
    data: XOR<TipoAcomodacaoUpdateInput, TipoAcomodacaoUncheckedUpdateInput>
    /**
     * Choose, which TipoAcomodacao to update.
     */
    where: TipoAcomodacaoWhereUniqueInput
  }

  /**
   * TipoAcomodacao updateMany
   */
  export type TipoAcomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoAcomodacaos.
     */
    data: XOR<TipoAcomodacaoUpdateManyMutationInput, TipoAcomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which TipoAcomodacaos to update
     */
    where?: TipoAcomodacaoWhereInput
  }

  /**
   * TipoAcomodacao upsert
   */
  export type TipoAcomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoAcomodacao to update in case it exists.
     */
    where: TipoAcomodacaoWhereUniqueInput
    /**
     * In case the TipoAcomodacao found by the `where` argument doesn't exist, create a new TipoAcomodacao with this data.
     */
    create: XOR<TipoAcomodacaoCreateInput, TipoAcomodacaoUncheckedCreateInput>
    /**
     * In case the TipoAcomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoAcomodacaoUpdateInput, TipoAcomodacaoUncheckedUpdateInput>
  }

  /**
   * TipoAcomodacao delete
   */
  export type TipoAcomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter which TipoAcomodacao to delete.
     */
    where: TipoAcomodacaoWhereUniqueInput
  }

  /**
   * TipoAcomodacao deleteMany
   */
  export type TipoAcomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAcomodacaos to delete
     */
    where?: TipoAcomodacaoWhereInput
  }

  /**
   * TipoAcomodacao.Acomodacaoes
   */
  export type TipoAcomodacao$AcomodacaoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Acomodacao
     */
    select?: AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AcomodacaoInclude<ExtArgs> | null
    where?: AcomodacaoWhereInput
    orderBy?: AcomodacaoOrderByWithRelationInput | AcomodacaoOrderByWithRelationInput[]
    cursor?: AcomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AcomodacaoScalarFieldEnum | AcomodacaoScalarFieldEnum[]
  }

  /**
   * TipoAcomodacao without action
   */
  export type TipoAcomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAcomodacao
     */
    select?: TipoAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAcomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model Foto_Acomodacao
   */

  export type AggregateFoto_Acomodacao = {
    _count: Foto_AcomodacaoCountAggregateOutputType | null
    _avg: Foto_AcomodacaoAvgAggregateOutputType | null
    _sum: Foto_AcomodacaoSumAggregateOutputType | null
    _min: Foto_AcomodacaoMinAggregateOutputType | null
    _max: Foto_AcomodacaoMaxAggregateOutputType | null
  }

  export type Foto_AcomodacaoAvgAggregateOutputType = {
    id: number | null
    acomodacaoId: number | null
  }

  export type Foto_AcomodacaoSumAggregateOutputType = {
    id: number | null
    acomodacaoId: number | null
  }

  export type Foto_AcomodacaoMinAggregateOutputType = {
    id: number | null
    url_foto: string | null
    acomodacaoId: number | null
  }

  export type Foto_AcomodacaoMaxAggregateOutputType = {
    id: number | null
    url_foto: string | null
    acomodacaoId: number | null
  }

  export type Foto_AcomodacaoCountAggregateOutputType = {
    id: number
    url_foto: number
    acomodacaoId: number
    _all: number
  }


  export type Foto_AcomodacaoAvgAggregateInputType = {
    id?: true
    acomodacaoId?: true
  }

  export type Foto_AcomodacaoSumAggregateInputType = {
    id?: true
    acomodacaoId?: true
  }

  export type Foto_AcomodacaoMinAggregateInputType = {
    id?: true
    url_foto?: true
    acomodacaoId?: true
  }

  export type Foto_AcomodacaoMaxAggregateInputType = {
    id?: true
    url_foto?: true
    acomodacaoId?: true
  }

  export type Foto_AcomodacaoCountAggregateInputType = {
    id?: true
    url_foto?: true
    acomodacaoId?: true
    _all?: true
  }

  export type Foto_AcomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foto_Acomodacao to aggregate.
     */
    where?: Foto_AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Acomodacaos to fetch.
     */
    orderBy?: Foto_AcomodacaoOrderByWithRelationInput | Foto_AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Foto_AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Foto_Acomodacaos
    **/
    _count?: true | Foto_AcomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Foto_AcomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Foto_AcomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Foto_AcomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Foto_AcomodacaoMaxAggregateInputType
  }

  export type GetFoto_AcomodacaoAggregateType<T extends Foto_AcomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateFoto_Acomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoto_Acomodacao[P]>
      : GetScalarType<T[P], AggregateFoto_Acomodacao[P]>
  }




  export type Foto_AcomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Foto_AcomodacaoWhereInput
    orderBy?: Foto_AcomodacaoOrderByWithAggregationInput | Foto_AcomodacaoOrderByWithAggregationInput[]
    by: Foto_AcomodacaoScalarFieldEnum[] | Foto_AcomodacaoScalarFieldEnum
    having?: Foto_AcomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Foto_AcomodacaoCountAggregateInputType | true
    _avg?: Foto_AcomodacaoAvgAggregateInputType
    _sum?: Foto_AcomodacaoSumAggregateInputType
    _min?: Foto_AcomodacaoMinAggregateInputType
    _max?: Foto_AcomodacaoMaxAggregateInputType
  }

  export type Foto_AcomodacaoGroupByOutputType = {
    id: number
    url_foto: string
    acomodacaoId: number
    _count: Foto_AcomodacaoCountAggregateOutputType | null
    _avg: Foto_AcomodacaoAvgAggregateOutputType | null
    _sum: Foto_AcomodacaoSumAggregateOutputType | null
    _min: Foto_AcomodacaoMinAggregateOutputType | null
    _max: Foto_AcomodacaoMaxAggregateOutputType | null
  }

  type GetFoto_AcomodacaoGroupByPayload<T extends Foto_AcomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Foto_AcomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Foto_AcomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Foto_AcomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], Foto_AcomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type Foto_AcomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    acomodacaoId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foto_Acomodacao"]>

  export type Foto_AcomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url_foto?: boolean
    acomodacaoId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foto_Acomodacao"]>

  export type Foto_AcomodacaoSelectScalar = {
    id?: boolean
    url_foto?: boolean
    acomodacaoId?: boolean
  }

  export type Foto_AcomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }
  export type Foto_AcomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }

  export type $Foto_AcomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Foto_Acomodacao"
    objects: {
      acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url_foto: string
      acomodacaoId: number
    }, ExtArgs["result"]["foto_Acomodacao"]>
    composites: {}
  }

  type Foto_AcomodacaoGetPayload<S extends boolean | null | undefined | Foto_AcomodacaoDefaultArgs> = $Result.GetResult<Prisma.$Foto_AcomodacaoPayload, S>

  type Foto_AcomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Foto_AcomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Foto_AcomodacaoCountAggregateInputType | true
    }

  export interface Foto_AcomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Foto_Acomodacao'], meta: { name: 'Foto_Acomodacao' } }
    /**
     * Find zero or one Foto_Acomodacao that matches the filter.
     * @param {Foto_AcomodacaoFindUniqueArgs} args - Arguments to find a Foto_Acomodacao
     * @example
     * // Get one Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Foto_AcomodacaoFindUniqueArgs>(args: SelectSubset<T, Foto_AcomodacaoFindUniqueArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Foto_Acomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Foto_AcomodacaoFindUniqueOrThrowArgs} args - Arguments to find a Foto_Acomodacao
     * @example
     * // Get one Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Foto_AcomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, Foto_AcomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Foto_Acomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoFindFirstArgs} args - Arguments to find a Foto_Acomodacao
     * @example
     * // Get one Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Foto_AcomodacaoFindFirstArgs>(args?: SelectSubset<T, Foto_AcomodacaoFindFirstArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Foto_Acomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoFindFirstOrThrowArgs} args - Arguments to find a Foto_Acomodacao
     * @example
     * // Get one Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Foto_AcomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, Foto_AcomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Foto_Acomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Foto_Acomodacaos
     * const foto_Acomodacaos = await prisma.foto_Acomodacao.findMany()
     * 
     * // Get first 10 Foto_Acomodacaos
     * const foto_Acomodacaos = await prisma.foto_Acomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foto_AcomodacaoWithIdOnly = await prisma.foto_Acomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Foto_AcomodacaoFindManyArgs>(args?: SelectSubset<T, Foto_AcomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Foto_Acomodacao.
     * @param {Foto_AcomodacaoCreateArgs} args - Arguments to create a Foto_Acomodacao.
     * @example
     * // Create one Foto_Acomodacao
     * const Foto_Acomodacao = await prisma.foto_Acomodacao.create({
     *   data: {
     *     // ... data to create a Foto_Acomodacao
     *   }
     * })
     * 
     */
    create<T extends Foto_AcomodacaoCreateArgs>(args: SelectSubset<T, Foto_AcomodacaoCreateArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Foto_Acomodacaos.
     * @param {Foto_AcomodacaoCreateManyArgs} args - Arguments to create many Foto_Acomodacaos.
     * @example
     * // Create many Foto_Acomodacaos
     * const foto_Acomodacao = await prisma.foto_Acomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Foto_AcomodacaoCreateManyArgs>(args?: SelectSubset<T, Foto_AcomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Foto_Acomodacaos and returns the data saved in the database.
     * @param {Foto_AcomodacaoCreateManyAndReturnArgs} args - Arguments to create many Foto_Acomodacaos.
     * @example
     * // Create many Foto_Acomodacaos
     * const foto_Acomodacao = await prisma.foto_Acomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Foto_Acomodacaos and only return the `id`
     * const foto_AcomodacaoWithIdOnly = await prisma.foto_Acomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Foto_AcomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, Foto_AcomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Foto_Acomodacao.
     * @param {Foto_AcomodacaoDeleteArgs} args - Arguments to delete one Foto_Acomodacao.
     * @example
     * // Delete one Foto_Acomodacao
     * const Foto_Acomodacao = await prisma.foto_Acomodacao.delete({
     *   where: {
     *     // ... filter to delete one Foto_Acomodacao
     *   }
     * })
     * 
     */
    delete<T extends Foto_AcomodacaoDeleteArgs>(args: SelectSubset<T, Foto_AcomodacaoDeleteArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Foto_Acomodacao.
     * @param {Foto_AcomodacaoUpdateArgs} args - Arguments to update one Foto_Acomodacao.
     * @example
     * // Update one Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Foto_AcomodacaoUpdateArgs>(args: SelectSubset<T, Foto_AcomodacaoUpdateArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Foto_Acomodacaos.
     * @param {Foto_AcomodacaoDeleteManyArgs} args - Arguments to filter Foto_Acomodacaos to delete.
     * @example
     * // Delete a few Foto_Acomodacaos
     * const { count } = await prisma.foto_Acomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Foto_AcomodacaoDeleteManyArgs>(args?: SelectSubset<T, Foto_AcomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foto_Acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Foto_Acomodacaos
     * const foto_Acomodacao = await prisma.foto_Acomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Foto_AcomodacaoUpdateManyArgs>(args: SelectSubset<T, Foto_AcomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Foto_Acomodacao.
     * @param {Foto_AcomodacaoUpsertArgs} args - Arguments to update or create a Foto_Acomodacao.
     * @example
     * // Update or create a Foto_Acomodacao
     * const foto_Acomodacao = await prisma.foto_Acomodacao.upsert({
     *   create: {
     *     // ... data to create a Foto_Acomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Foto_Acomodacao we want to update
     *   }
     * })
     */
    upsert<T extends Foto_AcomodacaoUpsertArgs>(args: SelectSubset<T, Foto_AcomodacaoUpsertArgs<ExtArgs>>): Prisma__Foto_AcomodacaoClient<$Result.GetResult<Prisma.$Foto_AcomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Foto_Acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoCountArgs} args - Arguments to filter Foto_Acomodacaos to count.
     * @example
     * // Count the number of Foto_Acomodacaos
     * const count = await prisma.foto_Acomodacao.count({
     *   where: {
     *     // ... the filter for the Foto_Acomodacaos we want to count
     *   }
     * })
    **/
    count<T extends Foto_AcomodacaoCountArgs>(
      args?: Subset<T, Foto_AcomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Foto_AcomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Foto_Acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Foto_AcomodacaoAggregateArgs>(args: Subset<T, Foto_AcomodacaoAggregateArgs>): Prisma.PrismaPromise<GetFoto_AcomodacaoAggregateType<T>>

    /**
     * Group by Foto_Acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_AcomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Foto_AcomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Foto_AcomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: Foto_AcomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Foto_AcomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoto_AcomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Foto_Acomodacao model
   */
  readonly fields: Foto_AcomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Foto_Acomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Foto_AcomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    acomodacao<T extends AcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AcomodacaoDefaultArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Foto_Acomodacao model
   */ 
  interface Foto_AcomodacaoFieldRefs {
    readonly id: FieldRef<"Foto_Acomodacao", 'Int'>
    readonly url_foto: FieldRef<"Foto_Acomodacao", 'String'>
    readonly acomodacaoId: FieldRef<"Foto_Acomodacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Foto_Acomodacao findUnique
   */
  export type Foto_AcomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Acomodacao to fetch.
     */
    where: Foto_AcomodacaoWhereUniqueInput
  }

  /**
   * Foto_Acomodacao findUniqueOrThrow
   */
  export type Foto_AcomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Acomodacao to fetch.
     */
    where: Foto_AcomodacaoWhereUniqueInput
  }

  /**
   * Foto_Acomodacao findFirst
   */
  export type Foto_AcomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Acomodacao to fetch.
     */
    where?: Foto_AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Acomodacaos to fetch.
     */
    orderBy?: Foto_AcomodacaoOrderByWithRelationInput | Foto_AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foto_Acomodacaos.
     */
    cursor?: Foto_AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foto_Acomodacaos.
     */
    distinct?: Foto_AcomodacaoScalarFieldEnum | Foto_AcomodacaoScalarFieldEnum[]
  }

  /**
   * Foto_Acomodacao findFirstOrThrow
   */
  export type Foto_AcomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Acomodacao to fetch.
     */
    where?: Foto_AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Acomodacaos to fetch.
     */
    orderBy?: Foto_AcomodacaoOrderByWithRelationInput | Foto_AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foto_Acomodacaos.
     */
    cursor?: Foto_AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foto_Acomodacaos.
     */
    distinct?: Foto_AcomodacaoScalarFieldEnum | Foto_AcomodacaoScalarFieldEnum[]
  }

  /**
   * Foto_Acomodacao findMany
   */
  export type Foto_AcomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Acomodacaos to fetch.
     */
    where?: Foto_AcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Acomodacaos to fetch.
     */
    orderBy?: Foto_AcomodacaoOrderByWithRelationInput | Foto_AcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Foto_Acomodacaos.
     */
    cursor?: Foto_AcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Acomodacaos.
     */
    skip?: number
    distinct?: Foto_AcomodacaoScalarFieldEnum | Foto_AcomodacaoScalarFieldEnum[]
  }

  /**
   * Foto_Acomodacao create
   */
  export type Foto_AcomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Foto_Acomodacao.
     */
    data: XOR<Foto_AcomodacaoCreateInput, Foto_AcomodacaoUncheckedCreateInput>
  }

  /**
   * Foto_Acomodacao createMany
   */
  export type Foto_AcomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Foto_Acomodacaos.
     */
    data: Foto_AcomodacaoCreateManyInput | Foto_AcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Foto_Acomodacao createManyAndReturn
   */
  export type Foto_AcomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Foto_Acomodacaos.
     */
    data: Foto_AcomodacaoCreateManyInput | Foto_AcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Foto_Acomodacao update
   */
  export type Foto_AcomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Foto_Acomodacao.
     */
    data: XOR<Foto_AcomodacaoUpdateInput, Foto_AcomodacaoUncheckedUpdateInput>
    /**
     * Choose, which Foto_Acomodacao to update.
     */
    where: Foto_AcomodacaoWhereUniqueInput
  }

  /**
   * Foto_Acomodacao updateMany
   */
  export type Foto_AcomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Foto_Acomodacaos.
     */
    data: XOR<Foto_AcomodacaoUpdateManyMutationInput, Foto_AcomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which Foto_Acomodacaos to update
     */
    where?: Foto_AcomodacaoWhereInput
  }

  /**
   * Foto_Acomodacao upsert
   */
  export type Foto_AcomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Foto_Acomodacao to update in case it exists.
     */
    where: Foto_AcomodacaoWhereUniqueInput
    /**
     * In case the Foto_Acomodacao found by the `where` argument doesn't exist, create a new Foto_Acomodacao with this data.
     */
    create: XOR<Foto_AcomodacaoCreateInput, Foto_AcomodacaoUncheckedCreateInput>
    /**
     * In case the Foto_Acomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Foto_AcomodacaoUpdateInput, Foto_AcomodacaoUncheckedUpdateInput>
  }

  /**
   * Foto_Acomodacao delete
   */
  export type Foto_AcomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
    /**
     * Filter which Foto_Acomodacao to delete.
     */
    where: Foto_AcomodacaoWhereUniqueInput
  }

  /**
   * Foto_Acomodacao deleteMany
   */
  export type Foto_AcomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foto_Acomodacaos to delete
     */
    where?: Foto_AcomodacaoWhereInput
  }

  /**
   * Foto_Acomodacao without action
   */
  export type Foto_AcomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Acomodacao
     */
    select?: Foto_AcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_AcomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model Reserva
   */

  export type AggregateReserva = {
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  export type ReservaAvgAggregateOutputType = {
    id: number | null
    quantidade_pessoas: number | null
    clienteId: number | null
    acomodacaoId: number | null
  }

  export type ReservaSumAggregateOutputType = {
    id: number | null
    quantidade_pessoas: number | null
    clienteId: number | null
    acomodacaoId: number | null
  }

  export type ReservaMinAggregateOutputType = {
    id: number | null
    data_check_in: Date | null
    data_check_out: Date | null
    quantidade_pessoas: number | null
    status: string | null
    aceita_pet: boolean | null
    clienteId: number | null
    acomodacaoId: number | null
  }

  export type ReservaMaxAggregateOutputType = {
    id: number | null
    data_check_in: Date | null
    data_check_out: Date | null
    quantidade_pessoas: number | null
    status: string | null
    aceita_pet: boolean | null
    clienteId: number | null
    acomodacaoId: number | null
  }

  export type ReservaCountAggregateOutputType = {
    id: number
    data_check_in: number
    data_check_out: number
    quantidade_pessoas: number
    status: number
    aceita_pet: number
    clienteId: number
    acomodacaoId: number
    _all: number
  }


  export type ReservaAvgAggregateInputType = {
    id?: true
    quantidade_pessoas?: true
    clienteId?: true
    acomodacaoId?: true
  }

  export type ReservaSumAggregateInputType = {
    id?: true
    quantidade_pessoas?: true
    clienteId?: true
    acomodacaoId?: true
  }

  export type ReservaMinAggregateInputType = {
    id?: true
    data_check_in?: true
    data_check_out?: true
    quantidade_pessoas?: true
    status?: true
    aceita_pet?: true
    clienteId?: true
    acomodacaoId?: true
  }

  export type ReservaMaxAggregateInputType = {
    id?: true
    data_check_in?: true
    data_check_out?: true
    quantidade_pessoas?: true
    status?: true
    aceita_pet?: true
    clienteId?: true
    acomodacaoId?: true
  }

  export type ReservaCountAggregateInputType = {
    id?: true
    data_check_in?: true
    data_check_out?: true
    quantidade_pessoas?: true
    status?: true
    aceita_pet?: true
    clienteId?: true
    acomodacaoId?: true
    _all?: true
  }

  export type ReservaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reserva to aggregate.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaMaxAggregateInputType
  }

  export type GetReservaAggregateType<T extends ReservaAggregateArgs> = {
        [P in keyof T & keyof AggregateReserva]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReserva[P]>
      : GetScalarType<T[P], AggregateReserva[P]>
  }




  export type ReservaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithAggregationInput | ReservaOrderByWithAggregationInput[]
    by: ReservaScalarFieldEnum[] | ReservaScalarFieldEnum
    having?: ReservaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaCountAggregateInputType | true
    _avg?: ReservaAvgAggregateInputType
    _sum?: ReservaSumAggregateInputType
    _min?: ReservaMinAggregateInputType
    _max?: ReservaMaxAggregateInputType
  }

  export type ReservaGroupByOutputType = {
    id: number
    data_check_in: Date
    data_check_out: Date
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
    acomodacaoId: number
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  type GetReservaGroupByPayload<T extends ReservaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaGroupByOutputType[P]>
        }
      >
    >


  export type ReservaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_check_in?: boolean
    data_check_out?: boolean
    quantidade_pessoas?: boolean
    status?: boolean
    aceita_pet?: boolean
    clienteId?: boolean
    acomodacaoId?: boolean
    Cobranca?: boolean | Reserva$CobrancaArgs<ExtArgs>
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_check_in?: boolean
    data_check_out?: boolean
    quantidade_pessoas?: boolean
    status?: boolean
    aceita_pet?: boolean
    clienteId?: boolean
    acomodacaoId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectScalar = {
    id?: boolean
    data_check_in?: boolean
    data_check_out?: boolean
    quantidade_pessoas?: boolean
    status?: boolean
    aceita_pet?: boolean
    clienteId?: boolean
    acomodacaoId?: boolean
  }

  export type ReservaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Cobranca?: boolean | Reserva$CobrancaArgs<ExtArgs>
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type ReservaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $ReservaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reserva"
    objects: {
      Cobranca: Prisma.$CobrancaPayload<ExtArgs> | null
      acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>
      cliente: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data_check_in: Date
      data_check_out: Date
      quantidade_pessoas: number
      status: string
      aceita_pet: boolean
      clienteId: number
      acomodacaoId: number
    }, ExtArgs["result"]["reserva"]>
    composites: {}
  }

  type ReservaGetPayload<S extends boolean | null | undefined | ReservaDefaultArgs> = $Result.GetResult<Prisma.$ReservaPayload, S>

  type ReservaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReservaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReservaCountAggregateInputType | true
    }

  export interface ReservaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reserva'], meta: { name: 'Reserva' } }
    /**
     * Find zero or one Reserva that matches the filter.
     * @param {ReservaFindUniqueArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaFindUniqueArgs>(args: SelectSubset<T, ReservaFindUniqueArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Reserva that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReservaFindUniqueOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Reserva that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaFindFirstArgs>(args?: SelectSubset<T, ReservaFindFirstArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Reserva that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reserva.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reserva.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaWithIdOnly = await prisma.reserva.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaFindManyArgs>(args?: SelectSubset<T, ReservaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Reserva.
     * @param {ReservaCreateArgs} args - Arguments to create a Reserva.
     * @example
     * // Create one Reserva
     * const Reserva = await prisma.reserva.create({
     *   data: {
     *     // ... data to create a Reserva
     *   }
     * })
     * 
     */
    create<T extends ReservaCreateArgs>(args: SelectSubset<T, ReservaCreateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reservas.
     * @param {ReservaCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaCreateManyArgs>(args?: SelectSubset<T, ReservaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservaCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `id`
     * const reservaWithIdOnly = await prisma.reserva.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Reserva.
     * @param {ReservaDeleteArgs} args - Arguments to delete one Reserva.
     * @example
     * // Delete one Reserva
     * const Reserva = await prisma.reserva.delete({
     *   where: {
     *     // ... filter to delete one Reserva
     *   }
     * })
     * 
     */
    delete<T extends ReservaDeleteArgs>(args: SelectSubset<T, ReservaDeleteArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Reserva.
     * @param {ReservaUpdateArgs} args - Arguments to update one Reserva.
     * @example
     * // Update one Reserva
     * const reserva = await prisma.reserva.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaUpdateArgs>(args: SelectSubset<T, ReservaUpdateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reservas.
     * @param {ReservaDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reserva.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaDeleteManyArgs>(args?: SelectSubset<T, ReservaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaUpdateManyArgs>(args: SelectSubset<T, ReservaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reserva.
     * @param {ReservaUpsertArgs} args - Arguments to update or create a Reserva.
     * @example
     * // Update or create a Reserva
     * const reserva = await prisma.reserva.upsert({
     *   create: {
     *     // ... data to create a Reserva
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reserva we want to update
     *   }
     * })
     */
    upsert<T extends ReservaUpsertArgs>(args: SelectSubset<T, ReservaUpsertArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reserva.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservaCountArgs>(
      args?: Subset<T, ReservaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaAggregateArgs>(args: Subset<T, ReservaAggregateArgs>): Prisma.PrismaPromise<GetReservaAggregateType<T>>

    /**
     * Group by Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaGroupByArgs['orderBy'] }
        : { orderBy?: ReservaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reserva model
   */
  readonly fields: ReservaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reserva.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Cobranca<T extends Reserva$CobrancaArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$CobrancaArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    acomodacao<T extends AcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AcomodacaoDefaultArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cliente<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reserva model
   */ 
  interface ReservaFieldRefs {
    readonly id: FieldRef<"Reserva", 'Int'>
    readonly data_check_in: FieldRef<"Reserva", 'DateTime'>
    readonly data_check_out: FieldRef<"Reserva", 'DateTime'>
    readonly quantidade_pessoas: FieldRef<"Reserva", 'Int'>
    readonly status: FieldRef<"Reserva", 'String'>
    readonly aceita_pet: FieldRef<"Reserva", 'Boolean'>
    readonly clienteId: FieldRef<"Reserva", 'Int'>
    readonly acomodacaoId: FieldRef<"Reserva", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Reserva findUnique
   */
  export type ReservaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findUniqueOrThrow
   */
  export type ReservaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findFirst
   */
  export type ReservaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findFirstOrThrow
   */
  export type ReservaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findMany
   */
  export type ReservaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva create
   */
  export type ReservaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to create a Reserva.
     */
    data: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
  }

  /**
   * Reserva createMany
   */
  export type ReservaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reserva createManyAndReturn
   */
  export type ReservaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva update
   */
  export type ReservaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to update a Reserva.
     */
    data: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
    /**
     * Choose, which Reserva to update.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva updateMany
   */
  export type ReservaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
  }

  /**
   * Reserva upsert
   */
  export type ReservaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The filter to search for the Reserva to update in case it exists.
     */
    where: ReservaWhereUniqueInput
    /**
     * In case the Reserva found by the `where` argument doesn't exist, create a new Reserva with this data.
     */
    create: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
    /**
     * In case the Reserva was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
  }

  /**
   * Reserva delete
   */
  export type ReservaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter which Reserva to delete.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva deleteMany
   */
  export type ReservaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservaWhereInput
  }

  /**
   * Reserva.Cobranca
   */
  export type Reserva$CobrancaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    where?: CobrancaWhereInput
  }

  /**
   * Reserva without action
   */
  export type ReservaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
  }


  /**
   * Model Gerenciamento_ganhos_acomodacao
   */

  export type AggregateGerenciamento_ganhos_acomodacao = {
    _count: Gerenciamento_ganhos_acomodacaoCountAggregateOutputType | null
    _avg: Gerenciamento_ganhos_acomodacaoAvgAggregateOutputType | null
    _sum: Gerenciamento_ganhos_acomodacaoSumAggregateOutputType | null
    _min: Gerenciamento_ganhos_acomodacaoMinAggregateOutputType | null
    _max: Gerenciamento_ganhos_acomodacaoMaxAggregateOutputType | null
  }

  export type Gerenciamento_ganhos_acomodacaoAvgAggregateOutputType = {
    id: number | null
    valor_lucro: number | null
    acomodacaoId: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoSumAggregateOutputType = {
    id: number | null
    valor_lucro: number | null
    acomodacaoId: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor_lucro: number | null
    acomodacaoId: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor_lucro: number | null
    acomodacaoId: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoCountAggregateOutputType = {
    id: number
    data: number
    valor_lucro: number
    acomodacaoId: number
    _all: number
  }


  export type Gerenciamento_ganhos_acomodacaoAvgAggregateInputType = {
    id?: true
    valor_lucro?: true
    acomodacaoId?: true
  }

  export type Gerenciamento_ganhos_acomodacaoSumAggregateInputType = {
    id?: true
    valor_lucro?: true
    acomodacaoId?: true
  }

  export type Gerenciamento_ganhos_acomodacaoMinAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    acomodacaoId?: true
  }

  export type Gerenciamento_ganhos_acomodacaoMaxAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    acomodacaoId?: true
  }

  export type Gerenciamento_ganhos_acomodacaoCountAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    acomodacaoId?: true
    _all?: true
  }

  export type Gerenciamento_ganhos_acomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Gerenciamento_ganhos_acomodacao to aggregate.
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos_acomodacaos to fetch.
     */
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput | Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gerenciamento_ganhos_acomodacaos
    **/
    _count?: true | Gerenciamento_ganhos_acomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gerenciamento_ganhos_acomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gerenciamento_ganhos_acomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gerenciamento_ganhos_acomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gerenciamento_ganhos_acomodacaoMaxAggregateInputType
  }

  export type GetGerenciamento_ganhos_acomodacaoAggregateType<T extends Gerenciamento_ganhos_acomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateGerenciamento_ganhos_acomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGerenciamento_ganhos_acomodacao[P]>
      : GetScalarType<T[P], AggregateGerenciamento_ganhos_acomodacao[P]>
  }




  export type Gerenciamento_ganhos_acomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithAggregationInput | Gerenciamento_ganhos_acomodacaoOrderByWithAggregationInput[]
    by: Gerenciamento_ganhos_acomodacaoScalarFieldEnum[] | Gerenciamento_ganhos_acomodacaoScalarFieldEnum
    having?: Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gerenciamento_ganhos_acomodacaoCountAggregateInputType | true
    _avg?: Gerenciamento_ganhos_acomodacaoAvgAggregateInputType
    _sum?: Gerenciamento_ganhos_acomodacaoSumAggregateInputType
    _min?: Gerenciamento_ganhos_acomodacaoMinAggregateInputType
    _max?: Gerenciamento_ganhos_acomodacaoMaxAggregateInputType
  }

  export type Gerenciamento_ganhos_acomodacaoGroupByOutputType = {
    id: number
    data: Date | null
    valor_lucro: number | null
    acomodacaoId: number
    _count: Gerenciamento_ganhos_acomodacaoCountAggregateOutputType | null
    _avg: Gerenciamento_ganhos_acomodacaoAvgAggregateOutputType | null
    _sum: Gerenciamento_ganhos_acomodacaoSumAggregateOutputType | null
    _min: Gerenciamento_ganhos_acomodacaoMinAggregateOutputType | null
    _max: Gerenciamento_ganhos_acomodacaoMaxAggregateOutputType | null
  }

  type GetGerenciamento_ganhos_acomodacaoGroupByPayload<T extends Gerenciamento_ganhos_acomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Gerenciamento_ganhos_acomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gerenciamento_ganhos_acomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gerenciamento_ganhos_acomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], Gerenciamento_ganhos_acomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type Gerenciamento_ganhos_acomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    acomodacaoId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gerenciamento_ganhos_acomodacao"]>

  export type Gerenciamento_ganhos_acomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    acomodacaoId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gerenciamento_ganhos_acomodacao"]>

  export type Gerenciamento_ganhos_acomodacaoSelectScalar = {
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    acomodacaoId?: boolean
  }

  export type Gerenciamento_ganhos_acomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }
  export type Gerenciamento_ganhos_acomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
  }

  export type $Gerenciamento_ganhos_acomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Gerenciamento_ganhos_acomodacao"
    objects: {
      acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date | null
      valor_lucro: number | null
      acomodacaoId: number
    }, ExtArgs["result"]["gerenciamento_ganhos_acomodacao"]>
    composites: {}
  }

  type Gerenciamento_ganhos_acomodacaoGetPayload<S extends boolean | null | undefined | Gerenciamento_ganhos_acomodacaoDefaultArgs> = $Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload, S>

  type Gerenciamento_ganhos_acomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Gerenciamento_ganhos_acomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Gerenciamento_ganhos_acomodacaoCountAggregateInputType | true
    }

  export interface Gerenciamento_ganhos_acomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Gerenciamento_ganhos_acomodacao'], meta: { name: 'Gerenciamento_ganhos_acomodacao' } }
    /**
     * Find zero or one Gerenciamento_ganhos_acomodacao that matches the filter.
     * @param {Gerenciamento_ganhos_acomodacaoFindUniqueArgs} args - Arguments to find a Gerenciamento_ganhos_acomodacao
     * @example
     * // Get one Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Gerenciamento_ganhos_acomodacaoFindUniqueArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoFindUniqueArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Gerenciamento_ganhos_acomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Gerenciamento_ganhos_acomodacaoFindUniqueOrThrowArgs} args - Arguments to find a Gerenciamento_ganhos_acomodacao
     * @example
     * // Get one Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Gerenciamento_ganhos_acomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Gerenciamento_ganhos_acomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoFindFirstArgs} args - Arguments to find a Gerenciamento_ganhos_acomodacao
     * @example
     * // Get one Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Gerenciamento_ganhos_acomodacaoFindFirstArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoFindFirstArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Gerenciamento_ganhos_acomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoFindFirstOrThrowArgs} args - Arguments to find a Gerenciamento_ganhos_acomodacao
     * @example
     * // Get one Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Gerenciamento_ganhos_acomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Gerenciamento_ganhos_acomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gerenciamento_ganhos_acomodacaos
     * const gerenciamento_ganhos_acomodacaos = await prisma.gerenciamento_ganhos_acomodacao.findMany()
     * 
     * // Get first 10 Gerenciamento_ganhos_acomodacaos
     * const gerenciamento_ganhos_acomodacaos = await prisma.gerenciamento_ganhos_acomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gerenciamento_ganhos_acomodacaoWithIdOnly = await prisma.gerenciamento_ganhos_acomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Gerenciamento_ganhos_acomodacaoFindManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Gerenciamento_ganhos_acomodacao.
     * @param {Gerenciamento_ganhos_acomodacaoCreateArgs} args - Arguments to create a Gerenciamento_ganhos_acomodacao.
     * @example
     * // Create one Gerenciamento_ganhos_acomodacao
     * const Gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.create({
     *   data: {
     *     // ... data to create a Gerenciamento_ganhos_acomodacao
     *   }
     * })
     * 
     */
    create<T extends Gerenciamento_ganhos_acomodacaoCreateArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoCreateArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Gerenciamento_ganhos_acomodacaos.
     * @param {Gerenciamento_ganhos_acomodacaoCreateManyArgs} args - Arguments to create many Gerenciamento_ganhos_acomodacaos.
     * @example
     * // Create many Gerenciamento_ganhos_acomodacaos
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Gerenciamento_ganhos_acomodacaoCreateManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Gerenciamento_ganhos_acomodacaos and returns the data saved in the database.
     * @param {Gerenciamento_ganhos_acomodacaoCreateManyAndReturnArgs} args - Arguments to create many Gerenciamento_ganhos_acomodacaos.
     * @example
     * // Create many Gerenciamento_ganhos_acomodacaos
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Gerenciamento_ganhos_acomodacaos and only return the `id`
     * const gerenciamento_ganhos_acomodacaoWithIdOnly = await prisma.gerenciamento_ganhos_acomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Gerenciamento_ganhos_acomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Gerenciamento_ganhos_acomodacao.
     * @param {Gerenciamento_ganhos_acomodacaoDeleteArgs} args - Arguments to delete one Gerenciamento_ganhos_acomodacao.
     * @example
     * // Delete one Gerenciamento_ganhos_acomodacao
     * const Gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.delete({
     *   where: {
     *     // ... filter to delete one Gerenciamento_ganhos_acomodacao
     *   }
     * })
     * 
     */
    delete<T extends Gerenciamento_ganhos_acomodacaoDeleteArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoDeleteArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Gerenciamento_ganhos_acomodacao.
     * @param {Gerenciamento_ganhos_acomodacaoUpdateArgs} args - Arguments to update one Gerenciamento_ganhos_acomodacao.
     * @example
     * // Update one Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Gerenciamento_ganhos_acomodacaoUpdateArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoUpdateArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Gerenciamento_ganhos_acomodacaos.
     * @param {Gerenciamento_ganhos_acomodacaoDeleteManyArgs} args - Arguments to filter Gerenciamento_ganhos_acomodacaos to delete.
     * @example
     * // Delete a few Gerenciamento_ganhos_acomodacaos
     * const { count } = await prisma.gerenciamento_ganhos_acomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Gerenciamento_ganhos_acomodacaoDeleteManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhos_acomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gerenciamento_ganhos_acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gerenciamento_ganhos_acomodacaos
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Gerenciamento_ganhos_acomodacaoUpdateManyArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Gerenciamento_ganhos_acomodacao.
     * @param {Gerenciamento_ganhos_acomodacaoUpsertArgs} args - Arguments to update or create a Gerenciamento_ganhos_acomodacao.
     * @example
     * // Update or create a Gerenciamento_ganhos_acomodacao
     * const gerenciamento_ganhos_acomodacao = await prisma.gerenciamento_ganhos_acomodacao.upsert({
     *   create: {
     *     // ... data to create a Gerenciamento_ganhos_acomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gerenciamento_ganhos_acomodacao we want to update
     *   }
     * })
     */
    upsert<T extends Gerenciamento_ganhos_acomodacaoUpsertArgs>(args: SelectSubset<T, Gerenciamento_ganhos_acomodacaoUpsertArgs<ExtArgs>>): Prisma__Gerenciamento_ganhos_acomodacaoClient<$Result.GetResult<Prisma.$Gerenciamento_ganhos_acomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Gerenciamento_ganhos_acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoCountArgs} args - Arguments to filter Gerenciamento_ganhos_acomodacaos to count.
     * @example
     * // Count the number of Gerenciamento_ganhos_acomodacaos
     * const count = await prisma.gerenciamento_ganhos_acomodacao.count({
     *   where: {
     *     // ... the filter for the Gerenciamento_ganhos_acomodacaos we want to count
     *   }
     * })
    **/
    count<T extends Gerenciamento_ganhos_acomodacaoCountArgs>(
      args?: Subset<T, Gerenciamento_ganhos_acomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gerenciamento_ganhos_acomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gerenciamento_ganhos_acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gerenciamento_ganhos_acomodacaoAggregateArgs>(args: Subset<T, Gerenciamento_ganhos_acomodacaoAggregateArgs>): Prisma.PrismaPromise<GetGerenciamento_ganhos_acomodacaoAggregateType<T>>

    /**
     * Group by Gerenciamento_ganhos_acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhos_acomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gerenciamento_ganhos_acomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gerenciamento_ganhos_acomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: Gerenciamento_ganhos_acomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gerenciamento_ganhos_acomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGerenciamento_ganhos_acomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Gerenciamento_ganhos_acomodacao model
   */
  readonly fields: Gerenciamento_ganhos_acomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Gerenciamento_ganhos_acomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Gerenciamento_ganhos_acomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    acomodacao<T extends AcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AcomodacaoDefaultArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Gerenciamento_ganhos_acomodacao model
   */ 
  interface Gerenciamento_ganhos_acomodacaoFieldRefs {
    readonly id: FieldRef<"Gerenciamento_ganhos_acomodacao", 'Int'>
    readonly data: FieldRef<"Gerenciamento_ganhos_acomodacao", 'DateTime'>
    readonly valor_lucro: FieldRef<"Gerenciamento_ganhos_acomodacao", 'Float'>
    readonly acomodacaoId: FieldRef<"Gerenciamento_ganhos_acomodacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Gerenciamento_ganhos_acomodacao findUnique
   */
  export type Gerenciamento_ganhos_acomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos_acomodacao to fetch.
     */
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao findUniqueOrThrow
   */
  export type Gerenciamento_ganhos_acomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos_acomodacao to fetch.
     */
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao findFirst
   */
  export type Gerenciamento_ganhos_acomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos_acomodacao to fetch.
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos_acomodacaos to fetch.
     */
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput | Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gerenciamento_ganhos_acomodacaos.
     */
    cursor?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gerenciamento_ganhos_acomodacaos.
     */
    distinct?: Gerenciamento_ganhos_acomodacaoScalarFieldEnum | Gerenciamento_ganhos_acomodacaoScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos_acomodacao findFirstOrThrow
   */
  export type Gerenciamento_ganhos_acomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos_acomodacao to fetch.
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos_acomodacaos to fetch.
     */
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput | Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gerenciamento_ganhos_acomodacaos.
     */
    cursor?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gerenciamento_ganhos_acomodacaos.
     */
    distinct?: Gerenciamento_ganhos_acomodacaoScalarFieldEnum | Gerenciamento_ganhos_acomodacaoScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos_acomodacao findMany
   */
  export type Gerenciamento_ganhos_acomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos_acomodacaos to fetch.
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos_acomodacaos to fetch.
     */
    orderBy?: Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput | Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gerenciamento_ganhos_acomodacaos.
     */
    cursor?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos_acomodacaos.
     */
    skip?: number
    distinct?: Gerenciamento_ganhos_acomodacaoScalarFieldEnum | Gerenciamento_ganhos_acomodacaoScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos_acomodacao create
   */
  export type Gerenciamento_ganhos_acomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Gerenciamento_ganhos_acomodacao.
     */
    data: XOR<Gerenciamento_ganhos_acomodacaoCreateInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateInput>
  }

  /**
   * Gerenciamento_ganhos_acomodacao createMany
   */
  export type Gerenciamento_ganhos_acomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Gerenciamento_ganhos_acomodacaos.
     */
    data: Gerenciamento_ganhos_acomodacaoCreateManyInput | Gerenciamento_ganhos_acomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Gerenciamento_ganhos_acomodacao createManyAndReturn
   */
  export type Gerenciamento_ganhos_acomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Gerenciamento_ganhos_acomodacaos.
     */
    data: Gerenciamento_ganhos_acomodacaoCreateManyInput | Gerenciamento_ganhos_acomodacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Gerenciamento_ganhos_acomodacao update
   */
  export type Gerenciamento_ganhos_acomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Gerenciamento_ganhos_acomodacao.
     */
    data: XOR<Gerenciamento_ganhos_acomodacaoUpdateInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateInput>
    /**
     * Choose, which Gerenciamento_ganhos_acomodacao to update.
     */
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao updateMany
   */
  export type Gerenciamento_ganhos_acomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Gerenciamento_ganhos_acomodacaos.
     */
    data: XOR<Gerenciamento_ganhos_acomodacaoUpdateManyMutationInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which Gerenciamento_ganhos_acomodacaos to update
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao upsert
   */
  export type Gerenciamento_ganhos_acomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Gerenciamento_ganhos_acomodacao to update in case it exists.
     */
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    /**
     * In case the Gerenciamento_ganhos_acomodacao found by the `where` argument doesn't exist, create a new Gerenciamento_ganhos_acomodacao with this data.
     */
    create: XOR<Gerenciamento_ganhos_acomodacaoCreateInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateInput>
    /**
     * In case the Gerenciamento_ganhos_acomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Gerenciamento_ganhos_acomodacaoUpdateInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateInput>
  }

  /**
   * Gerenciamento_ganhos_acomodacao delete
   */
  export type Gerenciamento_ganhos_acomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter which Gerenciamento_ganhos_acomodacao to delete.
     */
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao deleteMany
   */
  export type Gerenciamento_ganhos_acomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Gerenciamento_ganhos_acomodacaos to delete
     */
    where?: Gerenciamento_ganhos_acomodacaoWhereInput
  }

  /**
   * Gerenciamento_ganhos_acomodacao without action
   */
  export type Gerenciamento_ganhos_acomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos_acomodacao
     */
    select?: Gerenciamento_ganhos_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhos_acomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model Avaliacao_acomodacao
   */

  export type AggregateAvaliacao_acomodacao = {
    _count: Avaliacao_acomodacaoCountAggregateOutputType | null
    _avg: Avaliacao_acomodacaoAvgAggregateOutputType | null
    _sum: Avaliacao_acomodacaoSumAggregateOutputType | null
    _min: Avaliacao_acomodacaoMinAggregateOutputType | null
    _max: Avaliacao_acomodacaoMaxAggregateOutputType | null
  }

  export type Avaliacao_acomodacaoAvgAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    acomodacaoId: number | null
    clienteId: number | null
  }

  export type Avaliacao_acomodacaoSumAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    acomodacaoId: number | null
    clienteId: number | null
  }

  export type Avaliacao_acomodacaoMinAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    acomodacaoId: number | null
    clienteId: number | null
  }

  export type Avaliacao_acomodacaoMaxAggregateOutputType = {
    id: number | null
    custo_beneficio: number | null
    atendimento: number | null
    comida: number | null
    limpeza: number | null
    conforto: number | null
    localizacao: number | null
    comentario: number | null
    acomodacaoId: number | null
    clienteId: number | null
  }

  export type Avaliacao_acomodacaoCountAggregateOutputType = {
    id: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario: number
    acomodacaoId: number
    clienteId: number
    _all: number
  }


  export type Avaliacao_acomodacaoAvgAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    acomodacaoId?: true
    clienteId?: true
  }

  export type Avaliacao_acomodacaoSumAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    acomodacaoId?: true
    clienteId?: true
  }

  export type Avaliacao_acomodacaoMinAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    acomodacaoId?: true
    clienteId?: true
  }

  export type Avaliacao_acomodacaoMaxAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    acomodacaoId?: true
    clienteId?: true
  }

  export type Avaliacao_acomodacaoCountAggregateInputType = {
    id?: true
    custo_beneficio?: true
    atendimento?: true
    comida?: true
    limpeza?: true
    conforto?: true
    localizacao?: true
    comentario?: true
    acomodacaoId?: true
    clienteId?: true
    _all?: true
  }

  export type Avaliacao_acomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacao_acomodacao to aggregate.
     */
    where?: Avaliacao_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacao_acomodacaos to fetch.
     */
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacao_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacao_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avaliacao_acomodacaos
    **/
    _count?: true | Avaliacao_acomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Avaliacao_acomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Avaliacao_acomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Avaliacao_acomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Avaliacao_acomodacaoMaxAggregateInputType
  }

  export type GetAvaliacao_acomodacaoAggregateType<T extends Avaliacao_acomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao_acomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao_acomodacao[P]>
      : GetScalarType<T[P], AggregateAvaliacao_acomodacao[P]>
  }




  export type Avaliacao_acomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Avaliacao_acomodacaoWhereInput
    orderBy?: Avaliacao_acomodacaoOrderByWithAggregationInput | Avaliacao_acomodacaoOrderByWithAggregationInput[]
    by: Avaliacao_acomodacaoScalarFieldEnum[] | Avaliacao_acomodacaoScalarFieldEnum
    having?: Avaliacao_acomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Avaliacao_acomodacaoCountAggregateInputType | true
    _avg?: Avaliacao_acomodacaoAvgAggregateInputType
    _sum?: Avaliacao_acomodacaoSumAggregateInputType
    _min?: Avaliacao_acomodacaoMinAggregateInputType
    _max?: Avaliacao_acomodacaoMaxAggregateInputType
  }

  export type Avaliacao_acomodacaoGroupByOutputType = {
    id: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario: number | null
    acomodacaoId: number
    clienteId: number
    _count: Avaliacao_acomodacaoCountAggregateOutputType | null
    _avg: Avaliacao_acomodacaoAvgAggregateOutputType | null
    _sum: Avaliacao_acomodacaoSumAggregateOutputType | null
    _min: Avaliacao_acomodacaoMinAggregateOutputType | null
    _max: Avaliacao_acomodacaoMaxAggregateOutputType | null
  }

  type GetAvaliacao_acomodacaoGroupByPayload<T extends Avaliacao_acomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Avaliacao_acomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Avaliacao_acomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Avaliacao_acomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], Avaliacao_acomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type Avaliacao_acomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    acomodacaoId?: boolean
    clienteId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao_acomodacao"]>

  export type Avaliacao_acomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    acomodacaoId?: boolean
    clienteId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao_acomodacao"]>

  export type Avaliacao_acomodacaoSelectScalar = {
    id?: boolean
    custo_beneficio?: boolean
    atendimento?: boolean
    comida?: boolean
    limpeza?: boolean
    conforto?: boolean
    localizacao?: boolean
    comentario?: boolean
    acomodacaoId?: boolean
    clienteId?: boolean
  }

  export type Avaliacao_acomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type Avaliacao_acomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $Avaliacao_acomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avaliacao_acomodacao"
    objects: {
      acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>
      cliente: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      custo_beneficio: number
      atendimento: number
      comida: number
      limpeza: number
      conforto: number
      localizacao: number
      comentario: number | null
      acomodacaoId: number
      clienteId: number
    }, ExtArgs["result"]["avaliacao_acomodacao"]>
    composites: {}
  }

  type Avaliacao_acomodacaoGetPayload<S extends boolean | null | undefined | Avaliacao_acomodacaoDefaultArgs> = $Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload, S>

  type Avaliacao_acomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Avaliacao_acomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Avaliacao_acomodacaoCountAggregateInputType | true
    }

  export interface Avaliacao_acomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avaliacao_acomodacao'], meta: { name: 'Avaliacao_acomodacao' } }
    /**
     * Find zero or one Avaliacao_acomodacao that matches the filter.
     * @param {Avaliacao_acomodacaoFindUniqueArgs} args - Arguments to find a Avaliacao_acomodacao
     * @example
     * // Get one Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Avaliacao_acomodacaoFindUniqueArgs>(args: SelectSubset<T, Avaliacao_acomodacaoFindUniqueArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Avaliacao_acomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Avaliacao_acomodacaoFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao_acomodacao
     * @example
     * // Get one Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Avaliacao_acomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, Avaliacao_acomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Avaliacao_acomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoFindFirstArgs} args - Arguments to find a Avaliacao_acomodacao
     * @example
     * // Get one Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Avaliacao_acomodacaoFindFirstArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoFindFirstArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Avaliacao_acomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoFindFirstOrThrowArgs} args - Arguments to find a Avaliacao_acomodacao
     * @example
     * // Get one Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Avaliacao_acomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Avaliacao_acomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacao_acomodacaos
     * const avaliacao_acomodacaos = await prisma.avaliacao_acomodacao.findMany()
     * 
     * // Get first 10 Avaliacao_acomodacaos
     * const avaliacao_acomodacaos = await prisma.avaliacao_acomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliacao_acomodacaoWithIdOnly = await prisma.avaliacao_acomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Avaliacao_acomodacaoFindManyArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Avaliacao_acomodacao.
     * @param {Avaliacao_acomodacaoCreateArgs} args - Arguments to create a Avaliacao_acomodacao.
     * @example
     * // Create one Avaliacao_acomodacao
     * const Avaliacao_acomodacao = await prisma.avaliacao_acomodacao.create({
     *   data: {
     *     // ... data to create a Avaliacao_acomodacao
     *   }
     * })
     * 
     */
    create<T extends Avaliacao_acomodacaoCreateArgs>(args: SelectSubset<T, Avaliacao_acomodacaoCreateArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Avaliacao_acomodacaos.
     * @param {Avaliacao_acomodacaoCreateManyArgs} args - Arguments to create many Avaliacao_acomodacaos.
     * @example
     * // Create many Avaliacao_acomodacaos
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Avaliacao_acomodacaoCreateManyArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Avaliacao_acomodacaos and returns the data saved in the database.
     * @param {Avaliacao_acomodacaoCreateManyAndReturnArgs} args - Arguments to create many Avaliacao_acomodacaos.
     * @example
     * // Create many Avaliacao_acomodacaos
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Avaliacao_acomodacaos and only return the `id`
     * const avaliacao_acomodacaoWithIdOnly = await prisma.avaliacao_acomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Avaliacao_acomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Avaliacao_acomodacao.
     * @param {Avaliacao_acomodacaoDeleteArgs} args - Arguments to delete one Avaliacao_acomodacao.
     * @example
     * // Delete one Avaliacao_acomodacao
     * const Avaliacao_acomodacao = await prisma.avaliacao_acomodacao.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao_acomodacao
     *   }
     * })
     * 
     */
    delete<T extends Avaliacao_acomodacaoDeleteArgs>(args: SelectSubset<T, Avaliacao_acomodacaoDeleteArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Avaliacao_acomodacao.
     * @param {Avaliacao_acomodacaoUpdateArgs} args - Arguments to update one Avaliacao_acomodacao.
     * @example
     * // Update one Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Avaliacao_acomodacaoUpdateArgs>(args: SelectSubset<T, Avaliacao_acomodacaoUpdateArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Avaliacao_acomodacaos.
     * @param {Avaliacao_acomodacaoDeleteManyArgs} args - Arguments to filter Avaliacao_acomodacaos to delete.
     * @example
     * // Delete a few Avaliacao_acomodacaos
     * const { count } = await prisma.avaliacao_acomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Avaliacao_acomodacaoDeleteManyArgs>(args?: SelectSubset<T, Avaliacao_acomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacao_acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacao_acomodacaos
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Avaliacao_acomodacaoUpdateManyArgs>(args: SelectSubset<T, Avaliacao_acomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avaliacao_acomodacao.
     * @param {Avaliacao_acomodacaoUpsertArgs} args - Arguments to update or create a Avaliacao_acomodacao.
     * @example
     * // Update or create a Avaliacao_acomodacao
     * const avaliacao_acomodacao = await prisma.avaliacao_acomodacao.upsert({
     *   create: {
     *     // ... data to create a Avaliacao_acomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao_acomodacao we want to update
     *   }
     * })
     */
    upsert<T extends Avaliacao_acomodacaoUpsertArgs>(args: SelectSubset<T, Avaliacao_acomodacaoUpsertArgs<ExtArgs>>): Prisma__Avaliacao_acomodacaoClient<$Result.GetResult<Prisma.$Avaliacao_acomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Avaliacao_acomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoCountArgs} args - Arguments to filter Avaliacao_acomodacaos to count.
     * @example
     * // Count the number of Avaliacao_acomodacaos
     * const count = await prisma.avaliacao_acomodacao.count({
     *   where: {
     *     // ... the filter for the Avaliacao_acomodacaos we want to count
     *   }
     * })
    **/
    count<T extends Avaliacao_acomodacaoCountArgs>(
      args?: Subset<T, Avaliacao_acomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Avaliacao_acomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao_acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Avaliacao_acomodacaoAggregateArgs>(args: Subset<T, Avaliacao_acomodacaoAggregateArgs>): Prisma.PrismaPromise<GetAvaliacao_acomodacaoAggregateType<T>>

    /**
     * Group by Avaliacao_acomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Avaliacao_acomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Avaliacao_acomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Avaliacao_acomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: Avaliacao_acomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Avaliacao_acomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacao_acomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avaliacao_acomodacao model
   */
  readonly fields: Avaliacao_acomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avaliacao_acomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Avaliacao_acomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    acomodacao<T extends AcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AcomodacaoDefaultArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cliente<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Avaliacao_acomodacao model
   */ 
  interface Avaliacao_acomodacaoFieldRefs {
    readonly id: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly custo_beneficio: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly atendimento: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly comida: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly limpeza: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly conforto: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly localizacao: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly comentario: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly acomodacaoId: FieldRef<"Avaliacao_acomodacao", 'Int'>
    readonly clienteId: FieldRef<"Avaliacao_acomodacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Avaliacao_acomodacao findUnique
   */
  export type Avaliacao_acomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao_acomodacao to fetch.
     */
    where: Avaliacao_acomodacaoWhereUniqueInput
  }

  /**
   * Avaliacao_acomodacao findUniqueOrThrow
   */
  export type Avaliacao_acomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao_acomodacao to fetch.
     */
    where: Avaliacao_acomodacaoWhereUniqueInput
  }

  /**
   * Avaliacao_acomodacao findFirst
   */
  export type Avaliacao_acomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao_acomodacao to fetch.
     */
    where?: Avaliacao_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacao_acomodacaos to fetch.
     */
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacao_acomodacaos.
     */
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacao_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacao_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacao_acomodacaos.
     */
    distinct?: Avaliacao_acomodacaoScalarFieldEnum | Avaliacao_acomodacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao_acomodacao findFirstOrThrow
   */
  export type Avaliacao_acomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao_acomodacao to fetch.
     */
    where?: Avaliacao_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacao_acomodacaos to fetch.
     */
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacao_acomodacaos.
     */
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacao_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacao_acomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacao_acomodacaos.
     */
    distinct?: Avaliacao_acomodacaoScalarFieldEnum | Avaliacao_acomodacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao_acomodacao findMany
   */
  export type Avaliacao_acomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao_acomodacaos to fetch.
     */
    where?: Avaliacao_acomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacao_acomodacaos to fetch.
     */
    orderBy?: Avaliacao_acomodacaoOrderByWithRelationInput | Avaliacao_acomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avaliacao_acomodacaos.
     */
    cursor?: Avaliacao_acomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacao_acomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacao_acomodacaos.
     */
    skip?: number
    distinct?: Avaliacao_acomodacaoScalarFieldEnum | Avaliacao_acomodacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao_acomodacao create
   */
  export type Avaliacao_acomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Avaliacao_acomodacao.
     */
    data: XOR<Avaliacao_acomodacaoCreateInput, Avaliacao_acomodacaoUncheckedCreateInput>
  }

  /**
   * Avaliacao_acomodacao createMany
   */
  export type Avaliacao_acomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avaliacao_acomodacaos.
     */
    data: Avaliacao_acomodacaoCreateManyInput | Avaliacao_acomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Avaliacao_acomodacao createManyAndReturn
   */
  export type Avaliacao_acomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Avaliacao_acomodacaos.
     */
    data: Avaliacao_acomodacaoCreateManyInput | Avaliacao_acomodacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Avaliacao_acomodacao update
   */
  export type Avaliacao_acomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Avaliacao_acomodacao.
     */
    data: XOR<Avaliacao_acomodacaoUpdateInput, Avaliacao_acomodacaoUncheckedUpdateInput>
    /**
     * Choose, which Avaliacao_acomodacao to update.
     */
    where: Avaliacao_acomodacaoWhereUniqueInput
  }

  /**
   * Avaliacao_acomodacao updateMany
   */
  export type Avaliacao_acomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avaliacao_acomodacaos.
     */
    data: XOR<Avaliacao_acomodacaoUpdateManyMutationInput, Avaliacao_acomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which Avaliacao_acomodacaos to update
     */
    where?: Avaliacao_acomodacaoWhereInput
  }

  /**
   * Avaliacao_acomodacao upsert
   */
  export type Avaliacao_acomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Avaliacao_acomodacao to update in case it exists.
     */
    where: Avaliacao_acomodacaoWhereUniqueInput
    /**
     * In case the Avaliacao_acomodacao found by the `where` argument doesn't exist, create a new Avaliacao_acomodacao with this data.
     */
    create: XOR<Avaliacao_acomodacaoCreateInput, Avaliacao_acomodacaoUncheckedCreateInput>
    /**
     * In case the Avaliacao_acomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Avaliacao_acomodacaoUpdateInput, Avaliacao_acomodacaoUncheckedUpdateInput>
  }

  /**
   * Avaliacao_acomodacao delete
   */
  export type Avaliacao_acomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
    /**
     * Filter which Avaliacao_acomodacao to delete.
     */
    where: Avaliacao_acomodacaoWhereUniqueInput
  }

  /**
   * Avaliacao_acomodacao deleteMany
   */
  export type Avaliacao_acomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacao_acomodacaos to delete
     */
    where?: Avaliacao_acomodacaoWhereInput
  }

  /**
   * Avaliacao_acomodacao without action
   */
  export type Avaliacao_acomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao_acomodacao
     */
    select?: Avaliacao_acomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Avaliacao_acomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model Cobranca
   */

  export type AggregateCobranca = {
    _count: CobrancaCountAggregateOutputType | null
    _avg: CobrancaAvgAggregateOutputType | null
    _sum: CobrancaSumAggregateOutputType | null
    _min: CobrancaMinAggregateOutputType | null
    _max: CobrancaMaxAggregateOutputType | null
  }

  export type CobrancaAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    reservaId: number | null
  }

  export type CobrancaSumAggregateOutputType = {
    id: number | null
    valor: number | null
    reservaId: number | null
  }

  export type CobrancaMinAggregateOutputType = {
    id: number | null
    data_pagamento: Date | null
    data_vencimento: Date | null
    valor: number | null
    status: string | null
    reservaId: number | null
  }

  export type CobrancaMaxAggregateOutputType = {
    id: number | null
    data_pagamento: Date | null
    data_vencimento: Date | null
    valor: number | null
    status: string | null
    reservaId: number | null
  }

  export type CobrancaCountAggregateOutputType = {
    id: number
    data_pagamento: number
    data_vencimento: number
    valor: number
    status: number
    reservaId: number
    _all: number
  }


  export type CobrancaAvgAggregateInputType = {
    id?: true
    valor?: true
    reservaId?: true
  }

  export type CobrancaSumAggregateInputType = {
    id?: true
    valor?: true
    reservaId?: true
  }

  export type CobrancaMinAggregateInputType = {
    id?: true
    data_pagamento?: true
    data_vencimento?: true
    valor?: true
    status?: true
    reservaId?: true
  }

  export type CobrancaMaxAggregateInputType = {
    id?: true
    data_pagamento?: true
    data_vencimento?: true
    valor?: true
    status?: true
    reservaId?: true
  }

  export type CobrancaCountAggregateInputType = {
    id?: true
    data_pagamento?: true
    data_vencimento?: true
    valor?: true
    status?: true
    reservaId?: true
    _all?: true
  }

  export type CobrancaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cobranca to aggregate.
     */
    where?: CobrancaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cobrancas to fetch.
     */
    orderBy?: CobrancaOrderByWithRelationInput | CobrancaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CobrancaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cobrancas
    **/
    _count?: true | CobrancaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CobrancaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CobrancaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CobrancaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CobrancaMaxAggregateInputType
  }

  export type GetCobrancaAggregateType<T extends CobrancaAggregateArgs> = {
        [P in keyof T & keyof AggregateCobranca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCobranca[P]>
      : GetScalarType<T[P], AggregateCobranca[P]>
  }




  export type CobrancaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CobrancaWhereInput
    orderBy?: CobrancaOrderByWithAggregationInput | CobrancaOrderByWithAggregationInput[]
    by: CobrancaScalarFieldEnum[] | CobrancaScalarFieldEnum
    having?: CobrancaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CobrancaCountAggregateInputType | true
    _avg?: CobrancaAvgAggregateInputType
    _sum?: CobrancaSumAggregateInputType
    _min?: CobrancaMinAggregateInputType
    _max?: CobrancaMaxAggregateInputType
  }

  export type CobrancaGroupByOutputType = {
    id: number
    data_pagamento: Date | null
    data_vencimento: Date | null
    valor: number | null
    status: string | null
    reservaId: number
    _count: CobrancaCountAggregateOutputType | null
    _avg: CobrancaAvgAggregateOutputType | null
    _sum: CobrancaSumAggregateOutputType | null
    _min: CobrancaMinAggregateOutputType | null
    _max: CobrancaMaxAggregateOutputType | null
  }

  type GetCobrancaGroupByPayload<T extends CobrancaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CobrancaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CobrancaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CobrancaGroupByOutputType[P]>
            : GetScalarType<T[P], CobrancaGroupByOutputType[P]>
        }
      >
    >


  export type CobrancaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_pagamento?: boolean
    data_vencimento?: boolean
    valor?: boolean
    status?: boolean
    reservaId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobranca"]>

  export type CobrancaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data_pagamento?: boolean
    data_vencimento?: boolean
    valor?: boolean
    status?: boolean
    reservaId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobranca"]>

  export type CobrancaSelectScalar = {
    id?: boolean
    data_pagamento?: boolean
    data_vencimento?: boolean
    valor?: boolean
    status?: boolean
    reservaId?: boolean
  }

  export type CobrancaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }
  export type CobrancaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }

  export type $CobrancaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cobranca"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data_pagamento: Date | null
      data_vencimento: Date | null
      valor: number | null
      status: string | null
      reservaId: number
    }, ExtArgs["result"]["cobranca"]>
    composites: {}
  }

  type CobrancaGetPayload<S extends boolean | null | undefined | CobrancaDefaultArgs> = $Result.GetResult<Prisma.$CobrancaPayload, S>

  type CobrancaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CobrancaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CobrancaCountAggregateInputType | true
    }

  export interface CobrancaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cobranca'], meta: { name: 'Cobranca' } }
    /**
     * Find zero or one Cobranca that matches the filter.
     * @param {CobrancaFindUniqueArgs} args - Arguments to find a Cobranca
     * @example
     * // Get one Cobranca
     * const cobranca = await prisma.cobranca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CobrancaFindUniqueArgs>(args: SelectSubset<T, CobrancaFindUniqueArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cobranca that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CobrancaFindUniqueOrThrowArgs} args - Arguments to find a Cobranca
     * @example
     * // Get one Cobranca
     * const cobranca = await prisma.cobranca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CobrancaFindUniqueOrThrowArgs>(args: SelectSubset<T, CobrancaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cobranca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaFindFirstArgs} args - Arguments to find a Cobranca
     * @example
     * // Get one Cobranca
     * const cobranca = await prisma.cobranca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CobrancaFindFirstArgs>(args?: SelectSubset<T, CobrancaFindFirstArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cobranca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaFindFirstOrThrowArgs} args - Arguments to find a Cobranca
     * @example
     * // Get one Cobranca
     * const cobranca = await prisma.cobranca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CobrancaFindFirstOrThrowArgs>(args?: SelectSubset<T, CobrancaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cobrancas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cobrancas
     * const cobrancas = await prisma.cobranca.findMany()
     * 
     * // Get first 10 Cobrancas
     * const cobrancas = await prisma.cobranca.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cobrancaWithIdOnly = await prisma.cobranca.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CobrancaFindManyArgs>(args?: SelectSubset<T, CobrancaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cobranca.
     * @param {CobrancaCreateArgs} args - Arguments to create a Cobranca.
     * @example
     * // Create one Cobranca
     * const Cobranca = await prisma.cobranca.create({
     *   data: {
     *     // ... data to create a Cobranca
     *   }
     * })
     * 
     */
    create<T extends CobrancaCreateArgs>(args: SelectSubset<T, CobrancaCreateArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cobrancas.
     * @param {CobrancaCreateManyArgs} args - Arguments to create many Cobrancas.
     * @example
     * // Create many Cobrancas
     * const cobranca = await prisma.cobranca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CobrancaCreateManyArgs>(args?: SelectSubset<T, CobrancaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cobrancas and returns the data saved in the database.
     * @param {CobrancaCreateManyAndReturnArgs} args - Arguments to create many Cobrancas.
     * @example
     * // Create many Cobrancas
     * const cobranca = await prisma.cobranca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cobrancas and only return the `id`
     * const cobrancaWithIdOnly = await prisma.cobranca.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CobrancaCreateManyAndReturnArgs>(args?: SelectSubset<T, CobrancaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cobranca.
     * @param {CobrancaDeleteArgs} args - Arguments to delete one Cobranca.
     * @example
     * // Delete one Cobranca
     * const Cobranca = await prisma.cobranca.delete({
     *   where: {
     *     // ... filter to delete one Cobranca
     *   }
     * })
     * 
     */
    delete<T extends CobrancaDeleteArgs>(args: SelectSubset<T, CobrancaDeleteArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cobranca.
     * @param {CobrancaUpdateArgs} args - Arguments to update one Cobranca.
     * @example
     * // Update one Cobranca
     * const cobranca = await prisma.cobranca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CobrancaUpdateArgs>(args: SelectSubset<T, CobrancaUpdateArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cobrancas.
     * @param {CobrancaDeleteManyArgs} args - Arguments to filter Cobrancas to delete.
     * @example
     * // Delete a few Cobrancas
     * const { count } = await prisma.cobranca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CobrancaDeleteManyArgs>(args?: SelectSubset<T, CobrancaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cobrancas
     * const cobranca = await prisma.cobranca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CobrancaUpdateManyArgs>(args: SelectSubset<T, CobrancaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cobranca.
     * @param {CobrancaUpsertArgs} args - Arguments to update or create a Cobranca.
     * @example
     * // Update or create a Cobranca
     * const cobranca = await prisma.cobranca.upsert({
     *   create: {
     *     // ... data to create a Cobranca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cobranca we want to update
     *   }
     * })
     */
    upsert<T extends CobrancaUpsertArgs>(args: SelectSubset<T, CobrancaUpsertArgs<ExtArgs>>): Prisma__CobrancaClient<$Result.GetResult<Prisma.$CobrancaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaCountArgs} args - Arguments to filter Cobrancas to count.
     * @example
     * // Count the number of Cobrancas
     * const count = await prisma.cobranca.count({
     *   where: {
     *     // ... the filter for the Cobrancas we want to count
     *   }
     * })
    **/
    count<T extends CobrancaCountArgs>(
      args?: Subset<T, CobrancaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CobrancaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cobranca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CobrancaAggregateArgs>(args: Subset<T, CobrancaAggregateArgs>): Prisma.PrismaPromise<GetCobrancaAggregateType<T>>

    /**
     * Group by Cobranca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CobrancaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CobrancaGroupByArgs['orderBy'] }
        : { orderBy?: CobrancaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CobrancaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCobrancaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cobranca model
   */
  readonly fields: CobrancaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cobranca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CobrancaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cobranca model
   */ 
  interface CobrancaFieldRefs {
    readonly id: FieldRef<"Cobranca", 'Int'>
    readonly data_pagamento: FieldRef<"Cobranca", 'DateTime'>
    readonly data_vencimento: FieldRef<"Cobranca", 'DateTime'>
    readonly valor: FieldRef<"Cobranca", 'Float'>
    readonly status: FieldRef<"Cobranca", 'String'>
    readonly reservaId: FieldRef<"Cobranca", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Cobranca findUnique
   */
  export type CobrancaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter, which Cobranca to fetch.
     */
    where: CobrancaWhereUniqueInput
  }

  /**
   * Cobranca findUniqueOrThrow
   */
  export type CobrancaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter, which Cobranca to fetch.
     */
    where: CobrancaWhereUniqueInput
  }

  /**
   * Cobranca findFirst
   */
  export type CobrancaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter, which Cobranca to fetch.
     */
    where?: CobrancaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cobrancas to fetch.
     */
    orderBy?: CobrancaOrderByWithRelationInput | CobrancaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cobrancas.
     */
    cursor?: CobrancaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cobrancas.
     */
    distinct?: CobrancaScalarFieldEnum | CobrancaScalarFieldEnum[]
  }

  /**
   * Cobranca findFirstOrThrow
   */
  export type CobrancaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter, which Cobranca to fetch.
     */
    where?: CobrancaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cobrancas to fetch.
     */
    orderBy?: CobrancaOrderByWithRelationInput | CobrancaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cobrancas.
     */
    cursor?: CobrancaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cobrancas.
     */
    distinct?: CobrancaScalarFieldEnum | CobrancaScalarFieldEnum[]
  }

  /**
   * Cobranca findMany
   */
  export type CobrancaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter, which Cobrancas to fetch.
     */
    where?: CobrancaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cobrancas to fetch.
     */
    orderBy?: CobrancaOrderByWithRelationInput | CobrancaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cobrancas.
     */
    cursor?: CobrancaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cobrancas.
     */
    skip?: number
    distinct?: CobrancaScalarFieldEnum | CobrancaScalarFieldEnum[]
  }

  /**
   * Cobranca create
   */
  export type CobrancaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * The data needed to create a Cobranca.
     */
    data: XOR<CobrancaCreateInput, CobrancaUncheckedCreateInput>
  }

  /**
   * Cobranca createMany
   */
  export type CobrancaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cobrancas.
     */
    data: CobrancaCreateManyInput | CobrancaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cobranca createManyAndReturn
   */
  export type CobrancaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Cobrancas.
     */
    data: CobrancaCreateManyInput | CobrancaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cobranca update
   */
  export type CobrancaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * The data needed to update a Cobranca.
     */
    data: XOR<CobrancaUpdateInput, CobrancaUncheckedUpdateInput>
    /**
     * Choose, which Cobranca to update.
     */
    where: CobrancaWhereUniqueInput
  }

  /**
   * Cobranca updateMany
   */
  export type CobrancaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cobrancas.
     */
    data: XOR<CobrancaUpdateManyMutationInput, CobrancaUncheckedUpdateManyInput>
    /**
     * Filter which Cobrancas to update
     */
    where?: CobrancaWhereInput
  }

  /**
   * Cobranca upsert
   */
  export type CobrancaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * The filter to search for the Cobranca to update in case it exists.
     */
    where: CobrancaWhereUniqueInput
    /**
     * In case the Cobranca found by the `where` argument doesn't exist, create a new Cobranca with this data.
     */
    create: XOR<CobrancaCreateInput, CobrancaUncheckedCreateInput>
    /**
     * In case the Cobranca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CobrancaUpdateInput, CobrancaUncheckedUpdateInput>
  }

  /**
   * Cobranca delete
   */
  export type CobrancaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
    /**
     * Filter which Cobranca to delete.
     */
    where: CobrancaWhereUniqueInput
  }

  /**
   * Cobranca deleteMany
   */
  export type CobrancaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cobrancas to delete
     */
    where?: CobrancaWhereInput
  }

  /**
   * Cobranca without action
   */
  export type CobrancaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cobranca
     */
    select?: CobrancaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobrancaInclude<ExtArgs> | null
  }


  /**
   * Model Gerenciamento_ganhos
   */

  export type AggregateGerenciamento_ganhos = {
    _count: Gerenciamento_ganhosCountAggregateOutputType | null
    _avg: Gerenciamento_ganhosAvgAggregateOutputType | null
    _sum: Gerenciamento_ganhosSumAggregateOutputType | null
    _min: Gerenciamento_ganhosMinAggregateOutputType | null
    _max: Gerenciamento_ganhosMaxAggregateOutputType | null
  }

  export type Gerenciamento_ganhosAvgAggregateOutputType = {
    id: number | null
    valor_lucro: number | null
    proprietarioId: number | null
  }

  export type Gerenciamento_ganhosSumAggregateOutputType = {
    id: number | null
    valor_lucro: number | null
    proprietarioId: number | null
  }

  export type Gerenciamento_ganhosMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor_lucro: number | null
    proprietarioId: number | null
  }

  export type Gerenciamento_ganhosMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor_lucro: number | null
    proprietarioId: number | null
  }

  export type Gerenciamento_ganhosCountAggregateOutputType = {
    id: number
    data: number
    valor_lucro: number
    proprietarioId: number
    _all: number
  }


  export type Gerenciamento_ganhosAvgAggregateInputType = {
    id?: true
    valor_lucro?: true
    proprietarioId?: true
  }

  export type Gerenciamento_ganhosSumAggregateInputType = {
    id?: true
    valor_lucro?: true
    proprietarioId?: true
  }

  export type Gerenciamento_ganhosMinAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    proprietarioId?: true
  }

  export type Gerenciamento_ganhosMaxAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    proprietarioId?: true
  }

  export type Gerenciamento_ganhosCountAggregateInputType = {
    id?: true
    data?: true
    valor_lucro?: true
    proprietarioId?: true
    _all?: true
  }

  export type Gerenciamento_ganhosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Gerenciamento_ganhos to aggregate.
     */
    where?: Gerenciamento_ganhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos to fetch.
     */
    orderBy?: Gerenciamento_ganhosOrderByWithRelationInput | Gerenciamento_ganhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Gerenciamento_ganhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gerenciamento_ganhos
    **/
    _count?: true | Gerenciamento_ganhosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gerenciamento_ganhosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gerenciamento_ganhosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gerenciamento_ganhosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gerenciamento_ganhosMaxAggregateInputType
  }

  export type GetGerenciamento_ganhosAggregateType<T extends Gerenciamento_ganhosAggregateArgs> = {
        [P in keyof T & keyof AggregateGerenciamento_ganhos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGerenciamento_ganhos[P]>
      : GetScalarType<T[P], AggregateGerenciamento_ganhos[P]>
  }




  export type Gerenciamento_ganhosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Gerenciamento_ganhosWhereInput
    orderBy?: Gerenciamento_ganhosOrderByWithAggregationInput | Gerenciamento_ganhosOrderByWithAggregationInput[]
    by: Gerenciamento_ganhosScalarFieldEnum[] | Gerenciamento_ganhosScalarFieldEnum
    having?: Gerenciamento_ganhosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gerenciamento_ganhosCountAggregateInputType | true
    _avg?: Gerenciamento_ganhosAvgAggregateInputType
    _sum?: Gerenciamento_ganhosSumAggregateInputType
    _min?: Gerenciamento_ganhosMinAggregateInputType
    _max?: Gerenciamento_ganhosMaxAggregateInputType
  }

  export type Gerenciamento_ganhosGroupByOutputType = {
    id: number
    data: Date | null
    valor_lucro: number | null
    proprietarioId: number
    _count: Gerenciamento_ganhosCountAggregateOutputType | null
    _avg: Gerenciamento_ganhosAvgAggregateOutputType | null
    _sum: Gerenciamento_ganhosSumAggregateOutputType | null
    _min: Gerenciamento_ganhosMinAggregateOutputType | null
    _max: Gerenciamento_ganhosMaxAggregateOutputType | null
  }

  type GetGerenciamento_ganhosGroupByPayload<T extends Gerenciamento_ganhosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Gerenciamento_ganhosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gerenciamento_ganhosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gerenciamento_ganhosGroupByOutputType[P]>
            : GetScalarType<T[P], Gerenciamento_ganhosGroupByOutputType[P]>
        }
      >
    >


  export type Gerenciamento_ganhosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    proprietarioId?: boolean
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gerenciamento_ganhos"]>

  export type Gerenciamento_ganhosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    proprietarioId?: boolean
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gerenciamento_ganhos"]>

  export type Gerenciamento_ganhosSelectScalar = {
    id?: boolean
    data?: boolean
    valor_lucro?: boolean
    proprietarioId?: boolean
  }

  export type Gerenciamento_ganhosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }
  export type Gerenciamento_ganhosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }

  export type $Gerenciamento_ganhosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Gerenciamento_ganhos"
    objects: {
      proprietario: Prisma.$ProprietarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date | null
      valor_lucro: number | null
      proprietarioId: number
    }, ExtArgs["result"]["gerenciamento_ganhos"]>
    composites: {}
  }

  type Gerenciamento_ganhosGetPayload<S extends boolean | null | undefined | Gerenciamento_ganhosDefaultArgs> = $Result.GetResult<Prisma.$Gerenciamento_ganhosPayload, S>

  type Gerenciamento_ganhosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Gerenciamento_ganhosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Gerenciamento_ganhosCountAggregateInputType | true
    }

  export interface Gerenciamento_ganhosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Gerenciamento_ganhos'], meta: { name: 'Gerenciamento_ganhos' } }
    /**
     * Find zero or one Gerenciamento_ganhos that matches the filter.
     * @param {Gerenciamento_ganhosFindUniqueArgs} args - Arguments to find a Gerenciamento_ganhos
     * @example
     * // Get one Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Gerenciamento_ganhosFindUniqueArgs>(args: SelectSubset<T, Gerenciamento_ganhosFindUniqueArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Gerenciamento_ganhos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Gerenciamento_ganhosFindUniqueOrThrowArgs} args - Arguments to find a Gerenciamento_ganhos
     * @example
     * // Get one Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Gerenciamento_ganhosFindUniqueOrThrowArgs>(args: SelectSubset<T, Gerenciamento_ganhosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Gerenciamento_ganhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosFindFirstArgs} args - Arguments to find a Gerenciamento_ganhos
     * @example
     * // Get one Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Gerenciamento_ganhosFindFirstArgs>(args?: SelectSubset<T, Gerenciamento_ganhosFindFirstArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Gerenciamento_ganhos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosFindFirstOrThrowArgs} args - Arguments to find a Gerenciamento_ganhos
     * @example
     * // Get one Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Gerenciamento_ganhosFindFirstOrThrowArgs>(args?: SelectSubset<T, Gerenciamento_ganhosFindFirstOrThrowArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Gerenciamento_ganhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findMany()
     * 
     * // Get first 10 Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gerenciamento_ganhosWithIdOnly = await prisma.gerenciamento_ganhos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Gerenciamento_ganhosFindManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosCreateArgs} args - Arguments to create a Gerenciamento_ganhos.
     * @example
     * // Create one Gerenciamento_ganhos
     * const Gerenciamento_ganhos = await prisma.gerenciamento_ganhos.create({
     *   data: {
     *     // ... data to create a Gerenciamento_ganhos
     *   }
     * })
     * 
     */
    create<T extends Gerenciamento_ganhosCreateArgs>(args: SelectSubset<T, Gerenciamento_ganhosCreateArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosCreateManyArgs} args - Arguments to create many Gerenciamento_ganhos.
     * @example
     * // Create many Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Gerenciamento_ganhosCreateManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Gerenciamento_ganhos and returns the data saved in the database.
     * @param {Gerenciamento_ganhosCreateManyAndReturnArgs} args - Arguments to create many Gerenciamento_ganhos.
     * @example
     * // Create many Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Gerenciamento_ganhos and only return the `id`
     * const gerenciamento_ganhosWithIdOnly = await prisma.gerenciamento_ganhos.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Gerenciamento_ganhosCreateManyAndReturnArgs>(args?: SelectSubset<T, Gerenciamento_ganhosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosDeleteArgs} args - Arguments to delete one Gerenciamento_ganhos.
     * @example
     * // Delete one Gerenciamento_ganhos
     * const Gerenciamento_ganhos = await prisma.gerenciamento_ganhos.delete({
     *   where: {
     *     // ... filter to delete one Gerenciamento_ganhos
     *   }
     * })
     * 
     */
    delete<T extends Gerenciamento_ganhosDeleteArgs>(args: SelectSubset<T, Gerenciamento_ganhosDeleteArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosUpdateArgs} args - Arguments to update one Gerenciamento_ganhos.
     * @example
     * // Update one Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Gerenciamento_ganhosUpdateArgs>(args: SelectSubset<T, Gerenciamento_ganhosUpdateArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosDeleteManyArgs} args - Arguments to filter Gerenciamento_ganhos to delete.
     * @example
     * // Delete a few Gerenciamento_ganhos
     * const { count } = await prisma.gerenciamento_ganhos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Gerenciamento_ganhosDeleteManyArgs>(args?: SelectSubset<T, Gerenciamento_ganhosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gerenciamento_ganhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Gerenciamento_ganhosUpdateManyArgs>(args: SelectSubset<T, Gerenciamento_ganhosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Gerenciamento_ganhos.
     * @param {Gerenciamento_ganhosUpsertArgs} args - Arguments to update or create a Gerenciamento_ganhos.
     * @example
     * // Update or create a Gerenciamento_ganhos
     * const gerenciamento_ganhos = await prisma.gerenciamento_ganhos.upsert({
     *   create: {
     *     // ... data to create a Gerenciamento_ganhos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gerenciamento_ganhos we want to update
     *   }
     * })
     */
    upsert<T extends Gerenciamento_ganhosUpsertArgs>(args: SelectSubset<T, Gerenciamento_ganhosUpsertArgs<ExtArgs>>): Prisma__Gerenciamento_ganhosClient<$Result.GetResult<Prisma.$Gerenciamento_ganhosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Gerenciamento_ganhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosCountArgs} args - Arguments to filter Gerenciamento_ganhos to count.
     * @example
     * // Count the number of Gerenciamento_ganhos
     * const count = await prisma.gerenciamento_ganhos.count({
     *   where: {
     *     // ... the filter for the Gerenciamento_ganhos we want to count
     *   }
     * })
    **/
    count<T extends Gerenciamento_ganhosCountArgs>(
      args?: Subset<T, Gerenciamento_ganhosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gerenciamento_ganhosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gerenciamento_ganhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gerenciamento_ganhosAggregateArgs>(args: Subset<T, Gerenciamento_ganhosAggregateArgs>): Prisma.PrismaPromise<GetGerenciamento_ganhosAggregateType<T>>

    /**
     * Group by Gerenciamento_ganhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gerenciamento_ganhosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gerenciamento_ganhosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gerenciamento_ganhosGroupByArgs['orderBy'] }
        : { orderBy?: Gerenciamento_ganhosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gerenciamento_ganhosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGerenciamento_ganhosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Gerenciamento_ganhos model
   */
  readonly fields: Gerenciamento_ganhosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Gerenciamento_ganhos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Gerenciamento_ganhosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proprietario<T extends ProprietarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProprietarioDefaultArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Gerenciamento_ganhos model
   */ 
  interface Gerenciamento_ganhosFieldRefs {
    readonly id: FieldRef<"Gerenciamento_ganhos", 'Int'>
    readonly data: FieldRef<"Gerenciamento_ganhos", 'DateTime'>
    readonly valor_lucro: FieldRef<"Gerenciamento_ganhos", 'Float'>
    readonly proprietarioId: FieldRef<"Gerenciamento_ganhos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Gerenciamento_ganhos findUnique
   */
  export type Gerenciamento_ganhosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos to fetch.
     */
    where: Gerenciamento_ganhosWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos findUniqueOrThrow
   */
  export type Gerenciamento_ganhosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos to fetch.
     */
    where: Gerenciamento_ganhosWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos findFirst
   */
  export type Gerenciamento_ganhosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos to fetch.
     */
    where?: Gerenciamento_ganhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos to fetch.
     */
    orderBy?: Gerenciamento_ganhosOrderByWithRelationInput | Gerenciamento_ganhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gerenciamento_ganhos.
     */
    cursor?: Gerenciamento_ganhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gerenciamento_ganhos.
     */
    distinct?: Gerenciamento_ganhosScalarFieldEnum | Gerenciamento_ganhosScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos findFirstOrThrow
   */
  export type Gerenciamento_ganhosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos to fetch.
     */
    where?: Gerenciamento_ganhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos to fetch.
     */
    orderBy?: Gerenciamento_ganhosOrderByWithRelationInput | Gerenciamento_ganhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gerenciamento_ganhos.
     */
    cursor?: Gerenciamento_ganhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gerenciamento_ganhos.
     */
    distinct?: Gerenciamento_ganhosScalarFieldEnum | Gerenciamento_ganhosScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos findMany
   */
  export type Gerenciamento_ganhosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter, which Gerenciamento_ganhos to fetch.
     */
    where?: Gerenciamento_ganhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gerenciamento_ganhos to fetch.
     */
    orderBy?: Gerenciamento_ganhosOrderByWithRelationInput | Gerenciamento_ganhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gerenciamento_ganhos.
     */
    cursor?: Gerenciamento_ganhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gerenciamento_ganhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gerenciamento_ganhos.
     */
    skip?: number
    distinct?: Gerenciamento_ganhosScalarFieldEnum | Gerenciamento_ganhosScalarFieldEnum[]
  }

  /**
   * Gerenciamento_ganhos create
   */
  export type Gerenciamento_ganhosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * The data needed to create a Gerenciamento_ganhos.
     */
    data: XOR<Gerenciamento_ganhosCreateInput, Gerenciamento_ganhosUncheckedCreateInput>
  }

  /**
   * Gerenciamento_ganhos createMany
   */
  export type Gerenciamento_ganhosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Gerenciamento_ganhos.
     */
    data: Gerenciamento_ganhosCreateManyInput | Gerenciamento_ganhosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Gerenciamento_ganhos createManyAndReturn
   */
  export type Gerenciamento_ganhosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Gerenciamento_ganhos.
     */
    data: Gerenciamento_ganhosCreateManyInput | Gerenciamento_ganhosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Gerenciamento_ganhos update
   */
  export type Gerenciamento_ganhosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * The data needed to update a Gerenciamento_ganhos.
     */
    data: XOR<Gerenciamento_ganhosUpdateInput, Gerenciamento_ganhosUncheckedUpdateInput>
    /**
     * Choose, which Gerenciamento_ganhos to update.
     */
    where: Gerenciamento_ganhosWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos updateMany
   */
  export type Gerenciamento_ganhosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Gerenciamento_ganhos.
     */
    data: XOR<Gerenciamento_ganhosUpdateManyMutationInput, Gerenciamento_ganhosUncheckedUpdateManyInput>
    /**
     * Filter which Gerenciamento_ganhos to update
     */
    where?: Gerenciamento_ganhosWhereInput
  }

  /**
   * Gerenciamento_ganhos upsert
   */
  export type Gerenciamento_ganhosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * The filter to search for the Gerenciamento_ganhos to update in case it exists.
     */
    where: Gerenciamento_ganhosWhereUniqueInput
    /**
     * In case the Gerenciamento_ganhos found by the `where` argument doesn't exist, create a new Gerenciamento_ganhos with this data.
     */
    create: XOR<Gerenciamento_ganhosCreateInput, Gerenciamento_ganhosUncheckedCreateInput>
    /**
     * In case the Gerenciamento_ganhos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Gerenciamento_ganhosUpdateInput, Gerenciamento_ganhosUncheckedUpdateInput>
  }

  /**
   * Gerenciamento_ganhos delete
   */
  export type Gerenciamento_ganhosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
    /**
     * Filter which Gerenciamento_ganhos to delete.
     */
    where: Gerenciamento_ganhosWhereUniqueInput
  }

  /**
   * Gerenciamento_ganhos deleteMany
   */
  export type Gerenciamento_ganhosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Gerenciamento_ganhos to delete
     */
    where?: Gerenciamento_ganhosWhereInput
  }

  /**
   * Gerenciamento_ganhos without action
   */
  export type Gerenciamento_ganhosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Gerenciamento_ganhos
     */
    select?: Gerenciamento_ganhosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Gerenciamento_ganhosInclude<ExtArgs> | null
  }


  /**
   * Model Interesse
   */

  export type AggregateInteresse = {
    _count: InteresseCountAggregateOutputType | null
    _avg: InteresseAvgAggregateOutputType | null
    _sum: InteresseSumAggregateOutputType | null
    _min: InteresseMinAggregateOutputType | null
    _max: InteresseMaxAggregateOutputType | null
  }

  export type InteresseAvgAggregateOutputType = {
    id: number | null
  }

  export type InteresseSumAggregateOutputType = {
    id: number | null
  }

  export type InteresseMinAggregateOutputType = {
    id: number | null
    Nome: string | null
  }

  export type InteresseMaxAggregateOutputType = {
    id: number | null
    Nome: string | null
  }

  export type InteresseCountAggregateOutputType = {
    id: number
    Nome: number
    _all: number
  }


  export type InteresseAvgAggregateInputType = {
    id?: true
  }

  export type InteresseSumAggregateInputType = {
    id?: true
  }

  export type InteresseMinAggregateInputType = {
    id?: true
    Nome?: true
  }

  export type InteresseMaxAggregateInputType = {
    id?: true
    Nome?: true
  }

  export type InteresseCountAggregateInputType = {
    id?: true
    Nome?: true
    _all?: true
  }

  export type InteresseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Interesse to aggregate.
     */
    where?: InteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interesses to fetch.
     */
    orderBy?: InteresseOrderByWithRelationInput | InteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Interesses
    **/
    _count?: true | InteresseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InteresseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InteresseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InteresseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InteresseMaxAggregateInputType
  }

  export type GetInteresseAggregateType<T extends InteresseAggregateArgs> = {
        [P in keyof T & keyof AggregateInteresse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInteresse[P]>
      : GetScalarType<T[P], AggregateInteresse[P]>
  }




  export type InteresseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InteresseWhereInput
    orderBy?: InteresseOrderByWithAggregationInput | InteresseOrderByWithAggregationInput[]
    by: InteresseScalarFieldEnum[] | InteresseScalarFieldEnum
    having?: InteresseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InteresseCountAggregateInputType | true
    _avg?: InteresseAvgAggregateInputType
    _sum?: InteresseSumAggregateInputType
    _min?: InteresseMinAggregateInputType
    _max?: InteresseMaxAggregateInputType
  }

  export type InteresseGroupByOutputType = {
    id: number
    Nome: string
    _count: InteresseCountAggregateOutputType | null
    _avg: InteresseAvgAggregateOutputType | null
    _sum: InteresseSumAggregateOutputType | null
    _min: InteresseMinAggregateOutputType | null
    _max: InteresseMaxAggregateOutputType | null
  }

  type GetInteresseGroupByPayload<T extends InteresseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InteresseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InteresseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InteresseGroupByOutputType[P]>
            : GetScalarType<T[P], InteresseGroupByOutputType[P]>
        }
      >
    >


  export type InteresseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Nome?: boolean
    Proprietario?: boolean | Interesse$ProprietarioArgs<ExtArgs>
    _count?: boolean | InteresseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["interesse"]>

  export type InteresseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Nome?: boolean
  }, ExtArgs["result"]["interesse"]>

  export type InteresseSelectScalar = {
    id?: boolean
    Nome?: boolean
  }

  export type InteresseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Proprietario?: boolean | Interesse$ProprietarioArgs<ExtArgs>
    _count?: boolean | InteresseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InteresseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $InteressePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Interesse"
    objects: {
      Proprietario: Prisma.$ProprietarioNoInteressePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      Nome: string
    }, ExtArgs["result"]["interesse"]>
    composites: {}
  }

  type InteresseGetPayload<S extends boolean | null | undefined | InteresseDefaultArgs> = $Result.GetResult<Prisma.$InteressePayload, S>

  type InteresseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InteresseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InteresseCountAggregateInputType | true
    }

  export interface InteresseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Interesse'], meta: { name: 'Interesse' } }
    /**
     * Find zero or one Interesse that matches the filter.
     * @param {InteresseFindUniqueArgs} args - Arguments to find a Interesse
     * @example
     * // Get one Interesse
     * const interesse = await prisma.interesse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InteresseFindUniqueArgs>(args: SelectSubset<T, InteresseFindUniqueArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Interesse that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InteresseFindUniqueOrThrowArgs} args - Arguments to find a Interesse
     * @example
     * // Get one Interesse
     * const interesse = await prisma.interesse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InteresseFindUniqueOrThrowArgs>(args: SelectSubset<T, InteresseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Interesse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseFindFirstArgs} args - Arguments to find a Interesse
     * @example
     * // Get one Interesse
     * const interesse = await prisma.interesse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InteresseFindFirstArgs>(args?: SelectSubset<T, InteresseFindFirstArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Interesse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseFindFirstOrThrowArgs} args - Arguments to find a Interesse
     * @example
     * // Get one Interesse
     * const interesse = await prisma.interesse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InteresseFindFirstOrThrowArgs>(args?: SelectSubset<T, InteresseFindFirstOrThrowArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Interesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Interesses
     * const interesses = await prisma.interesse.findMany()
     * 
     * // Get first 10 Interesses
     * const interesses = await prisma.interesse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const interesseWithIdOnly = await prisma.interesse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InteresseFindManyArgs>(args?: SelectSubset<T, InteresseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Interesse.
     * @param {InteresseCreateArgs} args - Arguments to create a Interesse.
     * @example
     * // Create one Interesse
     * const Interesse = await prisma.interesse.create({
     *   data: {
     *     // ... data to create a Interesse
     *   }
     * })
     * 
     */
    create<T extends InteresseCreateArgs>(args: SelectSubset<T, InteresseCreateArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Interesses.
     * @param {InteresseCreateManyArgs} args - Arguments to create many Interesses.
     * @example
     * // Create many Interesses
     * const interesse = await prisma.interesse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InteresseCreateManyArgs>(args?: SelectSubset<T, InteresseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Interesses and returns the data saved in the database.
     * @param {InteresseCreateManyAndReturnArgs} args - Arguments to create many Interesses.
     * @example
     * // Create many Interesses
     * const interesse = await prisma.interesse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Interesses and only return the `id`
     * const interesseWithIdOnly = await prisma.interesse.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InteresseCreateManyAndReturnArgs>(args?: SelectSubset<T, InteresseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Interesse.
     * @param {InteresseDeleteArgs} args - Arguments to delete one Interesse.
     * @example
     * // Delete one Interesse
     * const Interesse = await prisma.interesse.delete({
     *   where: {
     *     // ... filter to delete one Interesse
     *   }
     * })
     * 
     */
    delete<T extends InteresseDeleteArgs>(args: SelectSubset<T, InteresseDeleteArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Interesse.
     * @param {InteresseUpdateArgs} args - Arguments to update one Interesse.
     * @example
     * // Update one Interesse
     * const interesse = await prisma.interesse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InteresseUpdateArgs>(args: SelectSubset<T, InteresseUpdateArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Interesses.
     * @param {InteresseDeleteManyArgs} args - Arguments to filter Interesses to delete.
     * @example
     * // Delete a few Interesses
     * const { count } = await prisma.interesse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InteresseDeleteManyArgs>(args?: SelectSubset<T, InteresseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Interesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Interesses
     * const interesse = await prisma.interesse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InteresseUpdateManyArgs>(args: SelectSubset<T, InteresseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Interesse.
     * @param {InteresseUpsertArgs} args - Arguments to update or create a Interesse.
     * @example
     * // Update or create a Interesse
     * const interesse = await prisma.interesse.upsert({
     *   create: {
     *     // ... data to create a Interesse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Interesse we want to update
     *   }
     * })
     */
    upsert<T extends InteresseUpsertArgs>(args: SelectSubset<T, InteresseUpsertArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Interesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseCountArgs} args - Arguments to filter Interesses to count.
     * @example
     * // Count the number of Interesses
     * const count = await prisma.interesse.count({
     *   where: {
     *     // ... the filter for the Interesses we want to count
     *   }
     * })
    **/
    count<T extends InteresseCountArgs>(
      args?: Subset<T, InteresseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InteresseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Interesse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InteresseAggregateArgs>(args: Subset<T, InteresseAggregateArgs>): Prisma.PrismaPromise<GetInteresseAggregateType<T>>

    /**
     * Group by Interesse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteresseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InteresseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InteresseGroupByArgs['orderBy'] }
        : { orderBy?: InteresseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InteresseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInteresseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Interesse model
   */
  readonly fields: InteresseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Interesse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InteresseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Proprietario<T extends Interesse$ProprietarioArgs<ExtArgs> = {}>(args?: Subset<T, Interesse$ProprietarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Interesse model
   */ 
  interface InteresseFieldRefs {
    readonly id: FieldRef<"Interesse", 'Int'>
    readonly Nome: FieldRef<"Interesse", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Interesse findUnique
   */
  export type InteresseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter, which Interesse to fetch.
     */
    where: InteresseWhereUniqueInput
  }

  /**
   * Interesse findUniqueOrThrow
   */
  export type InteresseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter, which Interesse to fetch.
     */
    where: InteresseWhereUniqueInput
  }

  /**
   * Interesse findFirst
   */
  export type InteresseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter, which Interesse to fetch.
     */
    where?: InteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interesses to fetch.
     */
    orderBy?: InteresseOrderByWithRelationInput | InteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Interesses.
     */
    cursor?: InteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Interesses.
     */
    distinct?: InteresseScalarFieldEnum | InteresseScalarFieldEnum[]
  }

  /**
   * Interesse findFirstOrThrow
   */
  export type InteresseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter, which Interesse to fetch.
     */
    where?: InteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interesses to fetch.
     */
    orderBy?: InteresseOrderByWithRelationInput | InteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Interesses.
     */
    cursor?: InteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Interesses.
     */
    distinct?: InteresseScalarFieldEnum | InteresseScalarFieldEnum[]
  }

  /**
   * Interesse findMany
   */
  export type InteresseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter, which Interesses to fetch.
     */
    where?: InteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interesses to fetch.
     */
    orderBy?: InteresseOrderByWithRelationInput | InteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Interesses.
     */
    cursor?: InteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interesses.
     */
    skip?: number
    distinct?: InteresseScalarFieldEnum | InteresseScalarFieldEnum[]
  }

  /**
   * Interesse create
   */
  export type InteresseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * The data needed to create a Interesse.
     */
    data: XOR<InteresseCreateInput, InteresseUncheckedCreateInput>
  }

  /**
   * Interesse createMany
   */
  export type InteresseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Interesses.
     */
    data: InteresseCreateManyInput | InteresseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Interesse createManyAndReturn
   */
  export type InteresseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Interesses.
     */
    data: InteresseCreateManyInput | InteresseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Interesse update
   */
  export type InteresseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * The data needed to update a Interesse.
     */
    data: XOR<InteresseUpdateInput, InteresseUncheckedUpdateInput>
    /**
     * Choose, which Interesse to update.
     */
    where: InteresseWhereUniqueInput
  }

  /**
   * Interesse updateMany
   */
  export type InteresseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Interesses.
     */
    data: XOR<InteresseUpdateManyMutationInput, InteresseUncheckedUpdateManyInput>
    /**
     * Filter which Interesses to update
     */
    where?: InteresseWhereInput
  }

  /**
   * Interesse upsert
   */
  export type InteresseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * The filter to search for the Interesse to update in case it exists.
     */
    where: InteresseWhereUniqueInput
    /**
     * In case the Interesse found by the `where` argument doesn't exist, create a new Interesse with this data.
     */
    create: XOR<InteresseCreateInput, InteresseUncheckedCreateInput>
    /**
     * In case the Interesse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InteresseUpdateInput, InteresseUncheckedUpdateInput>
  }

  /**
   * Interesse delete
   */
  export type InteresseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
    /**
     * Filter which Interesse to delete.
     */
    where: InteresseWhereUniqueInput
  }

  /**
   * Interesse deleteMany
   */
  export type InteresseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Interesses to delete
     */
    where?: InteresseWhereInput
  }

  /**
   * Interesse.Proprietario
   */
  export type Interesse$ProprietarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    where?: ProprietarioNoInteresseWhereInput
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProprietarioNoInteresseScalarFieldEnum | ProprietarioNoInteresseScalarFieldEnum[]
  }

  /**
   * Interesse without action
   */
  export type InteresseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interesse
     */
    select?: InteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteresseInclude<ExtArgs> | null
  }


  /**
   * Model ProprietarioNoInteresse
   */

  export type AggregateProprietarioNoInteresse = {
    _count: ProprietarioNoInteresseCountAggregateOutputType | null
    _avg: ProprietarioNoInteresseAvgAggregateOutputType | null
    _sum: ProprietarioNoInteresseSumAggregateOutputType | null
    _min: ProprietarioNoInteresseMinAggregateOutputType | null
    _max: ProprietarioNoInteresseMaxAggregateOutputType | null
  }

  export type ProprietarioNoInteresseAvgAggregateOutputType = {
    proprietarioId: number | null
    interesseId: number | null
  }

  export type ProprietarioNoInteresseSumAggregateOutputType = {
    proprietarioId: number | null
    interesseId: number | null
  }

  export type ProprietarioNoInteresseMinAggregateOutputType = {
    proprietarioId: number | null
    interesseId: number | null
  }

  export type ProprietarioNoInteresseMaxAggregateOutputType = {
    proprietarioId: number | null
    interesseId: number | null
  }

  export type ProprietarioNoInteresseCountAggregateOutputType = {
    proprietarioId: number
    interesseId: number
    _all: number
  }


  export type ProprietarioNoInteresseAvgAggregateInputType = {
    proprietarioId?: true
    interesseId?: true
  }

  export type ProprietarioNoInteresseSumAggregateInputType = {
    proprietarioId?: true
    interesseId?: true
  }

  export type ProprietarioNoInteresseMinAggregateInputType = {
    proprietarioId?: true
    interesseId?: true
  }

  export type ProprietarioNoInteresseMaxAggregateInputType = {
    proprietarioId?: true
    interesseId?: true
  }

  export type ProprietarioNoInteresseCountAggregateInputType = {
    proprietarioId?: true
    interesseId?: true
    _all?: true
  }

  export type ProprietarioNoInteresseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProprietarioNoInteresse to aggregate.
     */
    where?: ProprietarioNoInteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProprietarioNoInteresses to fetch.
     */
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProprietarioNoInteresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProprietarioNoInteresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProprietarioNoInteresses
    **/
    _count?: true | ProprietarioNoInteresseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProprietarioNoInteresseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProprietarioNoInteresseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProprietarioNoInteresseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProprietarioNoInteresseMaxAggregateInputType
  }

  export type GetProprietarioNoInteresseAggregateType<T extends ProprietarioNoInteresseAggregateArgs> = {
        [P in keyof T & keyof AggregateProprietarioNoInteresse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProprietarioNoInteresse[P]>
      : GetScalarType<T[P], AggregateProprietarioNoInteresse[P]>
  }




  export type ProprietarioNoInteresseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProprietarioNoInteresseWhereInput
    orderBy?: ProprietarioNoInteresseOrderByWithAggregationInput | ProprietarioNoInteresseOrderByWithAggregationInput[]
    by: ProprietarioNoInteresseScalarFieldEnum[] | ProprietarioNoInteresseScalarFieldEnum
    having?: ProprietarioNoInteresseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProprietarioNoInteresseCountAggregateInputType | true
    _avg?: ProprietarioNoInteresseAvgAggregateInputType
    _sum?: ProprietarioNoInteresseSumAggregateInputType
    _min?: ProprietarioNoInteresseMinAggregateInputType
    _max?: ProprietarioNoInteresseMaxAggregateInputType
  }

  export type ProprietarioNoInteresseGroupByOutputType = {
    proprietarioId: number
    interesseId: number
    _count: ProprietarioNoInteresseCountAggregateOutputType | null
    _avg: ProprietarioNoInteresseAvgAggregateOutputType | null
    _sum: ProprietarioNoInteresseSumAggregateOutputType | null
    _min: ProprietarioNoInteresseMinAggregateOutputType | null
    _max: ProprietarioNoInteresseMaxAggregateOutputType | null
  }

  type GetProprietarioNoInteresseGroupByPayload<T extends ProprietarioNoInteresseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProprietarioNoInteresseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProprietarioNoInteresseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProprietarioNoInteresseGroupByOutputType[P]>
            : GetScalarType<T[P], ProprietarioNoInteresseGroupByOutputType[P]>
        }
      >
    >


  export type ProprietarioNoInteresseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proprietarioId?: boolean
    interesseId?: boolean
    interesse?: boolean | InteresseDefaultArgs<ExtArgs>
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proprietarioNoInteresse"]>

  export type ProprietarioNoInteresseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proprietarioId?: boolean
    interesseId?: boolean
    interesse?: boolean | InteresseDefaultArgs<ExtArgs>
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proprietarioNoInteresse"]>

  export type ProprietarioNoInteresseSelectScalar = {
    proprietarioId?: boolean
    interesseId?: boolean
  }

  export type ProprietarioNoInteresseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    interesse?: boolean | InteresseDefaultArgs<ExtArgs>
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }
  export type ProprietarioNoInteresseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    interesse?: boolean | InteresseDefaultArgs<ExtArgs>
    proprietario?: boolean | ProprietarioDefaultArgs<ExtArgs>
  }

  export type $ProprietarioNoInteressePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProprietarioNoInteresse"
    objects: {
      interesse: Prisma.$InteressePayload<ExtArgs>
      proprietario: Prisma.$ProprietarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      proprietarioId: number
      interesseId: number
    }, ExtArgs["result"]["proprietarioNoInteresse"]>
    composites: {}
  }

  type ProprietarioNoInteresseGetPayload<S extends boolean | null | undefined | ProprietarioNoInteresseDefaultArgs> = $Result.GetResult<Prisma.$ProprietarioNoInteressePayload, S>

  type ProprietarioNoInteresseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProprietarioNoInteresseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProprietarioNoInteresseCountAggregateInputType | true
    }

  export interface ProprietarioNoInteresseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProprietarioNoInteresse'], meta: { name: 'ProprietarioNoInteresse' } }
    /**
     * Find zero or one ProprietarioNoInteresse that matches the filter.
     * @param {ProprietarioNoInteresseFindUniqueArgs} args - Arguments to find a ProprietarioNoInteresse
     * @example
     * // Get one ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProprietarioNoInteresseFindUniqueArgs>(args: SelectSubset<T, ProprietarioNoInteresseFindUniqueArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProprietarioNoInteresse that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProprietarioNoInteresseFindUniqueOrThrowArgs} args - Arguments to find a ProprietarioNoInteresse
     * @example
     * // Get one ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProprietarioNoInteresseFindUniqueOrThrowArgs>(args: SelectSubset<T, ProprietarioNoInteresseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProprietarioNoInteresse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseFindFirstArgs} args - Arguments to find a ProprietarioNoInteresse
     * @example
     * // Get one ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProprietarioNoInteresseFindFirstArgs>(args?: SelectSubset<T, ProprietarioNoInteresseFindFirstArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProprietarioNoInteresse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseFindFirstOrThrowArgs} args - Arguments to find a ProprietarioNoInteresse
     * @example
     * // Get one ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProprietarioNoInteresseFindFirstOrThrowArgs>(args?: SelectSubset<T, ProprietarioNoInteresseFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProprietarioNoInteresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProprietarioNoInteresses
     * const proprietarioNoInteresses = await prisma.proprietarioNoInteresse.findMany()
     * 
     * // Get first 10 ProprietarioNoInteresses
     * const proprietarioNoInteresses = await prisma.proprietarioNoInteresse.findMany({ take: 10 })
     * 
     * // Only select the `proprietarioId`
     * const proprietarioNoInteresseWithProprietarioIdOnly = await prisma.proprietarioNoInteresse.findMany({ select: { proprietarioId: true } })
     * 
     */
    findMany<T extends ProprietarioNoInteresseFindManyArgs>(args?: SelectSubset<T, ProprietarioNoInteresseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProprietarioNoInteresse.
     * @param {ProprietarioNoInteresseCreateArgs} args - Arguments to create a ProprietarioNoInteresse.
     * @example
     * // Create one ProprietarioNoInteresse
     * const ProprietarioNoInteresse = await prisma.proprietarioNoInteresse.create({
     *   data: {
     *     // ... data to create a ProprietarioNoInteresse
     *   }
     * })
     * 
     */
    create<T extends ProprietarioNoInteresseCreateArgs>(args: SelectSubset<T, ProprietarioNoInteresseCreateArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProprietarioNoInteresses.
     * @param {ProprietarioNoInteresseCreateManyArgs} args - Arguments to create many ProprietarioNoInteresses.
     * @example
     * // Create many ProprietarioNoInteresses
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProprietarioNoInteresseCreateManyArgs>(args?: SelectSubset<T, ProprietarioNoInteresseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProprietarioNoInteresses and returns the data saved in the database.
     * @param {ProprietarioNoInteresseCreateManyAndReturnArgs} args - Arguments to create many ProprietarioNoInteresses.
     * @example
     * // Create many ProprietarioNoInteresses
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProprietarioNoInteresses and only return the `proprietarioId`
     * const proprietarioNoInteresseWithProprietarioIdOnly = await prisma.proprietarioNoInteresse.createManyAndReturn({ 
     *   select: { proprietarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProprietarioNoInteresseCreateManyAndReturnArgs>(args?: SelectSubset<T, ProprietarioNoInteresseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProprietarioNoInteresse.
     * @param {ProprietarioNoInteresseDeleteArgs} args - Arguments to delete one ProprietarioNoInteresse.
     * @example
     * // Delete one ProprietarioNoInteresse
     * const ProprietarioNoInteresse = await prisma.proprietarioNoInteresse.delete({
     *   where: {
     *     // ... filter to delete one ProprietarioNoInteresse
     *   }
     * })
     * 
     */
    delete<T extends ProprietarioNoInteresseDeleteArgs>(args: SelectSubset<T, ProprietarioNoInteresseDeleteArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProprietarioNoInteresse.
     * @param {ProprietarioNoInteresseUpdateArgs} args - Arguments to update one ProprietarioNoInteresse.
     * @example
     * // Update one ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProprietarioNoInteresseUpdateArgs>(args: SelectSubset<T, ProprietarioNoInteresseUpdateArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProprietarioNoInteresses.
     * @param {ProprietarioNoInteresseDeleteManyArgs} args - Arguments to filter ProprietarioNoInteresses to delete.
     * @example
     * // Delete a few ProprietarioNoInteresses
     * const { count } = await prisma.proprietarioNoInteresse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProprietarioNoInteresseDeleteManyArgs>(args?: SelectSubset<T, ProprietarioNoInteresseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProprietarioNoInteresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProprietarioNoInteresses
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProprietarioNoInteresseUpdateManyArgs>(args: SelectSubset<T, ProprietarioNoInteresseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProprietarioNoInteresse.
     * @param {ProprietarioNoInteresseUpsertArgs} args - Arguments to update or create a ProprietarioNoInteresse.
     * @example
     * // Update or create a ProprietarioNoInteresse
     * const proprietarioNoInteresse = await prisma.proprietarioNoInteresse.upsert({
     *   create: {
     *     // ... data to create a ProprietarioNoInteresse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProprietarioNoInteresse we want to update
     *   }
     * })
     */
    upsert<T extends ProprietarioNoInteresseUpsertArgs>(args: SelectSubset<T, ProprietarioNoInteresseUpsertArgs<ExtArgs>>): Prisma__ProprietarioNoInteresseClient<$Result.GetResult<Prisma.$ProprietarioNoInteressePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProprietarioNoInteresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseCountArgs} args - Arguments to filter ProprietarioNoInteresses to count.
     * @example
     * // Count the number of ProprietarioNoInteresses
     * const count = await prisma.proprietarioNoInteresse.count({
     *   where: {
     *     // ... the filter for the ProprietarioNoInteresses we want to count
     *   }
     * })
    **/
    count<T extends ProprietarioNoInteresseCountArgs>(
      args?: Subset<T, ProprietarioNoInteresseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProprietarioNoInteresseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProprietarioNoInteresse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProprietarioNoInteresseAggregateArgs>(args: Subset<T, ProprietarioNoInteresseAggregateArgs>): Prisma.PrismaPromise<GetProprietarioNoInteresseAggregateType<T>>

    /**
     * Group by ProprietarioNoInteresse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProprietarioNoInteresseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProprietarioNoInteresseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProprietarioNoInteresseGroupByArgs['orderBy'] }
        : { orderBy?: ProprietarioNoInteresseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProprietarioNoInteresseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProprietarioNoInteresseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProprietarioNoInteresse model
   */
  readonly fields: ProprietarioNoInteresseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProprietarioNoInteresse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProprietarioNoInteresseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    interesse<T extends InteresseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InteresseDefaultArgs<ExtArgs>>): Prisma__InteresseClient<$Result.GetResult<Prisma.$InteressePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    proprietario<T extends ProprietarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProprietarioDefaultArgs<ExtArgs>>): Prisma__ProprietarioClient<$Result.GetResult<Prisma.$ProprietarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProprietarioNoInteresse model
   */ 
  interface ProprietarioNoInteresseFieldRefs {
    readonly proprietarioId: FieldRef<"ProprietarioNoInteresse", 'Int'>
    readonly interesseId: FieldRef<"ProprietarioNoInteresse", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProprietarioNoInteresse findUnique
   */
  export type ProprietarioNoInteresseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter, which ProprietarioNoInteresse to fetch.
     */
    where: ProprietarioNoInteresseWhereUniqueInput
  }

  /**
   * ProprietarioNoInteresse findUniqueOrThrow
   */
  export type ProprietarioNoInteresseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter, which ProprietarioNoInteresse to fetch.
     */
    where: ProprietarioNoInteresseWhereUniqueInput
  }

  /**
   * ProprietarioNoInteresse findFirst
   */
  export type ProprietarioNoInteresseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter, which ProprietarioNoInteresse to fetch.
     */
    where?: ProprietarioNoInteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProprietarioNoInteresses to fetch.
     */
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProprietarioNoInteresses.
     */
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProprietarioNoInteresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProprietarioNoInteresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProprietarioNoInteresses.
     */
    distinct?: ProprietarioNoInteresseScalarFieldEnum | ProprietarioNoInteresseScalarFieldEnum[]
  }

  /**
   * ProprietarioNoInteresse findFirstOrThrow
   */
  export type ProprietarioNoInteresseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter, which ProprietarioNoInteresse to fetch.
     */
    where?: ProprietarioNoInteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProprietarioNoInteresses to fetch.
     */
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProprietarioNoInteresses.
     */
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProprietarioNoInteresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProprietarioNoInteresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProprietarioNoInteresses.
     */
    distinct?: ProprietarioNoInteresseScalarFieldEnum | ProprietarioNoInteresseScalarFieldEnum[]
  }

  /**
   * ProprietarioNoInteresse findMany
   */
  export type ProprietarioNoInteresseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter, which ProprietarioNoInteresses to fetch.
     */
    where?: ProprietarioNoInteresseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProprietarioNoInteresses to fetch.
     */
    orderBy?: ProprietarioNoInteresseOrderByWithRelationInput | ProprietarioNoInteresseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProprietarioNoInteresses.
     */
    cursor?: ProprietarioNoInteresseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProprietarioNoInteresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProprietarioNoInteresses.
     */
    skip?: number
    distinct?: ProprietarioNoInteresseScalarFieldEnum | ProprietarioNoInteresseScalarFieldEnum[]
  }

  /**
   * ProprietarioNoInteresse create
   */
  export type ProprietarioNoInteresseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * The data needed to create a ProprietarioNoInteresse.
     */
    data: XOR<ProprietarioNoInteresseCreateInput, ProprietarioNoInteresseUncheckedCreateInput>
  }

  /**
   * ProprietarioNoInteresse createMany
   */
  export type ProprietarioNoInteresseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProprietarioNoInteresses.
     */
    data: ProprietarioNoInteresseCreateManyInput | ProprietarioNoInteresseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProprietarioNoInteresse createManyAndReturn
   */
  export type ProprietarioNoInteresseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProprietarioNoInteresses.
     */
    data: ProprietarioNoInteresseCreateManyInput | ProprietarioNoInteresseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProprietarioNoInteresse update
   */
  export type ProprietarioNoInteresseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * The data needed to update a ProprietarioNoInteresse.
     */
    data: XOR<ProprietarioNoInteresseUpdateInput, ProprietarioNoInteresseUncheckedUpdateInput>
    /**
     * Choose, which ProprietarioNoInteresse to update.
     */
    where: ProprietarioNoInteresseWhereUniqueInput
  }

  /**
   * ProprietarioNoInteresse updateMany
   */
  export type ProprietarioNoInteresseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProprietarioNoInteresses.
     */
    data: XOR<ProprietarioNoInteresseUpdateManyMutationInput, ProprietarioNoInteresseUncheckedUpdateManyInput>
    /**
     * Filter which ProprietarioNoInteresses to update
     */
    where?: ProprietarioNoInteresseWhereInput
  }

  /**
   * ProprietarioNoInteresse upsert
   */
  export type ProprietarioNoInteresseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * The filter to search for the ProprietarioNoInteresse to update in case it exists.
     */
    where: ProprietarioNoInteresseWhereUniqueInput
    /**
     * In case the ProprietarioNoInteresse found by the `where` argument doesn't exist, create a new ProprietarioNoInteresse with this data.
     */
    create: XOR<ProprietarioNoInteresseCreateInput, ProprietarioNoInteresseUncheckedCreateInput>
    /**
     * In case the ProprietarioNoInteresse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProprietarioNoInteresseUpdateInput, ProprietarioNoInteresseUncheckedUpdateInput>
  }

  /**
   * ProprietarioNoInteresse delete
   */
  export type ProprietarioNoInteresseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
    /**
     * Filter which ProprietarioNoInteresse to delete.
     */
    where: ProprietarioNoInteresseWhereUniqueInput
  }

  /**
   * ProprietarioNoInteresse deleteMany
   */
  export type ProprietarioNoInteresseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProprietarioNoInteresses to delete
     */
    where?: ProprietarioNoInteresseWhereInput
  }

  /**
   * ProprietarioNoInteresse without action
   */
  export type ProprietarioNoInteresseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProprietarioNoInteresse
     */
    select?: ProprietarioNoInteresseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProprietarioNoInteresseInclude<ExtArgs> | null
  }


  /**
   * Model Cupom
   */

  export type AggregateCupom = {
    _count: CupomCountAggregateOutputType | null
    _avg: CupomAvgAggregateOutputType | null
    _sum: CupomSumAggregateOutputType | null
    _min: CupomMinAggregateOutputType | null
    _max: CupomMaxAggregateOutputType | null
  }

  export type CupomAvgAggregateOutputType = {
    id: number | null
    desconto: number | null
  }

  export type CupomSumAggregateOutputType = {
    id: number | null
    desconto: number | null
  }

  export type CupomMinAggregateOutputType = {
    id: number | null
    codigo: string | null
    desconto: number | null
    data_validade: Date | null
  }

  export type CupomMaxAggregateOutputType = {
    id: number | null
    codigo: string | null
    desconto: number | null
    data_validade: Date | null
  }

  export type CupomCountAggregateOutputType = {
    id: number
    codigo: number
    desconto: number
    data_validade: number
    _all: number
  }


  export type CupomAvgAggregateInputType = {
    id?: true
    desconto?: true
  }

  export type CupomSumAggregateInputType = {
    id?: true
    desconto?: true
  }

  export type CupomMinAggregateInputType = {
    id?: true
    codigo?: true
    desconto?: true
    data_validade?: true
  }

  export type CupomMaxAggregateInputType = {
    id?: true
    codigo?: true
    desconto?: true
    data_validade?: true
  }

  export type CupomCountAggregateInputType = {
    id?: true
    codigo?: true
    desconto?: true
    data_validade?: true
    _all?: true
  }

  export type CupomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cupom to aggregate.
     */
    where?: CupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cupoms to fetch.
     */
    orderBy?: CupomOrderByWithRelationInput | CupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cupoms
    **/
    _count?: true | CupomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CupomAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CupomSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CupomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CupomMaxAggregateInputType
  }

  export type GetCupomAggregateType<T extends CupomAggregateArgs> = {
        [P in keyof T & keyof AggregateCupom]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCupom[P]>
      : GetScalarType<T[P], AggregateCupom[P]>
  }




  export type CupomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CupomWhereInput
    orderBy?: CupomOrderByWithAggregationInput | CupomOrderByWithAggregationInput[]
    by: CupomScalarFieldEnum[] | CupomScalarFieldEnum
    having?: CupomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CupomCountAggregateInputType | true
    _avg?: CupomAvgAggregateInputType
    _sum?: CupomSumAggregateInputType
    _min?: CupomMinAggregateInputType
    _max?: CupomMaxAggregateInputType
  }

  export type CupomGroupByOutputType = {
    id: number
    codigo: string
    desconto: number
    data_validade: Date
    _count: CupomCountAggregateOutputType | null
    _avg: CupomAvgAggregateOutputType | null
    _sum: CupomSumAggregateOutputType | null
    _min: CupomMinAggregateOutputType | null
    _max: CupomMaxAggregateOutputType | null
  }

  type GetCupomGroupByPayload<T extends CupomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CupomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CupomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CupomGroupByOutputType[P]>
            : GetScalarType<T[P], CupomGroupByOutputType[P]>
        }
      >
    >


  export type CupomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    desconto?: boolean
    data_validade?: boolean
    Cliente?: boolean | Cupom$ClienteArgs<ExtArgs>
    _count?: boolean | CupomCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cupom"]>

  export type CupomSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    desconto?: boolean
    data_validade?: boolean
  }, ExtArgs["result"]["cupom"]>

  export type CupomSelectScalar = {
    id?: boolean
    codigo?: boolean
    desconto?: boolean
    data_validade?: boolean
  }

  export type CupomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Cliente?: boolean | Cupom$ClienteArgs<ExtArgs>
    _count?: boolean | CupomCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CupomIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CupomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cupom"
    objects: {
      Cliente: Prisma.$ClienteNoCupomPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: string
      desconto: number
      data_validade: Date
    }, ExtArgs["result"]["cupom"]>
    composites: {}
  }

  type CupomGetPayload<S extends boolean | null | undefined | CupomDefaultArgs> = $Result.GetResult<Prisma.$CupomPayload, S>

  type CupomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CupomFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CupomCountAggregateInputType | true
    }

  export interface CupomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cupom'], meta: { name: 'Cupom' } }
    /**
     * Find zero or one Cupom that matches the filter.
     * @param {CupomFindUniqueArgs} args - Arguments to find a Cupom
     * @example
     * // Get one Cupom
     * const cupom = await prisma.cupom.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CupomFindUniqueArgs>(args: SelectSubset<T, CupomFindUniqueArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cupom that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CupomFindUniqueOrThrowArgs} args - Arguments to find a Cupom
     * @example
     * // Get one Cupom
     * const cupom = await prisma.cupom.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CupomFindUniqueOrThrowArgs>(args: SelectSubset<T, CupomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cupom that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomFindFirstArgs} args - Arguments to find a Cupom
     * @example
     * // Get one Cupom
     * const cupom = await prisma.cupom.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CupomFindFirstArgs>(args?: SelectSubset<T, CupomFindFirstArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cupom that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomFindFirstOrThrowArgs} args - Arguments to find a Cupom
     * @example
     * // Get one Cupom
     * const cupom = await prisma.cupom.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CupomFindFirstOrThrowArgs>(args?: SelectSubset<T, CupomFindFirstOrThrowArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cupoms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cupoms
     * const cupoms = await prisma.cupom.findMany()
     * 
     * // Get first 10 Cupoms
     * const cupoms = await prisma.cupom.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cupomWithIdOnly = await prisma.cupom.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CupomFindManyArgs>(args?: SelectSubset<T, CupomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cupom.
     * @param {CupomCreateArgs} args - Arguments to create a Cupom.
     * @example
     * // Create one Cupom
     * const Cupom = await prisma.cupom.create({
     *   data: {
     *     // ... data to create a Cupom
     *   }
     * })
     * 
     */
    create<T extends CupomCreateArgs>(args: SelectSubset<T, CupomCreateArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cupoms.
     * @param {CupomCreateManyArgs} args - Arguments to create many Cupoms.
     * @example
     * // Create many Cupoms
     * const cupom = await prisma.cupom.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CupomCreateManyArgs>(args?: SelectSubset<T, CupomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cupoms and returns the data saved in the database.
     * @param {CupomCreateManyAndReturnArgs} args - Arguments to create many Cupoms.
     * @example
     * // Create many Cupoms
     * const cupom = await prisma.cupom.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cupoms and only return the `id`
     * const cupomWithIdOnly = await prisma.cupom.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CupomCreateManyAndReturnArgs>(args?: SelectSubset<T, CupomCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cupom.
     * @param {CupomDeleteArgs} args - Arguments to delete one Cupom.
     * @example
     * // Delete one Cupom
     * const Cupom = await prisma.cupom.delete({
     *   where: {
     *     // ... filter to delete one Cupom
     *   }
     * })
     * 
     */
    delete<T extends CupomDeleteArgs>(args: SelectSubset<T, CupomDeleteArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cupom.
     * @param {CupomUpdateArgs} args - Arguments to update one Cupom.
     * @example
     * // Update one Cupom
     * const cupom = await prisma.cupom.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CupomUpdateArgs>(args: SelectSubset<T, CupomUpdateArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cupoms.
     * @param {CupomDeleteManyArgs} args - Arguments to filter Cupoms to delete.
     * @example
     * // Delete a few Cupoms
     * const { count } = await prisma.cupom.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CupomDeleteManyArgs>(args?: SelectSubset<T, CupomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cupoms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cupoms
     * const cupom = await prisma.cupom.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CupomUpdateManyArgs>(args: SelectSubset<T, CupomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cupom.
     * @param {CupomUpsertArgs} args - Arguments to update or create a Cupom.
     * @example
     * // Update or create a Cupom
     * const cupom = await prisma.cupom.upsert({
     *   create: {
     *     // ... data to create a Cupom
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cupom we want to update
     *   }
     * })
     */
    upsert<T extends CupomUpsertArgs>(args: SelectSubset<T, CupomUpsertArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cupoms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomCountArgs} args - Arguments to filter Cupoms to count.
     * @example
     * // Count the number of Cupoms
     * const count = await prisma.cupom.count({
     *   where: {
     *     // ... the filter for the Cupoms we want to count
     *   }
     * })
    **/
    count<T extends CupomCountArgs>(
      args?: Subset<T, CupomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CupomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cupom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CupomAggregateArgs>(args: Subset<T, CupomAggregateArgs>): Prisma.PrismaPromise<GetCupomAggregateType<T>>

    /**
     * Group by Cupom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CupomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CupomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CupomGroupByArgs['orderBy'] }
        : { orderBy?: CupomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CupomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCupomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cupom model
   */
  readonly fields: CupomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cupom.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CupomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Cliente<T extends Cupom$ClienteArgs<ExtArgs> = {}>(args?: Subset<T, Cupom$ClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cupom model
   */ 
  interface CupomFieldRefs {
    readonly id: FieldRef<"Cupom", 'Int'>
    readonly codigo: FieldRef<"Cupom", 'String'>
    readonly desconto: FieldRef<"Cupom", 'Float'>
    readonly data_validade: FieldRef<"Cupom", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cupom findUnique
   */
  export type CupomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter, which Cupom to fetch.
     */
    where: CupomWhereUniqueInput
  }

  /**
   * Cupom findUniqueOrThrow
   */
  export type CupomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter, which Cupom to fetch.
     */
    where: CupomWhereUniqueInput
  }

  /**
   * Cupom findFirst
   */
  export type CupomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter, which Cupom to fetch.
     */
    where?: CupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cupoms to fetch.
     */
    orderBy?: CupomOrderByWithRelationInput | CupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cupoms.
     */
    cursor?: CupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cupoms.
     */
    distinct?: CupomScalarFieldEnum | CupomScalarFieldEnum[]
  }

  /**
   * Cupom findFirstOrThrow
   */
  export type CupomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter, which Cupom to fetch.
     */
    where?: CupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cupoms to fetch.
     */
    orderBy?: CupomOrderByWithRelationInput | CupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cupoms.
     */
    cursor?: CupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cupoms.
     */
    distinct?: CupomScalarFieldEnum | CupomScalarFieldEnum[]
  }

  /**
   * Cupom findMany
   */
  export type CupomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter, which Cupoms to fetch.
     */
    where?: CupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cupoms to fetch.
     */
    orderBy?: CupomOrderByWithRelationInput | CupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cupoms.
     */
    cursor?: CupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cupoms.
     */
    skip?: number
    distinct?: CupomScalarFieldEnum | CupomScalarFieldEnum[]
  }

  /**
   * Cupom create
   */
  export type CupomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * The data needed to create a Cupom.
     */
    data: XOR<CupomCreateInput, CupomUncheckedCreateInput>
  }

  /**
   * Cupom createMany
   */
  export type CupomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cupoms.
     */
    data: CupomCreateManyInput | CupomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cupom createManyAndReturn
   */
  export type CupomCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Cupoms.
     */
    data: CupomCreateManyInput | CupomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cupom update
   */
  export type CupomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * The data needed to update a Cupom.
     */
    data: XOR<CupomUpdateInput, CupomUncheckedUpdateInput>
    /**
     * Choose, which Cupom to update.
     */
    where: CupomWhereUniqueInput
  }

  /**
   * Cupom updateMany
   */
  export type CupomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cupoms.
     */
    data: XOR<CupomUpdateManyMutationInput, CupomUncheckedUpdateManyInput>
    /**
     * Filter which Cupoms to update
     */
    where?: CupomWhereInput
  }

  /**
   * Cupom upsert
   */
  export type CupomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * The filter to search for the Cupom to update in case it exists.
     */
    where: CupomWhereUniqueInput
    /**
     * In case the Cupom found by the `where` argument doesn't exist, create a new Cupom with this data.
     */
    create: XOR<CupomCreateInput, CupomUncheckedCreateInput>
    /**
     * In case the Cupom was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CupomUpdateInput, CupomUncheckedUpdateInput>
  }

  /**
   * Cupom delete
   */
  export type CupomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
    /**
     * Filter which Cupom to delete.
     */
    where: CupomWhereUniqueInput
  }

  /**
   * Cupom deleteMany
   */
  export type CupomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cupoms to delete
     */
    where?: CupomWhereInput
  }

  /**
   * Cupom.Cliente
   */
  export type Cupom$ClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    where?: ClienteNoCupomWhereInput
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    cursor?: ClienteNoCupomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteNoCupomScalarFieldEnum | ClienteNoCupomScalarFieldEnum[]
  }

  /**
   * Cupom without action
   */
  export type CupomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cupom
     */
    select?: CupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CupomInclude<ExtArgs> | null
  }


  /**
   * Model ClienteNoCupom
   */

  export type AggregateClienteNoCupom = {
    _count: ClienteNoCupomCountAggregateOutputType | null
    _avg: ClienteNoCupomAvgAggregateOutputType | null
    _sum: ClienteNoCupomSumAggregateOutputType | null
    _min: ClienteNoCupomMinAggregateOutputType | null
    _max: ClienteNoCupomMaxAggregateOutputType | null
  }

  export type ClienteNoCupomAvgAggregateOutputType = {
    clienteId: number | null
    cupomId: number | null
  }

  export type ClienteNoCupomSumAggregateOutputType = {
    clienteId: number | null
    cupomId: number | null
  }

  export type ClienteNoCupomMinAggregateOutputType = {
    clienteId: number | null
    cupomId: number | null
  }

  export type ClienteNoCupomMaxAggregateOutputType = {
    clienteId: number | null
    cupomId: number | null
  }

  export type ClienteNoCupomCountAggregateOutputType = {
    clienteId: number
    cupomId: number
    _all: number
  }


  export type ClienteNoCupomAvgAggregateInputType = {
    clienteId?: true
    cupomId?: true
  }

  export type ClienteNoCupomSumAggregateInputType = {
    clienteId?: true
    cupomId?: true
  }

  export type ClienteNoCupomMinAggregateInputType = {
    clienteId?: true
    cupomId?: true
  }

  export type ClienteNoCupomMaxAggregateInputType = {
    clienteId?: true
    cupomId?: true
  }

  export type ClienteNoCupomCountAggregateInputType = {
    clienteId?: true
    cupomId?: true
    _all?: true
  }

  export type ClienteNoCupomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClienteNoCupom to aggregate.
     */
    where?: ClienteNoCupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteNoCupoms to fetch.
     */
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteNoCupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteNoCupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteNoCupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClienteNoCupoms
    **/
    _count?: true | ClienteNoCupomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteNoCupomAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteNoCupomSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteNoCupomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteNoCupomMaxAggregateInputType
  }

  export type GetClienteNoCupomAggregateType<T extends ClienteNoCupomAggregateArgs> = {
        [P in keyof T & keyof AggregateClienteNoCupom]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClienteNoCupom[P]>
      : GetScalarType<T[P], AggregateClienteNoCupom[P]>
  }




  export type ClienteNoCupomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteNoCupomWhereInput
    orderBy?: ClienteNoCupomOrderByWithAggregationInput | ClienteNoCupomOrderByWithAggregationInput[]
    by: ClienteNoCupomScalarFieldEnum[] | ClienteNoCupomScalarFieldEnum
    having?: ClienteNoCupomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteNoCupomCountAggregateInputType | true
    _avg?: ClienteNoCupomAvgAggregateInputType
    _sum?: ClienteNoCupomSumAggregateInputType
    _min?: ClienteNoCupomMinAggregateInputType
    _max?: ClienteNoCupomMaxAggregateInputType
  }

  export type ClienteNoCupomGroupByOutputType = {
    clienteId: number
    cupomId: number
    _count: ClienteNoCupomCountAggregateOutputType | null
    _avg: ClienteNoCupomAvgAggregateOutputType | null
    _sum: ClienteNoCupomSumAggregateOutputType | null
    _min: ClienteNoCupomMinAggregateOutputType | null
    _max: ClienteNoCupomMaxAggregateOutputType | null
  }

  type GetClienteNoCupomGroupByPayload<T extends ClienteNoCupomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteNoCupomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteNoCupomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteNoCupomGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteNoCupomGroupByOutputType[P]>
        }
      >
    >


  export type ClienteNoCupomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteId?: boolean
    cupomId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    cupom?: boolean | CupomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clienteNoCupom"]>

  export type ClienteNoCupomSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteId?: boolean
    cupomId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    cupom?: boolean | CupomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clienteNoCupom"]>

  export type ClienteNoCupomSelectScalar = {
    clienteId?: boolean
    cupomId?: boolean
  }

  export type ClienteNoCupomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    cupom?: boolean | CupomDefaultArgs<ExtArgs>
  }
  export type ClienteNoCupomIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    cupom?: boolean | CupomDefaultArgs<ExtArgs>
  }

  export type $ClienteNoCupomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClienteNoCupom"
    objects: {
      cliente: Prisma.$ClientPayload<ExtArgs>
      cupom: Prisma.$CupomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteId: number
      cupomId: number
    }, ExtArgs["result"]["clienteNoCupom"]>
    composites: {}
  }

  type ClienteNoCupomGetPayload<S extends boolean | null | undefined | ClienteNoCupomDefaultArgs> = $Result.GetResult<Prisma.$ClienteNoCupomPayload, S>

  type ClienteNoCupomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClienteNoCupomFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteNoCupomCountAggregateInputType | true
    }

  export interface ClienteNoCupomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClienteNoCupom'], meta: { name: 'ClienteNoCupom' } }
    /**
     * Find zero or one ClienteNoCupom that matches the filter.
     * @param {ClienteNoCupomFindUniqueArgs} args - Arguments to find a ClienteNoCupom
     * @example
     * // Get one ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteNoCupomFindUniqueArgs>(args: SelectSubset<T, ClienteNoCupomFindUniqueArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ClienteNoCupom that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClienteNoCupomFindUniqueOrThrowArgs} args - Arguments to find a ClienteNoCupom
     * @example
     * // Get one ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteNoCupomFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteNoCupomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ClienteNoCupom that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomFindFirstArgs} args - Arguments to find a ClienteNoCupom
     * @example
     * // Get one ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteNoCupomFindFirstArgs>(args?: SelectSubset<T, ClienteNoCupomFindFirstArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ClienteNoCupom that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomFindFirstOrThrowArgs} args - Arguments to find a ClienteNoCupom
     * @example
     * // Get one ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteNoCupomFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteNoCupomFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ClienteNoCupoms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClienteNoCupoms
     * const clienteNoCupoms = await prisma.clienteNoCupom.findMany()
     * 
     * // Get first 10 ClienteNoCupoms
     * const clienteNoCupoms = await prisma.clienteNoCupom.findMany({ take: 10 })
     * 
     * // Only select the `clienteId`
     * const clienteNoCupomWithClienteIdOnly = await prisma.clienteNoCupom.findMany({ select: { clienteId: true } })
     * 
     */
    findMany<T extends ClienteNoCupomFindManyArgs>(args?: SelectSubset<T, ClienteNoCupomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ClienteNoCupom.
     * @param {ClienteNoCupomCreateArgs} args - Arguments to create a ClienteNoCupom.
     * @example
     * // Create one ClienteNoCupom
     * const ClienteNoCupom = await prisma.clienteNoCupom.create({
     *   data: {
     *     // ... data to create a ClienteNoCupom
     *   }
     * })
     * 
     */
    create<T extends ClienteNoCupomCreateArgs>(args: SelectSubset<T, ClienteNoCupomCreateArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ClienteNoCupoms.
     * @param {ClienteNoCupomCreateManyArgs} args - Arguments to create many ClienteNoCupoms.
     * @example
     * // Create many ClienteNoCupoms
     * const clienteNoCupom = await prisma.clienteNoCupom.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteNoCupomCreateManyArgs>(args?: SelectSubset<T, ClienteNoCupomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClienteNoCupoms and returns the data saved in the database.
     * @param {ClienteNoCupomCreateManyAndReturnArgs} args - Arguments to create many ClienteNoCupoms.
     * @example
     * // Create many ClienteNoCupoms
     * const clienteNoCupom = await prisma.clienteNoCupom.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClienteNoCupoms and only return the `clienteId`
     * const clienteNoCupomWithClienteIdOnly = await prisma.clienteNoCupom.createManyAndReturn({ 
     *   select: { clienteId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteNoCupomCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteNoCupomCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ClienteNoCupom.
     * @param {ClienteNoCupomDeleteArgs} args - Arguments to delete one ClienteNoCupom.
     * @example
     * // Delete one ClienteNoCupom
     * const ClienteNoCupom = await prisma.clienteNoCupom.delete({
     *   where: {
     *     // ... filter to delete one ClienteNoCupom
     *   }
     * })
     * 
     */
    delete<T extends ClienteNoCupomDeleteArgs>(args: SelectSubset<T, ClienteNoCupomDeleteArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ClienteNoCupom.
     * @param {ClienteNoCupomUpdateArgs} args - Arguments to update one ClienteNoCupom.
     * @example
     * // Update one ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteNoCupomUpdateArgs>(args: SelectSubset<T, ClienteNoCupomUpdateArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ClienteNoCupoms.
     * @param {ClienteNoCupomDeleteManyArgs} args - Arguments to filter ClienteNoCupoms to delete.
     * @example
     * // Delete a few ClienteNoCupoms
     * const { count } = await prisma.clienteNoCupom.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteNoCupomDeleteManyArgs>(args?: SelectSubset<T, ClienteNoCupomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClienteNoCupoms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClienteNoCupoms
     * const clienteNoCupom = await prisma.clienteNoCupom.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteNoCupomUpdateManyArgs>(args: SelectSubset<T, ClienteNoCupomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ClienteNoCupom.
     * @param {ClienteNoCupomUpsertArgs} args - Arguments to update or create a ClienteNoCupom.
     * @example
     * // Update or create a ClienteNoCupom
     * const clienteNoCupom = await prisma.clienteNoCupom.upsert({
     *   create: {
     *     // ... data to create a ClienteNoCupom
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClienteNoCupom we want to update
     *   }
     * })
     */
    upsert<T extends ClienteNoCupomUpsertArgs>(args: SelectSubset<T, ClienteNoCupomUpsertArgs<ExtArgs>>): Prisma__ClienteNoCupomClient<$Result.GetResult<Prisma.$ClienteNoCupomPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ClienteNoCupoms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomCountArgs} args - Arguments to filter ClienteNoCupoms to count.
     * @example
     * // Count the number of ClienteNoCupoms
     * const count = await prisma.clienteNoCupom.count({
     *   where: {
     *     // ... the filter for the ClienteNoCupoms we want to count
     *   }
     * })
    **/
    count<T extends ClienteNoCupomCountArgs>(
      args?: Subset<T, ClienteNoCupomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteNoCupomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClienteNoCupom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteNoCupomAggregateArgs>(args: Subset<T, ClienteNoCupomAggregateArgs>): Prisma.PrismaPromise<GetClienteNoCupomAggregateType<T>>

    /**
     * Group by ClienteNoCupom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteNoCupomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteNoCupomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteNoCupomGroupByArgs['orderBy'] }
        : { orderBy?: ClienteNoCupomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteNoCupomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteNoCupomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClienteNoCupom model
   */
  readonly fields: ClienteNoCupomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClienteNoCupom.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteNoCupomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cupom<T extends CupomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CupomDefaultArgs<ExtArgs>>): Prisma__CupomClient<$Result.GetResult<Prisma.$CupomPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClienteNoCupom model
   */ 
  interface ClienteNoCupomFieldRefs {
    readonly clienteId: FieldRef<"ClienteNoCupom", 'Int'>
    readonly cupomId: FieldRef<"ClienteNoCupom", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ClienteNoCupom findUnique
   */
  export type ClienteNoCupomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter, which ClienteNoCupom to fetch.
     */
    where: ClienteNoCupomWhereUniqueInput
  }

  /**
   * ClienteNoCupom findUniqueOrThrow
   */
  export type ClienteNoCupomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter, which ClienteNoCupom to fetch.
     */
    where: ClienteNoCupomWhereUniqueInput
  }

  /**
   * ClienteNoCupom findFirst
   */
  export type ClienteNoCupomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter, which ClienteNoCupom to fetch.
     */
    where?: ClienteNoCupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteNoCupoms to fetch.
     */
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClienteNoCupoms.
     */
    cursor?: ClienteNoCupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteNoCupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteNoCupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClienteNoCupoms.
     */
    distinct?: ClienteNoCupomScalarFieldEnum | ClienteNoCupomScalarFieldEnum[]
  }

  /**
   * ClienteNoCupom findFirstOrThrow
   */
  export type ClienteNoCupomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter, which ClienteNoCupom to fetch.
     */
    where?: ClienteNoCupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteNoCupoms to fetch.
     */
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClienteNoCupoms.
     */
    cursor?: ClienteNoCupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteNoCupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteNoCupoms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClienteNoCupoms.
     */
    distinct?: ClienteNoCupomScalarFieldEnum | ClienteNoCupomScalarFieldEnum[]
  }

  /**
   * ClienteNoCupom findMany
   */
  export type ClienteNoCupomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter, which ClienteNoCupoms to fetch.
     */
    where?: ClienteNoCupomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteNoCupoms to fetch.
     */
    orderBy?: ClienteNoCupomOrderByWithRelationInput | ClienteNoCupomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClienteNoCupoms.
     */
    cursor?: ClienteNoCupomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteNoCupoms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteNoCupoms.
     */
    skip?: number
    distinct?: ClienteNoCupomScalarFieldEnum | ClienteNoCupomScalarFieldEnum[]
  }

  /**
   * ClienteNoCupom create
   */
  export type ClienteNoCupomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * The data needed to create a ClienteNoCupom.
     */
    data: XOR<ClienteNoCupomCreateInput, ClienteNoCupomUncheckedCreateInput>
  }

  /**
   * ClienteNoCupom createMany
   */
  export type ClienteNoCupomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClienteNoCupoms.
     */
    data: ClienteNoCupomCreateManyInput | ClienteNoCupomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClienteNoCupom createManyAndReturn
   */
  export type ClienteNoCupomCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ClienteNoCupoms.
     */
    data: ClienteNoCupomCreateManyInput | ClienteNoCupomCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClienteNoCupom update
   */
  export type ClienteNoCupomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * The data needed to update a ClienteNoCupom.
     */
    data: XOR<ClienteNoCupomUpdateInput, ClienteNoCupomUncheckedUpdateInput>
    /**
     * Choose, which ClienteNoCupom to update.
     */
    where: ClienteNoCupomWhereUniqueInput
  }

  /**
   * ClienteNoCupom updateMany
   */
  export type ClienteNoCupomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClienteNoCupoms.
     */
    data: XOR<ClienteNoCupomUpdateManyMutationInput, ClienteNoCupomUncheckedUpdateManyInput>
    /**
     * Filter which ClienteNoCupoms to update
     */
    where?: ClienteNoCupomWhereInput
  }

  /**
   * ClienteNoCupom upsert
   */
  export type ClienteNoCupomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * The filter to search for the ClienteNoCupom to update in case it exists.
     */
    where: ClienteNoCupomWhereUniqueInput
    /**
     * In case the ClienteNoCupom found by the `where` argument doesn't exist, create a new ClienteNoCupom with this data.
     */
    create: XOR<ClienteNoCupomCreateInput, ClienteNoCupomUncheckedCreateInput>
    /**
     * In case the ClienteNoCupom was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteNoCupomUpdateInput, ClienteNoCupomUncheckedUpdateInput>
  }

  /**
   * ClienteNoCupom delete
   */
  export type ClienteNoCupomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
    /**
     * Filter which ClienteNoCupom to delete.
     */
    where: ClienteNoCupomWhereUniqueInput
  }

  /**
   * ClienteNoCupom deleteMany
   */
  export type ClienteNoCupomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClienteNoCupoms to delete
     */
    where?: ClienteNoCupomWhereInput
  }

  /**
   * ClienteNoCupom without action
   */
  export type ClienteNoCupomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteNoCupom
     */
    select?: ClienteNoCupomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteNoCupomInclude<ExtArgs> | null
  }


  /**
   * Model Favorito
   */

  export type AggregateFavorito = {
    _count: FavoritoCountAggregateOutputType | null
    _avg: FavoritoAvgAggregateOutputType | null
    _sum: FavoritoSumAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  export type FavoritoAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    hotelId: number | null
  }

  export type FavoritoSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    hotelId: number | null
  }

  export type FavoritoMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    hotelId: number | null
  }

  export type FavoritoMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    hotelId: number | null
  }

  export type FavoritoCountAggregateOutputType = {
    id: number
    clienteId: number
    hotelId: number
    _all: number
  }


  export type FavoritoAvgAggregateInputType = {
    id?: true
    clienteId?: true
    hotelId?: true
  }

  export type FavoritoSumAggregateInputType = {
    id?: true
    clienteId?: true
    hotelId?: true
  }

  export type FavoritoMinAggregateInputType = {
    id?: true
    clienteId?: true
    hotelId?: true
  }

  export type FavoritoMaxAggregateInputType = {
    id?: true
    clienteId?: true
    hotelId?: true
  }

  export type FavoritoCountAggregateInputType = {
    id?: true
    clienteId?: true
    hotelId?: true
    _all?: true
  }

  export type FavoritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorito to aggregate.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoritos
    **/
    _count?: true | FavoritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoritoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoritoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritoMaxAggregateInputType
  }

  export type GetFavoritoAggregateType<T extends FavoritoAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorito[P]>
      : GetScalarType<T[P], AggregateFavorito[P]>
  }




  export type FavoritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithAggregationInput | FavoritoOrderByWithAggregationInput[]
    by: FavoritoScalarFieldEnum[] | FavoritoScalarFieldEnum
    having?: FavoritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritoCountAggregateInputType | true
    _avg?: FavoritoAvgAggregateInputType
    _sum?: FavoritoSumAggregateInputType
    _min?: FavoritoMinAggregateInputType
    _max?: FavoritoMaxAggregateInputType
  }

  export type FavoritoGroupByOutputType = {
    id: number
    clienteId: number
    hotelId: number
    _count: FavoritoCountAggregateOutputType | null
    _avg: FavoritoAvgAggregateOutputType | null
    _sum: FavoritoSumAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  type GetFavoritoGroupByPayload<T extends FavoritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
        }
      >
    >


  export type FavoritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    hotelId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    hotelId?: boolean
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectScalar = {
    id?: boolean
    clienteId?: boolean
    hotelId?: boolean
  }

  export type FavoritoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }
  export type FavoritoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }

  export type $FavoritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorito"
    objects: {
      cliente: Prisma.$ClientPayload<ExtArgs>
      hotel: Prisma.$HotelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      hotelId: number
    }, ExtArgs["result"]["favorito"]>
    composites: {}
  }

  type FavoritoGetPayload<S extends boolean | null | undefined | FavoritoDefaultArgs> = $Result.GetResult<Prisma.$FavoritoPayload, S>

  type FavoritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FavoritoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoritoCountAggregateInputType | true
    }

  export interface FavoritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorito'], meta: { name: 'Favorito' } }
    /**
     * Find zero or one Favorito that matches the filter.
     * @param {FavoritoFindUniqueArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoritoFindUniqueArgs>(args: SelectSubset<T, FavoritoFindUniqueArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Favorito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FavoritoFindUniqueOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoritoFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Favorito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoritoFindFirstArgs>(args?: SelectSubset<T, FavoritoFindFirstArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Favorito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoritoFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favorito.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favorito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritoWithIdOnly = await prisma.favorito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoritoFindManyArgs>(args?: SelectSubset<T, FavoritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Favorito.
     * @param {FavoritoCreateArgs} args - Arguments to create a Favorito.
     * @example
     * // Create one Favorito
     * const Favorito = await prisma.favorito.create({
     *   data: {
     *     // ... data to create a Favorito
     *   }
     * })
     * 
     */
    create<T extends FavoritoCreateArgs>(args: SelectSubset<T, FavoritoCreateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Favoritos.
     * @param {FavoritoCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoritoCreateManyArgs>(args?: SelectSubset<T, FavoritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {FavoritoCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritoWithIdOnly = await prisma.favorito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoritoCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Favorito.
     * @param {FavoritoDeleteArgs} args - Arguments to delete one Favorito.
     * @example
     * // Delete one Favorito
     * const Favorito = await prisma.favorito.delete({
     *   where: {
     *     // ... filter to delete one Favorito
     *   }
     * })
     * 
     */
    delete<T extends FavoritoDeleteArgs>(args: SelectSubset<T, FavoritoDeleteArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Favorito.
     * @param {FavoritoUpdateArgs} args - Arguments to update one Favorito.
     * @example
     * // Update one Favorito
     * const favorito = await prisma.favorito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoritoUpdateArgs>(args: SelectSubset<T, FavoritoUpdateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Favoritos.
     * @param {FavoritoDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favorito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoritoDeleteManyArgs>(args?: SelectSubset<T, FavoritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favorito = await prisma.favorito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoritoUpdateManyArgs>(args: SelectSubset<T, FavoritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favorito.
     * @param {FavoritoUpsertArgs} args - Arguments to update or create a Favorito.
     * @example
     * // Update or create a Favorito
     * const favorito = await prisma.favorito.upsert({
     *   create: {
     *     // ... data to create a Favorito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorito we want to update
     *   }
     * })
     */
    upsert<T extends FavoritoUpsertArgs>(args: SelectSubset<T, FavoritoUpsertArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favorito.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends FavoritoCountArgs>(
      args?: Subset<T, FavoritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritoAggregateArgs>(args: Subset<T, FavoritoAggregateArgs>): Prisma.PrismaPromise<GetFavoritoAggregateType<T>>

    /**
     * Group by Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoritoGroupByArgs['orderBy'] }
        : { orderBy?: FavoritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorito model
   */
  readonly fields: FavoritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorito model
   */ 
  interface FavoritoFieldRefs {
    readonly id: FieldRef<"Favorito", 'Int'>
    readonly clienteId: FieldRef<"Favorito", 'Int'>
    readonly hotelId: FieldRef<"Favorito", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Favorito findUnique
   */
  export type FavoritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findUniqueOrThrow
   */
  export type FavoritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findFirst
   */
  export type FavoritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findFirstOrThrow
   */
  export type FavoritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findMany
   */
  export type FavoritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito create
   */
  export type FavoritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorito.
     */
    data: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
  }

  /**
   * Favorito createMany
   */
  export type FavoritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorito createManyAndReturn
   */
  export type FavoritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorito update
   */
  export type FavoritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorito.
     */
    data: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
    /**
     * Choose, which Favorito to update.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito updateMany
   */
  export type FavoritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritoWhereInput
  }

  /**
   * Favorito upsert
   */
  export type FavoritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorito to update in case it exists.
     */
    where: FavoritoWhereUniqueInput
    /**
     * In case the Favorito found by the `where` argument doesn't exist, create a new Favorito with this data.
     */
    create: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
    /**
     * In case the Favorito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
  }

  /**
   * Favorito delete
   */
  export type FavoritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter which Favorito to delete.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito deleteMany
   */
  export type FavoritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to delete
     */
    where?: FavoritoWhereInput
  }

  /**
   * Favorito without action
   */
  export type FavoritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
  }


  /**
   * Model ComodidadeAcomodacao
   */

  export type AggregateComodidadeAcomodacao = {
    _count: ComodidadeAcomodacaoCountAggregateOutputType | null
    _avg: ComodidadeAcomodacaoAvgAggregateOutputType | null
    _sum: ComodidadeAcomodacaoSumAggregateOutputType | null
    _min: ComodidadeAcomodacaoMinAggregateOutputType | null
    _max: ComodidadeAcomodacaoMaxAggregateOutputType | null
  }

  export type ComodidadeAcomodacaoAvgAggregateOutputType = {
    id: number | null
  }

  export type ComodidadeAcomodacaoSumAggregateOutputType = {
    id: number | null
  }

  export type ComodidadeAcomodacaoMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type ComodidadeAcomodacaoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type ComodidadeAcomodacaoCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type ComodidadeAcomodacaoAvgAggregateInputType = {
    id?: true
  }

  export type ComodidadeAcomodacaoSumAggregateInputType = {
    id?: true
  }

  export type ComodidadeAcomodacaoMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type ComodidadeAcomodacaoMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type ComodidadeAcomodacaoCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type ComodidadeAcomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeAcomodacao to aggregate.
     */
    where?: ComodidadeAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeAcomodacaos to fetch.
     */
    orderBy?: ComodidadeAcomodacaoOrderByWithRelationInput | ComodidadeAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComodidadeAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComodidadeAcomodacaos
    **/
    _count?: true | ComodidadeAcomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComodidadeAcomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComodidadeAcomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComodidadeAcomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComodidadeAcomodacaoMaxAggregateInputType
  }

  export type GetComodidadeAcomodacaoAggregateType<T extends ComodidadeAcomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateComodidadeAcomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComodidadeAcomodacao[P]>
      : GetScalarType<T[P], AggregateComodidadeAcomodacao[P]>
  }




  export type ComodidadeAcomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeAcomodacaoWhereInput
    orderBy?: ComodidadeAcomodacaoOrderByWithAggregationInput | ComodidadeAcomodacaoOrderByWithAggregationInput[]
    by: ComodidadeAcomodacaoScalarFieldEnum[] | ComodidadeAcomodacaoScalarFieldEnum
    having?: ComodidadeAcomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComodidadeAcomodacaoCountAggregateInputType | true
    _avg?: ComodidadeAcomodacaoAvgAggregateInputType
    _sum?: ComodidadeAcomodacaoSumAggregateInputType
    _min?: ComodidadeAcomodacaoMinAggregateInputType
    _max?: ComodidadeAcomodacaoMaxAggregateInputType
  }

  export type ComodidadeAcomodacaoGroupByOutputType = {
    id: number
    nome: string
    _count: ComodidadeAcomodacaoCountAggregateOutputType | null
    _avg: ComodidadeAcomodacaoAvgAggregateOutputType | null
    _sum: ComodidadeAcomodacaoSumAggregateOutputType | null
    _min: ComodidadeAcomodacaoMinAggregateOutputType | null
    _max: ComodidadeAcomodacaoMaxAggregateOutputType | null
  }

  type GetComodidadeAcomodacaoGroupByPayload<T extends ComodidadeAcomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComodidadeAcomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComodidadeAcomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComodidadeAcomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ComodidadeAcomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type ComodidadeAcomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    Acomodacao?: boolean | ComodidadeAcomodacao$AcomodacaoArgs<ExtArgs>
    _count?: boolean | ComodidadeAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeAcomodacao"]>

  export type ComodidadeAcomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["comodidadeAcomodacao"]>

  export type ComodidadeAcomodacaoSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type ComodidadeAcomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Acomodacao?: boolean | ComodidadeAcomodacao$AcomodacaoArgs<ExtArgs>
    _count?: boolean | ComodidadeAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComodidadeAcomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ComodidadeAcomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComodidadeAcomodacao"
    objects: {
      Acomodacao: Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["comodidadeAcomodacao"]>
    composites: {}
  }

  type ComodidadeAcomodacaoGetPayload<S extends boolean | null | undefined | ComodidadeAcomodacaoDefaultArgs> = $Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload, S>

  type ComodidadeAcomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ComodidadeAcomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ComodidadeAcomodacaoCountAggregateInputType | true
    }

  export interface ComodidadeAcomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComodidadeAcomodacao'], meta: { name: 'ComodidadeAcomodacao' } }
    /**
     * Find zero or one ComodidadeAcomodacao that matches the filter.
     * @param {ComodidadeAcomodacaoFindUniqueArgs} args - Arguments to find a ComodidadeAcomodacao
     * @example
     * // Get one ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComodidadeAcomodacaoFindUniqueArgs>(args: SelectSubset<T, ComodidadeAcomodacaoFindUniqueArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ComodidadeAcomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ComodidadeAcomodacaoFindUniqueOrThrowArgs} args - Arguments to find a ComodidadeAcomodacao
     * @example
     * // Get one ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComodidadeAcomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ComodidadeAcomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ComodidadeAcomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoFindFirstArgs} args - Arguments to find a ComodidadeAcomodacao
     * @example
     * // Get one ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComodidadeAcomodacaoFindFirstArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoFindFirstArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ComodidadeAcomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoFindFirstOrThrowArgs} args - Arguments to find a ComodidadeAcomodacao
     * @example
     * // Get one ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComodidadeAcomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ComodidadeAcomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComodidadeAcomodacaos
     * const comodidadeAcomodacaos = await prisma.comodidadeAcomodacao.findMany()
     * 
     * // Get first 10 ComodidadeAcomodacaos
     * const comodidadeAcomodacaos = await prisma.comodidadeAcomodacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comodidadeAcomodacaoWithIdOnly = await prisma.comodidadeAcomodacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComodidadeAcomodacaoFindManyArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ComodidadeAcomodacao.
     * @param {ComodidadeAcomodacaoCreateArgs} args - Arguments to create a ComodidadeAcomodacao.
     * @example
     * // Create one ComodidadeAcomodacao
     * const ComodidadeAcomodacao = await prisma.comodidadeAcomodacao.create({
     *   data: {
     *     // ... data to create a ComodidadeAcomodacao
     *   }
     * })
     * 
     */
    create<T extends ComodidadeAcomodacaoCreateArgs>(args: SelectSubset<T, ComodidadeAcomodacaoCreateArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ComodidadeAcomodacaos.
     * @param {ComodidadeAcomodacaoCreateManyArgs} args - Arguments to create many ComodidadeAcomodacaos.
     * @example
     * // Create many ComodidadeAcomodacaos
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComodidadeAcomodacaoCreateManyArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComodidadeAcomodacaos and returns the data saved in the database.
     * @param {ComodidadeAcomodacaoCreateManyAndReturnArgs} args - Arguments to create many ComodidadeAcomodacaos.
     * @example
     * // Create many ComodidadeAcomodacaos
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComodidadeAcomodacaos and only return the `id`
     * const comodidadeAcomodacaoWithIdOnly = await prisma.comodidadeAcomodacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComodidadeAcomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ComodidadeAcomodacao.
     * @param {ComodidadeAcomodacaoDeleteArgs} args - Arguments to delete one ComodidadeAcomodacao.
     * @example
     * // Delete one ComodidadeAcomodacao
     * const ComodidadeAcomodacao = await prisma.comodidadeAcomodacao.delete({
     *   where: {
     *     // ... filter to delete one ComodidadeAcomodacao
     *   }
     * })
     * 
     */
    delete<T extends ComodidadeAcomodacaoDeleteArgs>(args: SelectSubset<T, ComodidadeAcomodacaoDeleteArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ComodidadeAcomodacao.
     * @param {ComodidadeAcomodacaoUpdateArgs} args - Arguments to update one ComodidadeAcomodacao.
     * @example
     * // Update one ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComodidadeAcomodacaoUpdateArgs>(args: SelectSubset<T, ComodidadeAcomodacaoUpdateArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ComodidadeAcomodacaos.
     * @param {ComodidadeAcomodacaoDeleteManyArgs} args - Arguments to filter ComodidadeAcomodacaos to delete.
     * @example
     * // Delete a few ComodidadeAcomodacaos
     * const { count } = await prisma.comodidadeAcomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComodidadeAcomodacaoDeleteManyArgs>(args?: SelectSubset<T, ComodidadeAcomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComodidadeAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComodidadeAcomodacaos
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComodidadeAcomodacaoUpdateManyArgs>(args: SelectSubset<T, ComodidadeAcomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ComodidadeAcomodacao.
     * @param {ComodidadeAcomodacaoUpsertArgs} args - Arguments to update or create a ComodidadeAcomodacao.
     * @example
     * // Update or create a ComodidadeAcomodacao
     * const comodidadeAcomodacao = await prisma.comodidadeAcomodacao.upsert({
     *   create: {
     *     // ... data to create a ComodidadeAcomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComodidadeAcomodacao we want to update
     *   }
     * })
     */
    upsert<T extends ComodidadeAcomodacaoUpsertArgs>(args: SelectSubset<T, ComodidadeAcomodacaoUpsertArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ComodidadeAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoCountArgs} args - Arguments to filter ComodidadeAcomodacaos to count.
     * @example
     * // Count the number of ComodidadeAcomodacaos
     * const count = await prisma.comodidadeAcomodacao.count({
     *   where: {
     *     // ... the filter for the ComodidadeAcomodacaos we want to count
     *   }
     * })
    **/
    count<T extends ComodidadeAcomodacaoCountArgs>(
      args?: Subset<T, ComodidadeAcomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComodidadeAcomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComodidadeAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComodidadeAcomodacaoAggregateArgs>(args: Subset<T, ComodidadeAcomodacaoAggregateArgs>): Prisma.PrismaPromise<GetComodidadeAcomodacaoAggregateType<T>>

    /**
     * Group by ComodidadeAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeAcomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComodidadeAcomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComodidadeAcomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: ComodidadeAcomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComodidadeAcomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComodidadeAcomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComodidadeAcomodacao model
   */
  readonly fields: ComodidadeAcomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComodidadeAcomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComodidadeAcomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Acomodacao<T extends ComodidadeAcomodacao$AcomodacaoArgs<ExtArgs> = {}>(args?: Subset<T, ComodidadeAcomodacao$AcomodacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComodidadeAcomodacao model
   */ 
  interface ComodidadeAcomodacaoFieldRefs {
    readonly id: FieldRef<"ComodidadeAcomodacao", 'Int'>
    readonly nome: FieldRef<"ComodidadeAcomodacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ComodidadeAcomodacao findUnique
   */
  export type ComodidadeAcomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeAcomodacao to fetch.
     */
    where: ComodidadeAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeAcomodacao findUniqueOrThrow
   */
  export type ComodidadeAcomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeAcomodacao to fetch.
     */
    where: ComodidadeAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeAcomodacao findFirst
   */
  export type ComodidadeAcomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeAcomodacao to fetch.
     */
    where?: ComodidadeAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeAcomodacaos to fetch.
     */
    orderBy?: ComodidadeAcomodacaoOrderByWithRelationInput | ComodidadeAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeAcomodacaos.
     */
    cursor?: ComodidadeAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeAcomodacaos.
     */
    distinct?: ComodidadeAcomodacaoScalarFieldEnum | ComodidadeAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeAcomodacao findFirstOrThrow
   */
  export type ComodidadeAcomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeAcomodacao to fetch.
     */
    where?: ComodidadeAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeAcomodacaos to fetch.
     */
    orderBy?: ComodidadeAcomodacaoOrderByWithRelationInput | ComodidadeAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeAcomodacaos.
     */
    cursor?: ComodidadeAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeAcomodacaos.
     */
    distinct?: ComodidadeAcomodacaoScalarFieldEnum | ComodidadeAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeAcomodacao findMany
   */
  export type ComodidadeAcomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeAcomodacaos to fetch.
     */
    where?: ComodidadeAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeAcomodacaos to fetch.
     */
    orderBy?: ComodidadeAcomodacaoOrderByWithRelationInput | ComodidadeAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComodidadeAcomodacaos.
     */
    cursor?: ComodidadeAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeAcomodacaos.
     */
    skip?: number
    distinct?: ComodidadeAcomodacaoScalarFieldEnum | ComodidadeAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeAcomodacao create
   */
  export type ComodidadeAcomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ComodidadeAcomodacao.
     */
    data: XOR<ComodidadeAcomodacaoCreateInput, ComodidadeAcomodacaoUncheckedCreateInput>
  }

  /**
   * ComodidadeAcomodacao createMany
   */
  export type ComodidadeAcomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComodidadeAcomodacaos.
     */
    data: ComodidadeAcomodacaoCreateManyInput | ComodidadeAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeAcomodacao createManyAndReturn
   */
  export type ComodidadeAcomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ComodidadeAcomodacaos.
     */
    data: ComodidadeAcomodacaoCreateManyInput | ComodidadeAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeAcomodacao update
   */
  export type ComodidadeAcomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ComodidadeAcomodacao.
     */
    data: XOR<ComodidadeAcomodacaoUpdateInput, ComodidadeAcomodacaoUncheckedUpdateInput>
    /**
     * Choose, which ComodidadeAcomodacao to update.
     */
    where: ComodidadeAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeAcomodacao updateMany
   */
  export type ComodidadeAcomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComodidadeAcomodacaos.
     */
    data: XOR<ComodidadeAcomodacaoUpdateManyMutationInput, ComodidadeAcomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which ComodidadeAcomodacaos to update
     */
    where?: ComodidadeAcomodacaoWhereInput
  }

  /**
   * ComodidadeAcomodacao upsert
   */
  export type ComodidadeAcomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ComodidadeAcomodacao to update in case it exists.
     */
    where: ComodidadeAcomodacaoWhereUniqueInput
    /**
     * In case the ComodidadeAcomodacao found by the `where` argument doesn't exist, create a new ComodidadeAcomodacao with this data.
     */
    create: XOR<ComodidadeAcomodacaoCreateInput, ComodidadeAcomodacaoUncheckedCreateInput>
    /**
     * In case the ComodidadeAcomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComodidadeAcomodacaoUpdateInput, ComodidadeAcomodacaoUncheckedUpdateInput>
  }

  /**
   * ComodidadeAcomodacao delete
   */
  export type ComodidadeAcomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter which ComodidadeAcomodacao to delete.
     */
    where: ComodidadeAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeAcomodacao deleteMany
   */
  export type ComodidadeAcomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeAcomodacaos to delete
     */
    where?: ComodidadeAcomodacaoWhereInput
  }

  /**
   * ComodidadeAcomodacao.Acomodacao
   */
  export type ComodidadeAcomodacao$AcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    where?: ComodidadeNaAcomodacaoWhereInput
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComodidadeNaAcomodacaoScalarFieldEnum | ComodidadeNaAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeAcomodacao without action
   */
  export type ComodidadeAcomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeAcomodacao
     */
    select?: ComodidadeAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeAcomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model ComodidadeNaAcomodacao
   */

  export type AggregateComodidadeNaAcomodacao = {
    _count: ComodidadeNaAcomodacaoCountAggregateOutputType | null
    _avg: ComodidadeNaAcomodacaoAvgAggregateOutputType | null
    _sum: ComodidadeNaAcomodacaoSumAggregateOutputType | null
    _min: ComodidadeNaAcomodacaoMinAggregateOutputType | null
    _max: ComodidadeNaAcomodacaoMaxAggregateOutputType | null
  }

  export type ComodidadeNaAcomodacaoAvgAggregateOutputType = {
    acomodacaoId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNaAcomodacaoSumAggregateOutputType = {
    acomodacaoId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNaAcomodacaoMinAggregateOutputType = {
    acomodacaoId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNaAcomodacaoMaxAggregateOutputType = {
    acomodacaoId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNaAcomodacaoCountAggregateOutputType = {
    acomodacaoId: number
    comodidadeId: number
    _all: number
  }


  export type ComodidadeNaAcomodacaoAvgAggregateInputType = {
    acomodacaoId?: true
    comodidadeId?: true
  }

  export type ComodidadeNaAcomodacaoSumAggregateInputType = {
    acomodacaoId?: true
    comodidadeId?: true
  }

  export type ComodidadeNaAcomodacaoMinAggregateInputType = {
    acomodacaoId?: true
    comodidadeId?: true
  }

  export type ComodidadeNaAcomodacaoMaxAggregateInputType = {
    acomodacaoId?: true
    comodidadeId?: true
  }

  export type ComodidadeNaAcomodacaoCountAggregateInputType = {
    acomodacaoId?: true
    comodidadeId?: true
    _all?: true
  }

  export type ComodidadeNaAcomodacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeNaAcomodacao to aggregate.
     */
    where?: ComodidadeNaAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNaAcomodacaos to fetch.
     */
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNaAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNaAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComodidadeNaAcomodacaos
    **/
    _count?: true | ComodidadeNaAcomodacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComodidadeNaAcomodacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComodidadeNaAcomodacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComodidadeNaAcomodacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComodidadeNaAcomodacaoMaxAggregateInputType
  }

  export type GetComodidadeNaAcomodacaoAggregateType<T extends ComodidadeNaAcomodacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateComodidadeNaAcomodacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComodidadeNaAcomodacao[P]>
      : GetScalarType<T[P], AggregateComodidadeNaAcomodacao[P]>
  }




  export type ComodidadeNaAcomodacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNaAcomodacaoWhereInput
    orderBy?: ComodidadeNaAcomodacaoOrderByWithAggregationInput | ComodidadeNaAcomodacaoOrderByWithAggregationInput[]
    by: ComodidadeNaAcomodacaoScalarFieldEnum[] | ComodidadeNaAcomodacaoScalarFieldEnum
    having?: ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComodidadeNaAcomodacaoCountAggregateInputType | true
    _avg?: ComodidadeNaAcomodacaoAvgAggregateInputType
    _sum?: ComodidadeNaAcomodacaoSumAggregateInputType
    _min?: ComodidadeNaAcomodacaoMinAggregateInputType
    _max?: ComodidadeNaAcomodacaoMaxAggregateInputType
  }

  export type ComodidadeNaAcomodacaoGroupByOutputType = {
    acomodacaoId: number
    comodidadeId: number
    _count: ComodidadeNaAcomodacaoCountAggregateOutputType | null
    _avg: ComodidadeNaAcomodacaoAvgAggregateOutputType | null
    _sum: ComodidadeNaAcomodacaoSumAggregateOutputType | null
    _min: ComodidadeNaAcomodacaoMinAggregateOutputType | null
    _max: ComodidadeNaAcomodacaoMaxAggregateOutputType | null
  }

  type GetComodidadeNaAcomodacaoGroupByPayload<T extends ComodidadeNaAcomodacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComodidadeNaAcomodacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComodidadeNaAcomodacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComodidadeNaAcomodacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ComodidadeNaAcomodacaoGroupByOutputType[P]>
        }
      >
    >


  export type ComodidadeNaAcomodacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    acomodacaoId?: boolean
    comodidadeId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    comodidade?: boolean | ComodidadeAcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeNaAcomodacao"]>

  export type ComodidadeNaAcomodacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    acomodacaoId?: boolean
    comodidadeId?: boolean
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    comodidade?: boolean | ComodidadeAcomodacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeNaAcomodacao"]>

  export type ComodidadeNaAcomodacaoSelectScalar = {
    acomodacaoId?: boolean
    comodidadeId?: boolean
  }

  export type ComodidadeNaAcomodacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    comodidade?: boolean | ComodidadeAcomodacaoDefaultArgs<ExtArgs>
  }
  export type ComodidadeNaAcomodacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    acomodacao?: boolean | AcomodacaoDefaultArgs<ExtArgs>
    comodidade?: boolean | ComodidadeAcomodacaoDefaultArgs<ExtArgs>
  }

  export type $ComodidadeNaAcomodacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComodidadeNaAcomodacao"
    objects: {
      acomodacao: Prisma.$AcomodacaoPayload<ExtArgs>
      comodidade: Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      acomodacaoId: number
      comodidadeId: number
    }, ExtArgs["result"]["comodidadeNaAcomodacao"]>
    composites: {}
  }

  type ComodidadeNaAcomodacaoGetPayload<S extends boolean | null | undefined | ComodidadeNaAcomodacaoDefaultArgs> = $Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload, S>

  type ComodidadeNaAcomodacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ComodidadeNaAcomodacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ComodidadeNaAcomodacaoCountAggregateInputType | true
    }

  export interface ComodidadeNaAcomodacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComodidadeNaAcomodacao'], meta: { name: 'ComodidadeNaAcomodacao' } }
    /**
     * Find zero or one ComodidadeNaAcomodacao that matches the filter.
     * @param {ComodidadeNaAcomodacaoFindUniqueArgs} args - Arguments to find a ComodidadeNaAcomodacao
     * @example
     * // Get one ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComodidadeNaAcomodacaoFindUniqueArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoFindUniqueArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ComodidadeNaAcomodacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ComodidadeNaAcomodacaoFindUniqueOrThrowArgs} args - Arguments to find a ComodidadeNaAcomodacao
     * @example
     * // Get one ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComodidadeNaAcomodacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ComodidadeNaAcomodacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoFindFirstArgs} args - Arguments to find a ComodidadeNaAcomodacao
     * @example
     * // Get one ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComodidadeNaAcomodacaoFindFirstArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoFindFirstArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ComodidadeNaAcomodacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoFindFirstOrThrowArgs} args - Arguments to find a ComodidadeNaAcomodacao
     * @example
     * // Get one ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComodidadeNaAcomodacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ComodidadeNaAcomodacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComodidadeNaAcomodacaos
     * const comodidadeNaAcomodacaos = await prisma.comodidadeNaAcomodacao.findMany()
     * 
     * // Get first 10 ComodidadeNaAcomodacaos
     * const comodidadeNaAcomodacaos = await prisma.comodidadeNaAcomodacao.findMany({ take: 10 })
     * 
     * // Only select the `acomodacaoId`
     * const comodidadeNaAcomodacaoWithAcomodacaoIdOnly = await prisma.comodidadeNaAcomodacao.findMany({ select: { acomodacaoId: true } })
     * 
     */
    findMany<T extends ComodidadeNaAcomodacaoFindManyArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ComodidadeNaAcomodacao.
     * @param {ComodidadeNaAcomodacaoCreateArgs} args - Arguments to create a ComodidadeNaAcomodacao.
     * @example
     * // Create one ComodidadeNaAcomodacao
     * const ComodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.create({
     *   data: {
     *     // ... data to create a ComodidadeNaAcomodacao
     *   }
     * })
     * 
     */
    create<T extends ComodidadeNaAcomodacaoCreateArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoCreateArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ComodidadeNaAcomodacaos.
     * @param {ComodidadeNaAcomodacaoCreateManyArgs} args - Arguments to create many ComodidadeNaAcomodacaos.
     * @example
     * // Create many ComodidadeNaAcomodacaos
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComodidadeNaAcomodacaoCreateManyArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComodidadeNaAcomodacaos and returns the data saved in the database.
     * @param {ComodidadeNaAcomodacaoCreateManyAndReturnArgs} args - Arguments to create many ComodidadeNaAcomodacaos.
     * @example
     * // Create many ComodidadeNaAcomodacaos
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComodidadeNaAcomodacaos and only return the `acomodacaoId`
     * const comodidadeNaAcomodacaoWithAcomodacaoIdOnly = await prisma.comodidadeNaAcomodacao.createManyAndReturn({ 
     *   select: { acomodacaoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComodidadeNaAcomodacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ComodidadeNaAcomodacao.
     * @param {ComodidadeNaAcomodacaoDeleteArgs} args - Arguments to delete one ComodidadeNaAcomodacao.
     * @example
     * // Delete one ComodidadeNaAcomodacao
     * const ComodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.delete({
     *   where: {
     *     // ... filter to delete one ComodidadeNaAcomodacao
     *   }
     * })
     * 
     */
    delete<T extends ComodidadeNaAcomodacaoDeleteArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoDeleteArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ComodidadeNaAcomodacao.
     * @param {ComodidadeNaAcomodacaoUpdateArgs} args - Arguments to update one ComodidadeNaAcomodacao.
     * @example
     * // Update one ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComodidadeNaAcomodacaoUpdateArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoUpdateArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ComodidadeNaAcomodacaos.
     * @param {ComodidadeNaAcomodacaoDeleteManyArgs} args - Arguments to filter ComodidadeNaAcomodacaos to delete.
     * @example
     * // Delete a few ComodidadeNaAcomodacaos
     * const { count } = await prisma.comodidadeNaAcomodacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComodidadeNaAcomodacaoDeleteManyArgs>(args?: SelectSubset<T, ComodidadeNaAcomodacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComodidadeNaAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComodidadeNaAcomodacaos
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComodidadeNaAcomodacaoUpdateManyArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ComodidadeNaAcomodacao.
     * @param {ComodidadeNaAcomodacaoUpsertArgs} args - Arguments to update or create a ComodidadeNaAcomodacao.
     * @example
     * // Update or create a ComodidadeNaAcomodacao
     * const comodidadeNaAcomodacao = await prisma.comodidadeNaAcomodacao.upsert({
     *   create: {
     *     // ... data to create a ComodidadeNaAcomodacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComodidadeNaAcomodacao we want to update
     *   }
     * })
     */
    upsert<T extends ComodidadeNaAcomodacaoUpsertArgs>(args: SelectSubset<T, ComodidadeNaAcomodacaoUpsertArgs<ExtArgs>>): Prisma__ComodidadeNaAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeNaAcomodacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ComodidadeNaAcomodacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoCountArgs} args - Arguments to filter ComodidadeNaAcomodacaos to count.
     * @example
     * // Count the number of ComodidadeNaAcomodacaos
     * const count = await prisma.comodidadeNaAcomodacao.count({
     *   where: {
     *     // ... the filter for the ComodidadeNaAcomodacaos we want to count
     *   }
     * })
    **/
    count<T extends ComodidadeNaAcomodacaoCountArgs>(
      args?: Subset<T, ComodidadeNaAcomodacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComodidadeNaAcomodacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComodidadeNaAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComodidadeNaAcomodacaoAggregateArgs>(args: Subset<T, ComodidadeNaAcomodacaoAggregateArgs>): Prisma.PrismaPromise<GetComodidadeNaAcomodacaoAggregateType<T>>

    /**
     * Group by ComodidadeNaAcomodacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNaAcomodacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComodidadeNaAcomodacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComodidadeNaAcomodacaoGroupByArgs['orderBy'] }
        : { orderBy?: ComodidadeNaAcomodacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComodidadeNaAcomodacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComodidadeNaAcomodacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComodidadeNaAcomodacao model
   */
  readonly fields: ComodidadeNaAcomodacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComodidadeNaAcomodacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComodidadeNaAcomodacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    acomodacao<T extends AcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AcomodacaoDefaultArgs<ExtArgs>>): Prisma__AcomodacaoClient<$Result.GetResult<Prisma.$AcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    comodidade<T extends ComodidadeAcomodacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComodidadeAcomodacaoDefaultArgs<ExtArgs>>): Prisma__ComodidadeAcomodacaoClient<$Result.GetResult<Prisma.$ComodidadeAcomodacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComodidadeNaAcomodacao model
   */ 
  interface ComodidadeNaAcomodacaoFieldRefs {
    readonly acomodacaoId: FieldRef<"ComodidadeNaAcomodacao", 'Int'>
    readonly comodidadeId: FieldRef<"ComodidadeNaAcomodacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ComodidadeNaAcomodacao findUnique
   */
  export type ComodidadeNaAcomodacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNaAcomodacao to fetch.
     */
    where: ComodidadeNaAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeNaAcomodacao findUniqueOrThrow
   */
  export type ComodidadeNaAcomodacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNaAcomodacao to fetch.
     */
    where: ComodidadeNaAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeNaAcomodacao findFirst
   */
  export type ComodidadeNaAcomodacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNaAcomodacao to fetch.
     */
    where?: ComodidadeNaAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNaAcomodacaos to fetch.
     */
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeNaAcomodacaos.
     */
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNaAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNaAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeNaAcomodacaos.
     */
    distinct?: ComodidadeNaAcomodacaoScalarFieldEnum | ComodidadeNaAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeNaAcomodacao findFirstOrThrow
   */
  export type ComodidadeNaAcomodacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNaAcomodacao to fetch.
     */
    where?: ComodidadeNaAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNaAcomodacaos to fetch.
     */
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeNaAcomodacaos.
     */
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNaAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNaAcomodacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeNaAcomodacaos.
     */
    distinct?: ComodidadeNaAcomodacaoScalarFieldEnum | ComodidadeNaAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeNaAcomodacao findMany
   */
  export type ComodidadeNaAcomodacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNaAcomodacaos to fetch.
     */
    where?: ComodidadeNaAcomodacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNaAcomodacaos to fetch.
     */
    orderBy?: ComodidadeNaAcomodacaoOrderByWithRelationInput | ComodidadeNaAcomodacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComodidadeNaAcomodacaos.
     */
    cursor?: ComodidadeNaAcomodacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNaAcomodacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNaAcomodacaos.
     */
    skip?: number
    distinct?: ComodidadeNaAcomodacaoScalarFieldEnum | ComodidadeNaAcomodacaoScalarFieldEnum[]
  }

  /**
   * ComodidadeNaAcomodacao create
   */
  export type ComodidadeNaAcomodacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ComodidadeNaAcomodacao.
     */
    data: XOR<ComodidadeNaAcomodacaoCreateInput, ComodidadeNaAcomodacaoUncheckedCreateInput>
  }

  /**
   * ComodidadeNaAcomodacao createMany
   */
  export type ComodidadeNaAcomodacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComodidadeNaAcomodacaos.
     */
    data: ComodidadeNaAcomodacaoCreateManyInput | ComodidadeNaAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeNaAcomodacao createManyAndReturn
   */
  export type ComodidadeNaAcomodacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ComodidadeNaAcomodacaos.
     */
    data: ComodidadeNaAcomodacaoCreateManyInput | ComodidadeNaAcomodacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComodidadeNaAcomodacao update
   */
  export type ComodidadeNaAcomodacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ComodidadeNaAcomodacao.
     */
    data: XOR<ComodidadeNaAcomodacaoUpdateInput, ComodidadeNaAcomodacaoUncheckedUpdateInput>
    /**
     * Choose, which ComodidadeNaAcomodacao to update.
     */
    where: ComodidadeNaAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeNaAcomodacao updateMany
   */
  export type ComodidadeNaAcomodacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComodidadeNaAcomodacaos.
     */
    data: XOR<ComodidadeNaAcomodacaoUpdateManyMutationInput, ComodidadeNaAcomodacaoUncheckedUpdateManyInput>
    /**
     * Filter which ComodidadeNaAcomodacaos to update
     */
    where?: ComodidadeNaAcomodacaoWhereInput
  }

  /**
   * ComodidadeNaAcomodacao upsert
   */
  export type ComodidadeNaAcomodacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ComodidadeNaAcomodacao to update in case it exists.
     */
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    /**
     * In case the ComodidadeNaAcomodacao found by the `where` argument doesn't exist, create a new ComodidadeNaAcomodacao with this data.
     */
    create: XOR<ComodidadeNaAcomodacaoCreateInput, ComodidadeNaAcomodacaoUncheckedCreateInput>
    /**
     * In case the ComodidadeNaAcomodacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComodidadeNaAcomodacaoUpdateInput, ComodidadeNaAcomodacaoUncheckedUpdateInput>
  }

  /**
   * ComodidadeNaAcomodacao delete
   */
  export type ComodidadeNaAcomodacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
    /**
     * Filter which ComodidadeNaAcomodacao to delete.
     */
    where: ComodidadeNaAcomodacaoWhereUniqueInput
  }

  /**
   * ComodidadeNaAcomodacao deleteMany
   */
  export type ComodidadeNaAcomodacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeNaAcomodacaos to delete
     */
    where?: ComodidadeNaAcomodacaoWhereInput
  }

  /**
   * ComodidadeNaAcomodacao without action
   */
  export type ComodidadeNaAcomodacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNaAcomodacao
     */
    select?: ComodidadeNaAcomodacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNaAcomodacaoInclude<ExtArgs> | null
  }


  /**
   * Model ComodidadeHotel
   */

  export type AggregateComodidadeHotel = {
    _count: ComodidadeHotelCountAggregateOutputType | null
    _avg: ComodidadeHotelAvgAggregateOutputType | null
    _sum: ComodidadeHotelSumAggregateOutputType | null
    _min: ComodidadeHotelMinAggregateOutputType | null
    _max: ComodidadeHotelMaxAggregateOutputType | null
  }

  export type ComodidadeHotelAvgAggregateOutputType = {
    id: number | null
  }

  export type ComodidadeHotelSumAggregateOutputType = {
    id: number | null
  }

  export type ComodidadeHotelMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type ComodidadeHotelMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type ComodidadeHotelCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type ComodidadeHotelAvgAggregateInputType = {
    id?: true
  }

  export type ComodidadeHotelSumAggregateInputType = {
    id?: true
  }

  export type ComodidadeHotelMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type ComodidadeHotelMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type ComodidadeHotelCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type ComodidadeHotelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeHotel to aggregate.
     */
    where?: ComodidadeHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeHotels to fetch.
     */
    orderBy?: ComodidadeHotelOrderByWithRelationInput | ComodidadeHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComodidadeHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComodidadeHotels
    **/
    _count?: true | ComodidadeHotelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComodidadeHotelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComodidadeHotelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComodidadeHotelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComodidadeHotelMaxAggregateInputType
  }

  export type GetComodidadeHotelAggregateType<T extends ComodidadeHotelAggregateArgs> = {
        [P in keyof T & keyof AggregateComodidadeHotel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComodidadeHotel[P]>
      : GetScalarType<T[P], AggregateComodidadeHotel[P]>
  }




  export type ComodidadeHotelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeHotelWhereInput
    orderBy?: ComodidadeHotelOrderByWithAggregationInput | ComodidadeHotelOrderByWithAggregationInput[]
    by: ComodidadeHotelScalarFieldEnum[] | ComodidadeHotelScalarFieldEnum
    having?: ComodidadeHotelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComodidadeHotelCountAggregateInputType | true
    _avg?: ComodidadeHotelAvgAggregateInputType
    _sum?: ComodidadeHotelSumAggregateInputType
    _min?: ComodidadeHotelMinAggregateInputType
    _max?: ComodidadeHotelMaxAggregateInputType
  }

  export type ComodidadeHotelGroupByOutputType = {
    id: number
    nome: string
    _count: ComodidadeHotelCountAggregateOutputType | null
    _avg: ComodidadeHotelAvgAggregateOutputType | null
    _sum: ComodidadeHotelSumAggregateOutputType | null
    _min: ComodidadeHotelMinAggregateOutputType | null
    _max: ComodidadeHotelMaxAggregateOutputType | null
  }

  type GetComodidadeHotelGroupByPayload<T extends ComodidadeHotelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComodidadeHotelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComodidadeHotelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComodidadeHotelGroupByOutputType[P]>
            : GetScalarType<T[P], ComodidadeHotelGroupByOutputType[P]>
        }
      >
    >


  export type ComodidadeHotelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    Hotel?: boolean | ComodidadeHotel$HotelArgs<ExtArgs>
    _count?: boolean | ComodidadeHotelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeHotel"]>

  export type ComodidadeHotelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["comodidadeHotel"]>

  export type ComodidadeHotelSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type ComodidadeHotelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Hotel?: boolean | ComodidadeHotel$HotelArgs<ExtArgs>
    _count?: boolean | ComodidadeHotelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComodidadeHotelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ComodidadeHotelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComodidadeHotel"
    objects: {
      Hotel: Prisma.$ComodidadeNoHotelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["comodidadeHotel"]>
    composites: {}
  }

  type ComodidadeHotelGetPayload<S extends boolean | null | undefined | ComodidadeHotelDefaultArgs> = $Result.GetResult<Prisma.$ComodidadeHotelPayload, S>

  type ComodidadeHotelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ComodidadeHotelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ComodidadeHotelCountAggregateInputType | true
    }

  export interface ComodidadeHotelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComodidadeHotel'], meta: { name: 'ComodidadeHotel' } }
    /**
     * Find zero or one ComodidadeHotel that matches the filter.
     * @param {ComodidadeHotelFindUniqueArgs} args - Arguments to find a ComodidadeHotel
     * @example
     * // Get one ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComodidadeHotelFindUniqueArgs>(args: SelectSubset<T, ComodidadeHotelFindUniqueArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ComodidadeHotel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ComodidadeHotelFindUniqueOrThrowArgs} args - Arguments to find a ComodidadeHotel
     * @example
     * // Get one ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComodidadeHotelFindUniqueOrThrowArgs>(args: SelectSubset<T, ComodidadeHotelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ComodidadeHotel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelFindFirstArgs} args - Arguments to find a ComodidadeHotel
     * @example
     * // Get one ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComodidadeHotelFindFirstArgs>(args?: SelectSubset<T, ComodidadeHotelFindFirstArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ComodidadeHotel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelFindFirstOrThrowArgs} args - Arguments to find a ComodidadeHotel
     * @example
     * // Get one ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComodidadeHotelFindFirstOrThrowArgs>(args?: SelectSubset<T, ComodidadeHotelFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ComodidadeHotels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComodidadeHotels
     * const comodidadeHotels = await prisma.comodidadeHotel.findMany()
     * 
     * // Get first 10 ComodidadeHotels
     * const comodidadeHotels = await prisma.comodidadeHotel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comodidadeHotelWithIdOnly = await prisma.comodidadeHotel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComodidadeHotelFindManyArgs>(args?: SelectSubset<T, ComodidadeHotelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ComodidadeHotel.
     * @param {ComodidadeHotelCreateArgs} args - Arguments to create a ComodidadeHotel.
     * @example
     * // Create one ComodidadeHotel
     * const ComodidadeHotel = await prisma.comodidadeHotel.create({
     *   data: {
     *     // ... data to create a ComodidadeHotel
     *   }
     * })
     * 
     */
    create<T extends ComodidadeHotelCreateArgs>(args: SelectSubset<T, ComodidadeHotelCreateArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ComodidadeHotels.
     * @param {ComodidadeHotelCreateManyArgs} args - Arguments to create many ComodidadeHotels.
     * @example
     * // Create many ComodidadeHotels
     * const comodidadeHotel = await prisma.comodidadeHotel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComodidadeHotelCreateManyArgs>(args?: SelectSubset<T, ComodidadeHotelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComodidadeHotels and returns the data saved in the database.
     * @param {ComodidadeHotelCreateManyAndReturnArgs} args - Arguments to create many ComodidadeHotels.
     * @example
     * // Create many ComodidadeHotels
     * const comodidadeHotel = await prisma.comodidadeHotel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComodidadeHotels and only return the `id`
     * const comodidadeHotelWithIdOnly = await prisma.comodidadeHotel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComodidadeHotelCreateManyAndReturnArgs>(args?: SelectSubset<T, ComodidadeHotelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ComodidadeHotel.
     * @param {ComodidadeHotelDeleteArgs} args - Arguments to delete one ComodidadeHotel.
     * @example
     * // Delete one ComodidadeHotel
     * const ComodidadeHotel = await prisma.comodidadeHotel.delete({
     *   where: {
     *     // ... filter to delete one ComodidadeHotel
     *   }
     * })
     * 
     */
    delete<T extends ComodidadeHotelDeleteArgs>(args: SelectSubset<T, ComodidadeHotelDeleteArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ComodidadeHotel.
     * @param {ComodidadeHotelUpdateArgs} args - Arguments to update one ComodidadeHotel.
     * @example
     * // Update one ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComodidadeHotelUpdateArgs>(args: SelectSubset<T, ComodidadeHotelUpdateArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ComodidadeHotels.
     * @param {ComodidadeHotelDeleteManyArgs} args - Arguments to filter ComodidadeHotels to delete.
     * @example
     * // Delete a few ComodidadeHotels
     * const { count } = await prisma.comodidadeHotel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComodidadeHotelDeleteManyArgs>(args?: SelectSubset<T, ComodidadeHotelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComodidadeHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComodidadeHotels
     * const comodidadeHotel = await prisma.comodidadeHotel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComodidadeHotelUpdateManyArgs>(args: SelectSubset<T, ComodidadeHotelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ComodidadeHotel.
     * @param {ComodidadeHotelUpsertArgs} args - Arguments to update or create a ComodidadeHotel.
     * @example
     * // Update or create a ComodidadeHotel
     * const comodidadeHotel = await prisma.comodidadeHotel.upsert({
     *   create: {
     *     // ... data to create a ComodidadeHotel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComodidadeHotel we want to update
     *   }
     * })
     */
    upsert<T extends ComodidadeHotelUpsertArgs>(args: SelectSubset<T, ComodidadeHotelUpsertArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ComodidadeHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelCountArgs} args - Arguments to filter ComodidadeHotels to count.
     * @example
     * // Count the number of ComodidadeHotels
     * const count = await prisma.comodidadeHotel.count({
     *   where: {
     *     // ... the filter for the ComodidadeHotels we want to count
     *   }
     * })
    **/
    count<T extends ComodidadeHotelCountArgs>(
      args?: Subset<T, ComodidadeHotelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComodidadeHotelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComodidadeHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComodidadeHotelAggregateArgs>(args: Subset<T, ComodidadeHotelAggregateArgs>): Prisma.PrismaPromise<GetComodidadeHotelAggregateType<T>>

    /**
     * Group by ComodidadeHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeHotelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComodidadeHotelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComodidadeHotelGroupByArgs['orderBy'] }
        : { orderBy?: ComodidadeHotelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComodidadeHotelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComodidadeHotelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComodidadeHotel model
   */
  readonly fields: ComodidadeHotelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComodidadeHotel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComodidadeHotelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Hotel<T extends ComodidadeHotel$HotelArgs<ExtArgs> = {}>(args?: Subset<T, ComodidadeHotel$HotelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComodidadeHotel model
   */ 
  interface ComodidadeHotelFieldRefs {
    readonly id: FieldRef<"ComodidadeHotel", 'Int'>
    readonly nome: FieldRef<"ComodidadeHotel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ComodidadeHotel findUnique
   */
  export type ComodidadeHotelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeHotel to fetch.
     */
    where: ComodidadeHotelWhereUniqueInput
  }

  /**
   * ComodidadeHotel findUniqueOrThrow
   */
  export type ComodidadeHotelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeHotel to fetch.
     */
    where: ComodidadeHotelWhereUniqueInput
  }

  /**
   * ComodidadeHotel findFirst
   */
  export type ComodidadeHotelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeHotel to fetch.
     */
    where?: ComodidadeHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeHotels to fetch.
     */
    orderBy?: ComodidadeHotelOrderByWithRelationInput | ComodidadeHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeHotels.
     */
    cursor?: ComodidadeHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeHotels.
     */
    distinct?: ComodidadeHotelScalarFieldEnum | ComodidadeHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeHotel findFirstOrThrow
   */
  export type ComodidadeHotelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeHotel to fetch.
     */
    where?: ComodidadeHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeHotels to fetch.
     */
    orderBy?: ComodidadeHotelOrderByWithRelationInput | ComodidadeHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeHotels.
     */
    cursor?: ComodidadeHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeHotels.
     */
    distinct?: ComodidadeHotelScalarFieldEnum | ComodidadeHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeHotel findMany
   */
  export type ComodidadeHotelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeHotels to fetch.
     */
    where?: ComodidadeHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeHotels to fetch.
     */
    orderBy?: ComodidadeHotelOrderByWithRelationInput | ComodidadeHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComodidadeHotels.
     */
    cursor?: ComodidadeHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeHotels.
     */
    skip?: number
    distinct?: ComodidadeHotelScalarFieldEnum | ComodidadeHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeHotel create
   */
  export type ComodidadeHotelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * The data needed to create a ComodidadeHotel.
     */
    data: XOR<ComodidadeHotelCreateInput, ComodidadeHotelUncheckedCreateInput>
  }

  /**
   * ComodidadeHotel createMany
   */
  export type ComodidadeHotelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComodidadeHotels.
     */
    data: ComodidadeHotelCreateManyInput | ComodidadeHotelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeHotel createManyAndReturn
   */
  export type ComodidadeHotelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ComodidadeHotels.
     */
    data: ComodidadeHotelCreateManyInput | ComodidadeHotelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeHotel update
   */
  export type ComodidadeHotelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * The data needed to update a ComodidadeHotel.
     */
    data: XOR<ComodidadeHotelUpdateInput, ComodidadeHotelUncheckedUpdateInput>
    /**
     * Choose, which ComodidadeHotel to update.
     */
    where: ComodidadeHotelWhereUniqueInput
  }

  /**
   * ComodidadeHotel updateMany
   */
  export type ComodidadeHotelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComodidadeHotels.
     */
    data: XOR<ComodidadeHotelUpdateManyMutationInput, ComodidadeHotelUncheckedUpdateManyInput>
    /**
     * Filter which ComodidadeHotels to update
     */
    where?: ComodidadeHotelWhereInput
  }

  /**
   * ComodidadeHotel upsert
   */
  export type ComodidadeHotelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * The filter to search for the ComodidadeHotel to update in case it exists.
     */
    where: ComodidadeHotelWhereUniqueInput
    /**
     * In case the ComodidadeHotel found by the `where` argument doesn't exist, create a new ComodidadeHotel with this data.
     */
    create: XOR<ComodidadeHotelCreateInput, ComodidadeHotelUncheckedCreateInput>
    /**
     * In case the ComodidadeHotel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComodidadeHotelUpdateInput, ComodidadeHotelUncheckedUpdateInput>
  }

  /**
   * ComodidadeHotel delete
   */
  export type ComodidadeHotelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
    /**
     * Filter which ComodidadeHotel to delete.
     */
    where: ComodidadeHotelWhereUniqueInput
  }

  /**
   * ComodidadeHotel deleteMany
   */
  export type ComodidadeHotelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeHotels to delete
     */
    where?: ComodidadeHotelWhereInput
  }

  /**
   * ComodidadeHotel.Hotel
   */
  export type ComodidadeHotel$HotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    where?: ComodidadeNoHotelWhereInput
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    cursor?: ComodidadeNoHotelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComodidadeNoHotelScalarFieldEnum | ComodidadeNoHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeHotel without action
   */
  export type ComodidadeHotelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeHotel
     */
    select?: ComodidadeHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeHotelInclude<ExtArgs> | null
  }


  /**
   * Model ComodidadeNoHotel
   */

  export type AggregateComodidadeNoHotel = {
    _count: ComodidadeNoHotelCountAggregateOutputType | null
    _avg: ComodidadeNoHotelAvgAggregateOutputType | null
    _sum: ComodidadeNoHotelSumAggregateOutputType | null
    _min: ComodidadeNoHotelMinAggregateOutputType | null
    _max: ComodidadeNoHotelMaxAggregateOutputType | null
  }

  export type ComodidadeNoHotelAvgAggregateOutputType = {
    hotelId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNoHotelSumAggregateOutputType = {
    hotelId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNoHotelMinAggregateOutputType = {
    hotelId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNoHotelMaxAggregateOutputType = {
    hotelId: number | null
    comodidadeId: number | null
  }

  export type ComodidadeNoHotelCountAggregateOutputType = {
    hotelId: number
    comodidadeId: number
    _all: number
  }


  export type ComodidadeNoHotelAvgAggregateInputType = {
    hotelId?: true
    comodidadeId?: true
  }

  export type ComodidadeNoHotelSumAggregateInputType = {
    hotelId?: true
    comodidadeId?: true
  }

  export type ComodidadeNoHotelMinAggregateInputType = {
    hotelId?: true
    comodidadeId?: true
  }

  export type ComodidadeNoHotelMaxAggregateInputType = {
    hotelId?: true
    comodidadeId?: true
  }

  export type ComodidadeNoHotelCountAggregateInputType = {
    hotelId?: true
    comodidadeId?: true
    _all?: true
  }

  export type ComodidadeNoHotelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeNoHotel to aggregate.
     */
    where?: ComodidadeNoHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNoHotels to fetch.
     */
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComodidadeNoHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNoHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNoHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComodidadeNoHotels
    **/
    _count?: true | ComodidadeNoHotelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComodidadeNoHotelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComodidadeNoHotelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComodidadeNoHotelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComodidadeNoHotelMaxAggregateInputType
  }

  export type GetComodidadeNoHotelAggregateType<T extends ComodidadeNoHotelAggregateArgs> = {
        [P in keyof T & keyof AggregateComodidadeNoHotel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComodidadeNoHotel[P]>
      : GetScalarType<T[P], AggregateComodidadeNoHotel[P]>
  }




  export type ComodidadeNoHotelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComodidadeNoHotelWhereInput
    orderBy?: ComodidadeNoHotelOrderByWithAggregationInput | ComodidadeNoHotelOrderByWithAggregationInput[]
    by: ComodidadeNoHotelScalarFieldEnum[] | ComodidadeNoHotelScalarFieldEnum
    having?: ComodidadeNoHotelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComodidadeNoHotelCountAggregateInputType | true
    _avg?: ComodidadeNoHotelAvgAggregateInputType
    _sum?: ComodidadeNoHotelSumAggregateInputType
    _min?: ComodidadeNoHotelMinAggregateInputType
    _max?: ComodidadeNoHotelMaxAggregateInputType
  }

  export type ComodidadeNoHotelGroupByOutputType = {
    hotelId: number
    comodidadeId: number
    _count: ComodidadeNoHotelCountAggregateOutputType | null
    _avg: ComodidadeNoHotelAvgAggregateOutputType | null
    _sum: ComodidadeNoHotelSumAggregateOutputType | null
    _min: ComodidadeNoHotelMinAggregateOutputType | null
    _max: ComodidadeNoHotelMaxAggregateOutputType | null
  }

  type GetComodidadeNoHotelGroupByPayload<T extends ComodidadeNoHotelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComodidadeNoHotelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComodidadeNoHotelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComodidadeNoHotelGroupByOutputType[P]>
            : GetScalarType<T[P], ComodidadeNoHotelGroupByOutputType[P]>
        }
      >
    >


  export type ComodidadeNoHotelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hotelId?: boolean
    comodidadeId?: boolean
    comodidade?: boolean | ComodidadeHotelDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeNoHotel"]>

  export type ComodidadeNoHotelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hotelId?: boolean
    comodidadeId?: boolean
    comodidade?: boolean | ComodidadeHotelDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comodidadeNoHotel"]>

  export type ComodidadeNoHotelSelectScalar = {
    hotelId?: boolean
    comodidadeId?: boolean
  }

  export type ComodidadeNoHotelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comodidade?: boolean | ComodidadeHotelDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }
  export type ComodidadeNoHotelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comodidade?: boolean | ComodidadeHotelDefaultArgs<ExtArgs>
    hotel?: boolean | HotelDefaultArgs<ExtArgs>
  }

  export type $ComodidadeNoHotelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComodidadeNoHotel"
    objects: {
      comodidade: Prisma.$ComodidadeHotelPayload<ExtArgs>
      hotel: Prisma.$HotelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      hotelId: number
      comodidadeId: number
    }, ExtArgs["result"]["comodidadeNoHotel"]>
    composites: {}
  }

  type ComodidadeNoHotelGetPayload<S extends boolean | null | undefined | ComodidadeNoHotelDefaultArgs> = $Result.GetResult<Prisma.$ComodidadeNoHotelPayload, S>

  type ComodidadeNoHotelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ComodidadeNoHotelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ComodidadeNoHotelCountAggregateInputType | true
    }

  export interface ComodidadeNoHotelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComodidadeNoHotel'], meta: { name: 'ComodidadeNoHotel' } }
    /**
     * Find zero or one ComodidadeNoHotel that matches the filter.
     * @param {ComodidadeNoHotelFindUniqueArgs} args - Arguments to find a ComodidadeNoHotel
     * @example
     * // Get one ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComodidadeNoHotelFindUniqueArgs>(args: SelectSubset<T, ComodidadeNoHotelFindUniqueArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ComodidadeNoHotel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ComodidadeNoHotelFindUniqueOrThrowArgs} args - Arguments to find a ComodidadeNoHotel
     * @example
     * // Get one ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComodidadeNoHotelFindUniqueOrThrowArgs>(args: SelectSubset<T, ComodidadeNoHotelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ComodidadeNoHotel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelFindFirstArgs} args - Arguments to find a ComodidadeNoHotel
     * @example
     * // Get one ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComodidadeNoHotelFindFirstArgs>(args?: SelectSubset<T, ComodidadeNoHotelFindFirstArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ComodidadeNoHotel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelFindFirstOrThrowArgs} args - Arguments to find a ComodidadeNoHotel
     * @example
     * // Get one ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComodidadeNoHotelFindFirstOrThrowArgs>(args?: SelectSubset<T, ComodidadeNoHotelFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ComodidadeNoHotels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComodidadeNoHotels
     * const comodidadeNoHotels = await prisma.comodidadeNoHotel.findMany()
     * 
     * // Get first 10 ComodidadeNoHotels
     * const comodidadeNoHotels = await prisma.comodidadeNoHotel.findMany({ take: 10 })
     * 
     * // Only select the `hotelId`
     * const comodidadeNoHotelWithHotelIdOnly = await prisma.comodidadeNoHotel.findMany({ select: { hotelId: true } })
     * 
     */
    findMany<T extends ComodidadeNoHotelFindManyArgs>(args?: SelectSubset<T, ComodidadeNoHotelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ComodidadeNoHotel.
     * @param {ComodidadeNoHotelCreateArgs} args - Arguments to create a ComodidadeNoHotel.
     * @example
     * // Create one ComodidadeNoHotel
     * const ComodidadeNoHotel = await prisma.comodidadeNoHotel.create({
     *   data: {
     *     // ... data to create a ComodidadeNoHotel
     *   }
     * })
     * 
     */
    create<T extends ComodidadeNoHotelCreateArgs>(args: SelectSubset<T, ComodidadeNoHotelCreateArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ComodidadeNoHotels.
     * @param {ComodidadeNoHotelCreateManyArgs} args - Arguments to create many ComodidadeNoHotels.
     * @example
     * // Create many ComodidadeNoHotels
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComodidadeNoHotelCreateManyArgs>(args?: SelectSubset<T, ComodidadeNoHotelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComodidadeNoHotels and returns the data saved in the database.
     * @param {ComodidadeNoHotelCreateManyAndReturnArgs} args - Arguments to create many ComodidadeNoHotels.
     * @example
     * // Create many ComodidadeNoHotels
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComodidadeNoHotels and only return the `hotelId`
     * const comodidadeNoHotelWithHotelIdOnly = await prisma.comodidadeNoHotel.createManyAndReturn({ 
     *   select: { hotelId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComodidadeNoHotelCreateManyAndReturnArgs>(args?: SelectSubset<T, ComodidadeNoHotelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ComodidadeNoHotel.
     * @param {ComodidadeNoHotelDeleteArgs} args - Arguments to delete one ComodidadeNoHotel.
     * @example
     * // Delete one ComodidadeNoHotel
     * const ComodidadeNoHotel = await prisma.comodidadeNoHotel.delete({
     *   where: {
     *     // ... filter to delete one ComodidadeNoHotel
     *   }
     * })
     * 
     */
    delete<T extends ComodidadeNoHotelDeleteArgs>(args: SelectSubset<T, ComodidadeNoHotelDeleteArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ComodidadeNoHotel.
     * @param {ComodidadeNoHotelUpdateArgs} args - Arguments to update one ComodidadeNoHotel.
     * @example
     * // Update one ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComodidadeNoHotelUpdateArgs>(args: SelectSubset<T, ComodidadeNoHotelUpdateArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ComodidadeNoHotels.
     * @param {ComodidadeNoHotelDeleteManyArgs} args - Arguments to filter ComodidadeNoHotels to delete.
     * @example
     * // Delete a few ComodidadeNoHotels
     * const { count } = await prisma.comodidadeNoHotel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComodidadeNoHotelDeleteManyArgs>(args?: SelectSubset<T, ComodidadeNoHotelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComodidadeNoHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComodidadeNoHotels
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComodidadeNoHotelUpdateManyArgs>(args: SelectSubset<T, ComodidadeNoHotelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ComodidadeNoHotel.
     * @param {ComodidadeNoHotelUpsertArgs} args - Arguments to update or create a ComodidadeNoHotel.
     * @example
     * // Update or create a ComodidadeNoHotel
     * const comodidadeNoHotel = await prisma.comodidadeNoHotel.upsert({
     *   create: {
     *     // ... data to create a ComodidadeNoHotel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComodidadeNoHotel we want to update
     *   }
     * })
     */
    upsert<T extends ComodidadeNoHotelUpsertArgs>(args: SelectSubset<T, ComodidadeNoHotelUpsertArgs<ExtArgs>>): Prisma__ComodidadeNoHotelClient<$Result.GetResult<Prisma.$ComodidadeNoHotelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ComodidadeNoHotels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelCountArgs} args - Arguments to filter ComodidadeNoHotels to count.
     * @example
     * // Count the number of ComodidadeNoHotels
     * const count = await prisma.comodidadeNoHotel.count({
     *   where: {
     *     // ... the filter for the ComodidadeNoHotels we want to count
     *   }
     * })
    **/
    count<T extends ComodidadeNoHotelCountArgs>(
      args?: Subset<T, ComodidadeNoHotelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComodidadeNoHotelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComodidadeNoHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComodidadeNoHotelAggregateArgs>(args: Subset<T, ComodidadeNoHotelAggregateArgs>): Prisma.PrismaPromise<GetComodidadeNoHotelAggregateType<T>>

    /**
     * Group by ComodidadeNoHotel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComodidadeNoHotelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComodidadeNoHotelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComodidadeNoHotelGroupByArgs['orderBy'] }
        : { orderBy?: ComodidadeNoHotelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComodidadeNoHotelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComodidadeNoHotelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComodidadeNoHotel model
   */
  readonly fields: ComodidadeNoHotelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComodidadeNoHotel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComodidadeNoHotelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comodidade<T extends ComodidadeHotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComodidadeHotelDefaultArgs<ExtArgs>>): Prisma__ComodidadeHotelClient<$Result.GetResult<Prisma.$ComodidadeHotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    hotel<T extends HotelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HotelDefaultArgs<ExtArgs>>): Prisma__HotelClient<$Result.GetResult<Prisma.$HotelPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComodidadeNoHotel model
   */ 
  interface ComodidadeNoHotelFieldRefs {
    readonly hotelId: FieldRef<"ComodidadeNoHotel", 'Int'>
    readonly comodidadeId: FieldRef<"ComodidadeNoHotel", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ComodidadeNoHotel findUnique
   */
  export type ComodidadeNoHotelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNoHotel to fetch.
     */
    where: ComodidadeNoHotelWhereUniqueInput
  }

  /**
   * ComodidadeNoHotel findUniqueOrThrow
   */
  export type ComodidadeNoHotelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNoHotel to fetch.
     */
    where: ComodidadeNoHotelWhereUniqueInput
  }

  /**
   * ComodidadeNoHotel findFirst
   */
  export type ComodidadeNoHotelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNoHotel to fetch.
     */
    where?: ComodidadeNoHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNoHotels to fetch.
     */
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeNoHotels.
     */
    cursor?: ComodidadeNoHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNoHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNoHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeNoHotels.
     */
    distinct?: ComodidadeNoHotelScalarFieldEnum | ComodidadeNoHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeNoHotel findFirstOrThrow
   */
  export type ComodidadeNoHotelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNoHotel to fetch.
     */
    where?: ComodidadeNoHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNoHotels to fetch.
     */
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComodidadeNoHotels.
     */
    cursor?: ComodidadeNoHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNoHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNoHotels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComodidadeNoHotels.
     */
    distinct?: ComodidadeNoHotelScalarFieldEnum | ComodidadeNoHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeNoHotel findMany
   */
  export type ComodidadeNoHotelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter, which ComodidadeNoHotels to fetch.
     */
    where?: ComodidadeNoHotelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComodidadeNoHotels to fetch.
     */
    orderBy?: ComodidadeNoHotelOrderByWithRelationInput | ComodidadeNoHotelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComodidadeNoHotels.
     */
    cursor?: ComodidadeNoHotelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComodidadeNoHotels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComodidadeNoHotels.
     */
    skip?: number
    distinct?: ComodidadeNoHotelScalarFieldEnum | ComodidadeNoHotelScalarFieldEnum[]
  }

  /**
   * ComodidadeNoHotel create
   */
  export type ComodidadeNoHotelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * The data needed to create a ComodidadeNoHotel.
     */
    data: XOR<ComodidadeNoHotelCreateInput, ComodidadeNoHotelUncheckedCreateInput>
  }

  /**
   * ComodidadeNoHotel createMany
   */
  export type ComodidadeNoHotelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComodidadeNoHotels.
     */
    data: ComodidadeNoHotelCreateManyInput | ComodidadeNoHotelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComodidadeNoHotel createManyAndReturn
   */
  export type ComodidadeNoHotelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ComodidadeNoHotels.
     */
    data: ComodidadeNoHotelCreateManyInput | ComodidadeNoHotelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComodidadeNoHotel update
   */
  export type ComodidadeNoHotelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * The data needed to update a ComodidadeNoHotel.
     */
    data: XOR<ComodidadeNoHotelUpdateInput, ComodidadeNoHotelUncheckedUpdateInput>
    /**
     * Choose, which ComodidadeNoHotel to update.
     */
    where: ComodidadeNoHotelWhereUniqueInput
  }

  /**
   * ComodidadeNoHotel updateMany
   */
  export type ComodidadeNoHotelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComodidadeNoHotels.
     */
    data: XOR<ComodidadeNoHotelUpdateManyMutationInput, ComodidadeNoHotelUncheckedUpdateManyInput>
    /**
     * Filter which ComodidadeNoHotels to update
     */
    where?: ComodidadeNoHotelWhereInput
  }

  /**
   * ComodidadeNoHotel upsert
   */
  export type ComodidadeNoHotelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * The filter to search for the ComodidadeNoHotel to update in case it exists.
     */
    where: ComodidadeNoHotelWhereUniqueInput
    /**
     * In case the ComodidadeNoHotel found by the `where` argument doesn't exist, create a new ComodidadeNoHotel with this data.
     */
    create: XOR<ComodidadeNoHotelCreateInput, ComodidadeNoHotelUncheckedCreateInput>
    /**
     * In case the ComodidadeNoHotel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComodidadeNoHotelUpdateInput, ComodidadeNoHotelUncheckedUpdateInput>
  }

  /**
   * ComodidadeNoHotel delete
   */
  export type ComodidadeNoHotelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
    /**
     * Filter which ComodidadeNoHotel to delete.
     */
    where: ComodidadeNoHotelWhereUniqueInput
  }

  /**
   * ComodidadeNoHotel deleteMany
   */
  export type ComodidadeNoHotelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComodidadeNoHotels to delete
     */
    where?: ComodidadeNoHotelWhereInput
  }

  /**
   * ComodidadeNoHotel without action
   */
  export type ComodidadeNoHotelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComodidadeNoHotel
     */
    select?: ComodidadeNoHotelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComodidadeNoHotelInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EnderecoScalarFieldEnum: {
    id: 'id',
    numero: 'numero',
    rua: 'rua',
    bairro: 'bairro',
    cidade: 'cidade',
    estado: 'estado',
    pais: 'pais'
  };

  export type EnderecoScalarFieldEnum = (typeof EnderecoScalarFieldEnum)[keyof typeof EnderecoScalarFieldEnum]


  export const FotosHotelScalarFieldEnum: {
    id: 'id',
    url_foto: 'url_foto',
    hotelId: 'hotelId'
  };

  export type FotosHotelScalarFieldEnum = (typeof FotosHotelScalarFieldEnum)[keyof typeof FotosHotelScalarFieldEnum]


  export const HotelScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    telefone: 'telefone',
    sobre: 'sobre',
    descricao: 'descricao',
    visualizacoes: 'visualizacoes',
    informacoes_extras: 'informacoes_extras',
    pet: 'pet',
    enderecoId: 'enderecoId'
  };

  export type HotelScalarFieldEnum = (typeof HotelScalarFieldEnum)[keyof typeof HotelScalarFieldEnum]


  export const AvaliacaoScalarFieldEnum: {
    id: 'id',
    custo_beneficio: 'custo_beneficio',
    atendimento: 'atendimento',
    comida: 'comida',
    limpeza: 'limpeza',
    conforto: 'conforto',
    localizacao: 'localizacao',
    comentario: 'comentario',
    hotelId: 'hotelId',
    clientId: 'clientId'
  };

  export type AvaliacaoScalarFieldEnum = (typeof AvaliacaoScalarFieldEnum)[keyof typeof AvaliacaoScalarFieldEnum]


  export const Descricao_detalhadaScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    sobre: 'sobre',
    banheiro: 'banheiro',
    quarto: 'quarto',
    regiao: 'regiao',
    hotelId: 'hotelId'
  };

  export type Descricao_detalhadaScalarFieldEnum = (typeof Descricao_detalhadaScalarFieldEnum)[keyof typeof Descricao_detalhadaScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    sobrenome: 'sobrenome',
    email: 'email',
    hash_senha: 'hash_senha',
    telefone: 'telefone',
    data_nascimento: 'data_nascimento',
    vip: 'vip'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const ProprietarioScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    tempo_hospedagem: 'tempo_hospedagem',
    avaliacao: 'avaliacao',
    sobre: 'sobre'
  };

  export type ProprietarioScalarFieldEnum = (typeof ProprietarioScalarFieldEnum)[keyof typeof ProprietarioScalarFieldEnum]


  export const FotoUsuarioScalarFieldEnum: {
    id: 'id',
    url_foto: 'url_foto',
    usuarioId: 'usuarioId'
  };

  export type FotoUsuarioScalarFieldEnum = (typeof FotoUsuarioScalarFieldEnum)[keyof typeof FotoUsuarioScalarFieldEnum]


  export const NotificacaoScalarFieldEnum: {
    id: 'id',
    mensagem: 'mensagem',
    titulo: 'titulo',
    usuarioId: 'usuarioId',
    leitura: 'leitura',
    data_criacao: 'data_criacao'
  };

  export type NotificacaoScalarFieldEnum = (typeof NotificacaoScalarFieldEnum)[keyof typeof NotificacaoScalarFieldEnum]


  export const AcomodacaoScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descricao: 'descricao',
    banheiros: 'banheiros',
    quartos: 'quartos',
    camas: 'camas',
    valor_diaria: 'valor_diaria',
    valor_pet: 'valor_pet',
    complemento: 'complemento',
    tipo_acomodacaoId: 'tipo_acomodacaoId',
    hotelId: 'hotelId'
  };

  export type AcomodacaoScalarFieldEnum = (typeof AcomodacaoScalarFieldEnum)[keyof typeof AcomodacaoScalarFieldEnum]


  export const TipoAcomodacaoScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type TipoAcomodacaoScalarFieldEnum = (typeof TipoAcomodacaoScalarFieldEnum)[keyof typeof TipoAcomodacaoScalarFieldEnum]


  export const Foto_AcomodacaoScalarFieldEnum: {
    id: 'id',
    url_foto: 'url_foto',
    acomodacaoId: 'acomodacaoId'
  };

  export type Foto_AcomodacaoScalarFieldEnum = (typeof Foto_AcomodacaoScalarFieldEnum)[keyof typeof Foto_AcomodacaoScalarFieldEnum]


  export const ReservaScalarFieldEnum: {
    id: 'id',
    data_check_in: 'data_check_in',
    data_check_out: 'data_check_out',
    quantidade_pessoas: 'quantidade_pessoas',
    status: 'status',
    aceita_pet: 'aceita_pet',
    clienteId: 'clienteId',
    acomodacaoId: 'acomodacaoId'
  };

  export type ReservaScalarFieldEnum = (typeof ReservaScalarFieldEnum)[keyof typeof ReservaScalarFieldEnum]


  export const Gerenciamento_ganhos_acomodacaoScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor_lucro: 'valor_lucro',
    acomodacaoId: 'acomodacaoId'
  };

  export type Gerenciamento_ganhos_acomodacaoScalarFieldEnum = (typeof Gerenciamento_ganhos_acomodacaoScalarFieldEnum)[keyof typeof Gerenciamento_ganhos_acomodacaoScalarFieldEnum]


  export const Avaliacao_acomodacaoScalarFieldEnum: {
    id: 'id',
    custo_beneficio: 'custo_beneficio',
    atendimento: 'atendimento',
    comida: 'comida',
    limpeza: 'limpeza',
    conforto: 'conforto',
    localizacao: 'localizacao',
    comentario: 'comentario',
    acomodacaoId: 'acomodacaoId',
    clienteId: 'clienteId'
  };

  export type Avaliacao_acomodacaoScalarFieldEnum = (typeof Avaliacao_acomodacaoScalarFieldEnum)[keyof typeof Avaliacao_acomodacaoScalarFieldEnum]


  export const CobrancaScalarFieldEnum: {
    id: 'id',
    data_pagamento: 'data_pagamento',
    data_vencimento: 'data_vencimento',
    valor: 'valor',
    status: 'status',
    reservaId: 'reservaId'
  };

  export type CobrancaScalarFieldEnum = (typeof CobrancaScalarFieldEnum)[keyof typeof CobrancaScalarFieldEnum]


  export const Gerenciamento_ganhosScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor_lucro: 'valor_lucro',
    proprietarioId: 'proprietarioId'
  };

  export type Gerenciamento_ganhosScalarFieldEnum = (typeof Gerenciamento_ganhosScalarFieldEnum)[keyof typeof Gerenciamento_ganhosScalarFieldEnum]


  export const InteresseScalarFieldEnum: {
    id: 'id',
    Nome: 'Nome'
  };

  export type InteresseScalarFieldEnum = (typeof InteresseScalarFieldEnum)[keyof typeof InteresseScalarFieldEnum]


  export const ProprietarioNoInteresseScalarFieldEnum: {
    proprietarioId: 'proprietarioId',
    interesseId: 'interesseId'
  };

  export type ProprietarioNoInteresseScalarFieldEnum = (typeof ProprietarioNoInteresseScalarFieldEnum)[keyof typeof ProprietarioNoInteresseScalarFieldEnum]


  export const CupomScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    desconto: 'desconto',
    data_validade: 'data_validade'
  };

  export type CupomScalarFieldEnum = (typeof CupomScalarFieldEnum)[keyof typeof CupomScalarFieldEnum]


  export const ClienteNoCupomScalarFieldEnum: {
    clienteId: 'clienteId',
    cupomId: 'cupomId'
  };

  export type ClienteNoCupomScalarFieldEnum = (typeof ClienteNoCupomScalarFieldEnum)[keyof typeof ClienteNoCupomScalarFieldEnum]


  export const FavoritoScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    hotelId: 'hotelId'
  };

  export type FavoritoScalarFieldEnum = (typeof FavoritoScalarFieldEnum)[keyof typeof FavoritoScalarFieldEnum]


  export const ComodidadeAcomodacaoScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type ComodidadeAcomodacaoScalarFieldEnum = (typeof ComodidadeAcomodacaoScalarFieldEnum)[keyof typeof ComodidadeAcomodacaoScalarFieldEnum]


  export const ComodidadeNaAcomodacaoScalarFieldEnum: {
    acomodacaoId: 'acomodacaoId',
    comodidadeId: 'comodidadeId'
  };

  export type ComodidadeNaAcomodacaoScalarFieldEnum = (typeof ComodidadeNaAcomodacaoScalarFieldEnum)[keyof typeof ComodidadeNaAcomodacaoScalarFieldEnum]


  export const ComodidadeHotelScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type ComodidadeHotelScalarFieldEnum = (typeof ComodidadeHotelScalarFieldEnum)[keyof typeof ComodidadeHotelScalarFieldEnum]


  export const ComodidadeNoHotelScalarFieldEnum: {
    hotelId: 'hotelId',
    comodidadeId: 'comodidadeId'
  };

  export type ComodidadeNoHotelScalarFieldEnum = (typeof ComodidadeNoHotelScalarFieldEnum)[keyof typeof ComodidadeNoHotelScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type EnderecoWhereInput = {
    AND?: EnderecoWhereInput | EnderecoWhereInput[]
    OR?: EnderecoWhereInput[]
    NOT?: EnderecoWhereInput | EnderecoWhereInput[]
    id?: IntFilter<"Endereco"> | number
    numero?: IntNullableFilter<"Endereco"> | number | null
    rua?: StringFilter<"Endereco"> | string
    bairro?: StringFilter<"Endereco"> | string
    cidade?: StringFilter<"Endereco"> | string
    estado?: StringFilter<"Endereco"> | string
    pais?: StringFilter<"Endereco"> | string
    Hotel?: HotelListRelationFilter
  }

  export type EnderecoOrderByWithRelationInput = {
    id?: SortOrder
    numero?: SortOrderInput | SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    pais?: SortOrder
    Hotel?: HotelOrderByRelationAggregateInput
  }

  export type EnderecoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EnderecoWhereInput | EnderecoWhereInput[]
    OR?: EnderecoWhereInput[]
    NOT?: EnderecoWhereInput | EnderecoWhereInput[]
    numero?: IntNullableFilter<"Endereco"> | number | null
    rua?: StringFilter<"Endereco"> | string
    bairro?: StringFilter<"Endereco"> | string
    cidade?: StringFilter<"Endereco"> | string
    estado?: StringFilter<"Endereco"> | string
    pais?: StringFilter<"Endereco"> | string
    Hotel?: HotelListRelationFilter
  }, "id">

  export type EnderecoOrderByWithAggregationInput = {
    id?: SortOrder
    numero?: SortOrderInput | SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    pais?: SortOrder
    _count?: EnderecoCountOrderByAggregateInput
    _avg?: EnderecoAvgOrderByAggregateInput
    _max?: EnderecoMaxOrderByAggregateInput
    _min?: EnderecoMinOrderByAggregateInput
    _sum?: EnderecoSumOrderByAggregateInput
  }

  export type EnderecoScalarWhereWithAggregatesInput = {
    AND?: EnderecoScalarWhereWithAggregatesInput | EnderecoScalarWhereWithAggregatesInput[]
    OR?: EnderecoScalarWhereWithAggregatesInput[]
    NOT?: EnderecoScalarWhereWithAggregatesInput | EnderecoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Endereco"> | number
    numero?: IntNullableWithAggregatesFilter<"Endereco"> | number | null
    rua?: StringWithAggregatesFilter<"Endereco"> | string
    bairro?: StringWithAggregatesFilter<"Endereco"> | string
    cidade?: StringWithAggregatesFilter<"Endereco"> | string
    estado?: StringWithAggregatesFilter<"Endereco"> | string
    pais?: StringWithAggregatesFilter<"Endereco"> | string
  }

  export type FotosHotelWhereInput = {
    AND?: FotosHotelWhereInput | FotosHotelWhereInput[]
    OR?: FotosHotelWhereInput[]
    NOT?: FotosHotelWhereInput | FotosHotelWhereInput[]
    id?: IntFilter<"FotosHotel"> | number
    url_foto?: StringFilter<"FotosHotel"> | string
    hotelId?: IntFilter<"FotosHotel"> | number
    id_hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }

  export type FotosHotelOrderByWithRelationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    hotelId?: SortOrder
    id_hotel?: HotelOrderByWithRelationInput
  }

  export type FotosHotelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FotosHotelWhereInput | FotosHotelWhereInput[]
    OR?: FotosHotelWhereInput[]
    NOT?: FotosHotelWhereInput | FotosHotelWhereInput[]
    url_foto?: StringFilter<"FotosHotel"> | string
    hotelId?: IntFilter<"FotosHotel"> | number
    id_hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }, "id">

  export type FotosHotelOrderByWithAggregationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    hotelId?: SortOrder
    _count?: FotosHotelCountOrderByAggregateInput
    _avg?: FotosHotelAvgOrderByAggregateInput
    _max?: FotosHotelMaxOrderByAggregateInput
    _min?: FotosHotelMinOrderByAggregateInput
    _sum?: FotosHotelSumOrderByAggregateInput
  }

  export type FotosHotelScalarWhereWithAggregatesInput = {
    AND?: FotosHotelScalarWhereWithAggregatesInput | FotosHotelScalarWhereWithAggregatesInput[]
    OR?: FotosHotelScalarWhereWithAggregatesInput[]
    NOT?: FotosHotelScalarWhereWithAggregatesInput | FotosHotelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FotosHotel"> | number
    url_foto?: StringWithAggregatesFilter<"FotosHotel"> | string
    hotelId?: IntWithAggregatesFilter<"FotosHotel"> | number
  }

  export type HotelWhereInput = {
    AND?: HotelWhereInput | HotelWhereInput[]
    OR?: HotelWhereInput[]
    NOT?: HotelWhereInput | HotelWhereInput[]
    id?: IntFilter<"Hotel"> | number
    nome?: StringFilter<"Hotel"> | string
    telefone?: StringFilter<"Hotel"> | string
    sobre?: StringNullableFilter<"Hotel"> | string | null
    descricao?: StringNullableFilter<"Hotel"> | string | null
    visualizacoes?: IntFilter<"Hotel"> | number
    informacoes_extras?: StringNullableFilter<"Hotel"> | string | null
    pet?: BoolFilter<"Hotel"> | boolean
    enderecoId?: IntFilter<"Hotel"> | number
    Acomodacao?: AcomodacaoListRelationFilter
    Avaliacao?: AvaliacaoListRelationFilter
    ComodidadeNoHotel?: ComodidadeNoHotelListRelationFilter
    Descricao_detalhada?: XOR<Descricao_detalhadaNullableRelationFilter, Descricao_detalhadaWhereInput> | null
    Favorito?: FavoritoListRelationFilter
    FotosHotel?: FotosHotelListRelationFilter
    endereco?: XOR<EnderecoRelationFilter, EnderecoWhereInput>
  }

  export type HotelOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    sobre?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    visualizacoes?: SortOrder
    informacoes_extras?: SortOrderInput | SortOrder
    pet?: SortOrder
    enderecoId?: SortOrder
    Acomodacao?: AcomodacaoOrderByRelationAggregateInput
    Avaliacao?: AvaliacaoOrderByRelationAggregateInput
    ComodidadeNoHotel?: ComodidadeNoHotelOrderByRelationAggregateInput
    Descricao_detalhada?: Descricao_detalhadaOrderByWithRelationInput
    Favorito?: FavoritoOrderByRelationAggregateInput
    FotosHotel?: FotosHotelOrderByRelationAggregateInput
    endereco?: EnderecoOrderByWithRelationInput
  }

  export type HotelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HotelWhereInput | HotelWhereInput[]
    OR?: HotelWhereInput[]
    NOT?: HotelWhereInput | HotelWhereInput[]
    nome?: StringFilter<"Hotel"> | string
    telefone?: StringFilter<"Hotel"> | string
    sobre?: StringNullableFilter<"Hotel"> | string | null
    descricao?: StringNullableFilter<"Hotel"> | string | null
    visualizacoes?: IntFilter<"Hotel"> | number
    informacoes_extras?: StringNullableFilter<"Hotel"> | string | null
    pet?: BoolFilter<"Hotel"> | boolean
    enderecoId?: IntFilter<"Hotel"> | number
    Acomodacao?: AcomodacaoListRelationFilter
    Avaliacao?: AvaliacaoListRelationFilter
    ComodidadeNoHotel?: ComodidadeNoHotelListRelationFilter
    Descricao_detalhada?: XOR<Descricao_detalhadaNullableRelationFilter, Descricao_detalhadaWhereInput> | null
    Favorito?: FavoritoListRelationFilter
    FotosHotel?: FotosHotelListRelationFilter
    endereco?: XOR<EnderecoRelationFilter, EnderecoWhereInput>
  }, "id">

  export type HotelOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    sobre?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    visualizacoes?: SortOrder
    informacoes_extras?: SortOrderInput | SortOrder
    pet?: SortOrder
    enderecoId?: SortOrder
    _count?: HotelCountOrderByAggregateInput
    _avg?: HotelAvgOrderByAggregateInput
    _max?: HotelMaxOrderByAggregateInput
    _min?: HotelMinOrderByAggregateInput
    _sum?: HotelSumOrderByAggregateInput
  }

  export type HotelScalarWhereWithAggregatesInput = {
    AND?: HotelScalarWhereWithAggregatesInput | HotelScalarWhereWithAggregatesInput[]
    OR?: HotelScalarWhereWithAggregatesInput[]
    NOT?: HotelScalarWhereWithAggregatesInput | HotelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Hotel"> | number
    nome?: StringWithAggregatesFilter<"Hotel"> | string
    telefone?: StringWithAggregatesFilter<"Hotel"> | string
    sobre?: StringNullableWithAggregatesFilter<"Hotel"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"Hotel"> | string | null
    visualizacoes?: IntWithAggregatesFilter<"Hotel"> | number
    informacoes_extras?: StringNullableWithAggregatesFilter<"Hotel"> | string | null
    pet?: BoolWithAggregatesFilter<"Hotel"> | boolean
    enderecoId?: IntWithAggregatesFilter<"Hotel"> | number
  }

  export type AvaliacaoWhereInput = {
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    id?: IntFilter<"Avaliacao"> | number
    custo_beneficio?: IntFilter<"Avaliacao"> | number
    atendimento?: IntFilter<"Avaliacao"> | number
    comida?: IntFilter<"Avaliacao"> | number
    limpeza?: IntFilter<"Avaliacao"> | number
    conforto?: IntFilter<"Avaliacao"> | number
    localizacao?: IntFilter<"Avaliacao"> | number
    comentario?: IntNullableFilter<"Avaliacao"> | number | null
    hotelId?: IntFilter<"Avaliacao"> | number
    clientId?: IntFilter<"Avaliacao"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }

  export type AvaliacaoOrderByWithRelationInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrderInput | SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
    cliente?: ClientOrderByWithRelationInput
    hotel?: HotelOrderByWithRelationInput
  }

  export type AvaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    custo_beneficio?: IntFilter<"Avaliacao"> | number
    atendimento?: IntFilter<"Avaliacao"> | number
    comida?: IntFilter<"Avaliacao"> | number
    limpeza?: IntFilter<"Avaliacao"> | number
    conforto?: IntFilter<"Avaliacao"> | number
    localizacao?: IntFilter<"Avaliacao"> | number
    comentario?: IntNullableFilter<"Avaliacao"> | number | null
    hotelId?: IntFilter<"Avaliacao"> | number
    clientId?: IntFilter<"Avaliacao"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }, "id">

  export type AvaliacaoOrderByWithAggregationInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrderInput | SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
    _count?: AvaliacaoCountOrderByAggregateInput
    _avg?: AvaliacaoAvgOrderByAggregateInput
    _max?: AvaliacaoMaxOrderByAggregateInput
    _min?: AvaliacaoMinOrderByAggregateInput
    _sum?: AvaliacaoSumOrderByAggregateInput
  }

  export type AvaliacaoScalarWhereWithAggregatesInput = {
    AND?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    OR?: AvaliacaoScalarWhereWithAggregatesInput[]
    NOT?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Avaliacao"> | number
    custo_beneficio?: IntWithAggregatesFilter<"Avaliacao"> | number
    atendimento?: IntWithAggregatesFilter<"Avaliacao"> | number
    comida?: IntWithAggregatesFilter<"Avaliacao"> | number
    limpeza?: IntWithAggregatesFilter<"Avaliacao"> | number
    conforto?: IntWithAggregatesFilter<"Avaliacao"> | number
    localizacao?: IntWithAggregatesFilter<"Avaliacao"> | number
    comentario?: IntNullableWithAggregatesFilter<"Avaliacao"> | number | null
    hotelId?: IntWithAggregatesFilter<"Avaliacao"> | number
    clientId?: IntWithAggregatesFilter<"Avaliacao"> | number
  }

  export type Descricao_detalhadaWhereInput = {
    AND?: Descricao_detalhadaWhereInput | Descricao_detalhadaWhereInput[]
    OR?: Descricao_detalhadaWhereInput[]
    NOT?: Descricao_detalhadaWhereInput | Descricao_detalhadaWhereInput[]
    id?: IntFilter<"Descricao_detalhada"> | number
    descricao?: StringNullableFilter<"Descricao_detalhada"> | string | null
    sobre?: StringNullableFilter<"Descricao_detalhada"> | string | null
    banheiro?: StringNullableFilter<"Descricao_detalhada"> | string | null
    quarto?: StringNullableFilter<"Descricao_detalhada"> | string | null
    regiao?: StringNullableFilter<"Descricao_detalhada"> | string | null
    hotelId?: IntFilter<"Descricao_detalhada"> | number
    id_hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }

  export type Descricao_detalhadaOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    banheiro?: SortOrderInput | SortOrder
    quarto?: SortOrderInput | SortOrder
    regiao?: SortOrderInput | SortOrder
    hotelId?: SortOrder
    id_hotel?: HotelOrderByWithRelationInput
  }

  export type Descricao_detalhadaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    hotelId?: number
    AND?: Descricao_detalhadaWhereInput | Descricao_detalhadaWhereInput[]
    OR?: Descricao_detalhadaWhereInput[]
    NOT?: Descricao_detalhadaWhereInput | Descricao_detalhadaWhereInput[]
    descricao?: StringNullableFilter<"Descricao_detalhada"> | string | null
    sobre?: StringNullableFilter<"Descricao_detalhada"> | string | null
    banheiro?: StringNullableFilter<"Descricao_detalhada"> | string | null
    quarto?: StringNullableFilter<"Descricao_detalhada"> | string | null
    regiao?: StringNullableFilter<"Descricao_detalhada"> | string | null
    id_hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }, "id" | "hotelId">

  export type Descricao_detalhadaOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    banheiro?: SortOrderInput | SortOrder
    quarto?: SortOrderInput | SortOrder
    regiao?: SortOrderInput | SortOrder
    hotelId?: SortOrder
    _count?: Descricao_detalhadaCountOrderByAggregateInput
    _avg?: Descricao_detalhadaAvgOrderByAggregateInput
    _max?: Descricao_detalhadaMaxOrderByAggregateInput
    _min?: Descricao_detalhadaMinOrderByAggregateInput
    _sum?: Descricao_detalhadaSumOrderByAggregateInput
  }

  export type Descricao_detalhadaScalarWhereWithAggregatesInput = {
    AND?: Descricao_detalhadaScalarWhereWithAggregatesInput | Descricao_detalhadaScalarWhereWithAggregatesInput[]
    OR?: Descricao_detalhadaScalarWhereWithAggregatesInput[]
    NOT?: Descricao_detalhadaScalarWhereWithAggregatesInput | Descricao_detalhadaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Descricao_detalhada"> | number
    descricao?: StringNullableWithAggregatesFilter<"Descricao_detalhada"> | string | null
    sobre?: StringNullableWithAggregatesFilter<"Descricao_detalhada"> | string | null
    banheiro?: StringNullableWithAggregatesFilter<"Descricao_detalhada"> | string | null
    quarto?: StringNullableWithAggregatesFilter<"Descricao_detalhada"> | string | null
    regiao?: StringNullableWithAggregatesFilter<"Descricao_detalhada"> | string | null
    hotelId?: IntWithAggregatesFilter<"Descricao_detalhada"> | number
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    hash_senha?: StringFilter<"Usuario"> | string
    telefone?: StringNullableFilter<"Usuario"> | string | null
    data_nascimento?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    vip?: BoolFilter<"Usuario"> | boolean
    Client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
    FotoUsuario?: FotoUsuarioListRelationFilter
    Notificacao?: NotificacaoListRelationFilter
    Proprietario?: XOR<ProprietarioNullableRelationFilter, ProprietarioWhereInput> | null
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    hash_senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    vip?: SortOrder
    Client?: ClientOrderByWithRelationInput
    FotoUsuario?: FotoUsuarioOrderByRelationAggregateInput
    Notificacao?: NotificacaoOrderByRelationAggregateInput
    Proprietario?: ProprietarioOrderByWithRelationInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    hash_senha?: StringFilter<"Usuario"> | string
    telefone?: StringNullableFilter<"Usuario"> | string | null
    data_nascimento?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    vip?: BoolFilter<"Usuario"> | boolean
    Client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
    FotoUsuario?: FotoUsuarioListRelationFilter
    Notificacao?: NotificacaoListRelationFilter
    Proprietario?: XOR<ProprietarioNullableRelationFilter, ProprietarioWhereInput> | null
  }, "id">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    hash_senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    vip?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    sobrenome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    hash_senha?: StringWithAggregatesFilter<"Usuario"> | string
    telefone?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    vip?: BoolWithAggregatesFilter<"Usuario"> | boolean
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: IntFilter<"Client"> | number
    usuarioId?: IntFilter<"Client"> | number
    Avaliacao?: AvaliacaoListRelationFilter
    Avaliacao_acomodacao?: Avaliacao_acomodacaoListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Cupom?: ClienteNoCupomListRelationFilter
    Favorito?: FavoritoListRelationFilter
    Reserva?: ReservaListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    Avaliacao?: AvaliacaoOrderByRelationAggregateInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoOrderByRelationAggregateInput
    usuario?: UsuarioOrderByWithRelationInput
    Cupom?: ClienteNoCupomOrderByRelationAggregateInput
    Favorito?: FavoritoOrderByRelationAggregateInput
    Reserva?: ReservaOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuarioId?: number
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    Avaliacao?: AvaliacaoListRelationFilter
    Avaliacao_acomodacao?: Avaliacao_acomodacaoListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Cupom?: ClienteNoCupomListRelationFilter
    Favorito?: FavoritoListRelationFilter
    Reserva?: ReservaListRelationFilter
  }, "id" | "usuarioId">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    _count?: ClientCountOrderByAggregateInput
    _avg?: ClientAvgOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
    _sum?: ClientSumOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Client"> | number
    usuarioId?: IntWithAggregatesFilter<"Client"> | number
  }

  export type ProprietarioWhereInput = {
    AND?: ProprietarioWhereInput | ProprietarioWhereInput[]
    OR?: ProprietarioWhereInput[]
    NOT?: ProprietarioWhereInput | ProprietarioWhereInput[]
    id?: IntFilter<"Proprietario"> | number
    usuarioId?: IntFilter<"Proprietario"> | number
    tempo_hospedagem?: IntNullableFilter<"Proprietario"> | number | null
    avaliacao?: StringNullableFilter<"Proprietario"> | string | null
    sobre?: StringNullableFilter<"Proprietario"> | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Interesse?: ProprietarioNoInteresseListRelationFilter
  }

  export type ProprietarioOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrderInput | SortOrder
    avaliacao?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    Gerenciamento_ganhos?: Gerenciamento_ganhosOrderByRelationAggregateInput
    usuario?: UsuarioOrderByWithRelationInput
    Interesse?: ProprietarioNoInteresseOrderByRelationAggregateInput
  }

  export type ProprietarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuarioId?: number
    AND?: ProprietarioWhereInput | ProprietarioWhereInput[]
    OR?: ProprietarioWhereInput[]
    NOT?: ProprietarioWhereInput | ProprietarioWhereInput[]
    tempo_hospedagem?: IntNullableFilter<"Proprietario"> | number | null
    avaliacao?: StringNullableFilter<"Proprietario"> | string | null
    sobre?: StringNullableFilter<"Proprietario"> | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Interesse?: ProprietarioNoInteresseListRelationFilter
  }, "id" | "usuarioId">

  export type ProprietarioOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrderInput | SortOrder
    avaliacao?: SortOrderInput | SortOrder
    sobre?: SortOrderInput | SortOrder
    _count?: ProprietarioCountOrderByAggregateInput
    _avg?: ProprietarioAvgOrderByAggregateInput
    _max?: ProprietarioMaxOrderByAggregateInput
    _min?: ProprietarioMinOrderByAggregateInput
    _sum?: ProprietarioSumOrderByAggregateInput
  }

  export type ProprietarioScalarWhereWithAggregatesInput = {
    AND?: ProprietarioScalarWhereWithAggregatesInput | ProprietarioScalarWhereWithAggregatesInput[]
    OR?: ProprietarioScalarWhereWithAggregatesInput[]
    NOT?: ProprietarioScalarWhereWithAggregatesInput | ProprietarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Proprietario"> | number
    usuarioId?: IntWithAggregatesFilter<"Proprietario"> | number
    tempo_hospedagem?: IntNullableWithAggregatesFilter<"Proprietario"> | number | null
    avaliacao?: StringNullableWithAggregatesFilter<"Proprietario"> | string | null
    sobre?: StringNullableWithAggregatesFilter<"Proprietario"> | string | null
  }

  export type FotoUsuarioWhereInput = {
    AND?: FotoUsuarioWhereInput | FotoUsuarioWhereInput[]
    OR?: FotoUsuarioWhereInput[]
    NOT?: FotoUsuarioWhereInput | FotoUsuarioWhereInput[]
    id?: IntFilter<"FotoUsuario"> | number
    url_foto?: StringFilter<"FotoUsuario"> | string
    usuarioId?: IntFilter<"FotoUsuario"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type FotoUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    usuarioId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type FotoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FotoUsuarioWhereInput | FotoUsuarioWhereInput[]
    OR?: FotoUsuarioWhereInput[]
    NOT?: FotoUsuarioWhereInput | FotoUsuarioWhereInput[]
    url_foto?: StringFilter<"FotoUsuario"> | string
    usuarioId?: IntFilter<"FotoUsuario"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type FotoUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    usuarioId?: SortOrder
    _count?: FotoUsuarioCountOrderByAggregateInput
    _avg?: FotoUsuarioAvgOrderByAggregateInput
    _max?: FotoUsuarioMaxOrderByAggregateInput
    _min?: FotoUsuarioMinOrderByAggregateInput
    _sum?: FotoUsuarioSumOrderByAggregateInput
  }

  export type FotoUsuarioScalarWhereWithAggregatesInput = {
    AND?: FotoUsuarioScalarWhereWithAggregatesInput | FotoUsuarioScalarWhereWithAggregatesInput[]
    OR?: FotoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: FotoUsuarioScalarWhereWithAggregatesInput | FotoUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FotoUsuario"> | number
    url_foto?: StringWithAggregatesFilter<"FotoUsuario"> | string
    usuarioId?: IntWithAggregatesFilter<"FotoUsuario"> | number
  }

  export type NotificacaoWhereInput = {
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    id?: IntFilter<"Notificacao"> | number
    mensagem?: StringFilter<"Notificacao"> | string
    titulo?: StringFilter<"Notificacao"> | string
    usuarioId?: IntFilter<"Notificacao"> | number
    leitura?: BoolFilter<"Notificacao"> | boolean
    data_criacao?: DateTimeFilter<"Notificacao"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type NotificacaoOrderByWithRelationInput = {
    id?: SortOrder
    mensagem?: SortOrder
    titulo?: SortOrder
    usuarioId?: SortOrder
    leitura?: SortOrder
    data_criacao?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type NotificacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificacaoWhereInput | NotificacaoWhereInput[]
    OR?: NotificacaoWhereInput[]
    NOT?: NotificacaoWhereInput | NotificacaoWhereInput[]
    mensagem?: StringFilter<"Notificacao"> | string
    titulo?: StringFilter<"Notificacao"> | string
    usuarioId?: IntFilter<"Notificacao"> | number
    leitura?: BoolFilter<"Notificacao"> | boolean
    data_criacao?: DateTimeFilter<"Notificacao"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type NotificacaoOrderByWithAggregationInput = {
    id?: SortOrder
    mensagem?: SortOrder
    titulo?: SortOrder
    usuarioId?: SortOrder
    leitura?: SortOrder
    data_criacao?: SortOrder
    _count?: NotificacaoCountOrderByAggregateInput
    _avg?: NotificacaoAvgOrderByAggregateInput
    _max?: NotificacaoMaxOrderByAggregateInput
    _min?: NotificacaoMinOrderByAggregateInput
    _sum?: NotificacaoSumOrderByAggregateInput
  }

  export type NotificacaoScalarWhereWithAggregatesInput = {
    AND?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    OR?: NotificacaoScalarWhereWithAggregatesInput[]
    NOT?: NotificacaoScalarWhereWithAggregatesInput | NotificacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notificacao"> | number
    mensagem?: StringWithAggregatesFilter<"Notificacao"> | string
    titulo?: StringWithAggregatesFilter<"Notificacao"> | string
    usuarioId?: IntWithAggregatesFilter<"Notificacao"> | number
    leitura?: BoolWithAggregatesFilter<"Notificacao"> | boolean
    data_criacao?: DateTimeWithAggregatesFilter<"Notificacao"> | Date | string
  }

  export type AcomodacaoWhereInput = {
    AND?: AcomodacaoWhereInput | AcomodacaoWhereInput[]
    OR?: AcomodacaoWhereInput[]
    NOT?: AcomodacaoWhereInput | AcomodacaoWhereInput[]
    id?: IntFilter<"Acomodacao"> | number
    titulo?: StringFilter<"Acomodacao"> | string
    descricao?: StringNullableFilter<"Acomodacao"> | string | null
    banheiros?: IntFilter<"Acomodacao"> | number
    quartos?: IntFilter<"Acomodacao"> | number
    camas?: IntFilter<"Acomodacao"> | number
    valor_diaria?: FloatFilter<"Acomodacao"> | number
    valor_pet?: FloatFilter<"Acomodacao"> | number
    complemento?: StringFilter<"Acomodacao"> | string
    tipo_acomodacaoId?: IntFilter<"Acomodacao"> | number
    hotelId?: IntFilter<"Acomodacao"> | number
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
    tipoAcomodacao?: XOR<TipoAcomodacaoRelationFilter, TipoAcomodacaoWhereInput>
    Avaliacao_acomodacao?: Avaliacao_acomodacaoListRelationFilter
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoListRelationFilter
    FotoAcomodacao?: Foto_AcomodacaoListRelationFilter
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoListRelationFilter
    Reserva?: ReservaListRelationFilter
  }

  export type AcomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    complemento?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
    hotel?: HotelOrderByWithRelationInput
    tipoAcomodacao?: TipoAcomodacaoOrderByWithRelationInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoOrderByRelationAggregateInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoOrderByRelationAggregateInput
    FotoAcomodacao?: Foto_AcomodacaoOrderByRelationAggregateInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoOrderByRelationAggregateInput
    Reserva?: ReservaOrderByRelationAggregateInput
  }

  export type AcomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AcomodacaoWhereInput | AcomodacaoWhereInput[]
    OR?: AcomodacaoWhereInput[]
    NOT?: AcomodacaoWhereInput | AcomodacaoWhereInput[]
    titulo?: StringFilter<"Acomodacao"> | string
    descricao?: StringNullableFilter<"Acomodacao"> | string | null
    banheiros?: IntFilter<"Acomodacao"> | number
    quartos?: IntFilter<"Acomodacao"> | number
    camas?: IntFilter<"Acomodacao"> | number
    valor_diaria?: FloatFilter<"Acomodacao"> | number
    valor_pet?: FloatFilter<"Acomodacao"> | number
    complemento?: StringFilter<"Acomodacao"> | string
    tipo_acomodacaoId?: IntFilter<"Acomodacao"> | number
    hotelId?: IntFilter<"Acomodacao"> | number
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
    tipoAcomodacao?: XOR<TipoAcomodacaoRelationFilter, TipoAcomodacaoWhereInput>
    Avaliacao_acomodacao?: Avaliacao_acomodacaoListRelationFilter
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoListRelationFilter
    FotoAcomodacao?: Foto_AcomodacaoListRelationFilter
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoListRelationFilter
    Reserva?: ReservaListRelationFilter
  }, "id">

  export type AcomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    complemento?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
    _count?: AcomodacaoCountOrderByAggregateInput
    _avg?: AcomodacaoAvgOrderByAggregateInput
    _max?: AcomodacaoMaxOrderByAggregateInput
    _min?: AcomodacaoMinOrderByAggregateInput
    _sum?: AcomodacaoSumOrderByAggregateInput
  }

  export type AcomodacaoScalarWhereWithAggregatesInput = {
    AND?: AcomodacaoScalarWhereWithAggregatesInput | AcomodacaoScalarWhereWithAggregatesInput[]
    OR?: AcomodacaoScalarWhereWithAggregatesInput[]
    NOT?: AcomodacaoScalarWhereWithAggregatesInput | AcomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Acomodacao"> | number
    titulo?: StringWithAggregatesFilter<"Acomodacao"> | string
    descricao?: StringNullableWithAggregatesFilter<"Acomodacao"> | string | null
    banheiros?: IntWithAggregatesFilter<"Acomodacao"> | number
    quartos?: IntWithAggregatesFilter<"Acomodacao"> | number
    camas?: IntWithAggregatesFilter<"Acomodacao"> | number
    valor_diaria?: FloatWithAggregatesFilter<"Acomodacao"> | number
    valor_pet?: FloatWithAggregatesFilter<"Acomodacao"> | number
    complemento?: StringWithAggregatesFilter<"Acomodacao"> | string
    tipo_acomodacaoId?: IntWithAggregatesFilter<"Acomodacao"> | number
    hotelId?: IntWithAggregatesFilter<"Acomodacao"> | number
  }

  export type TipoAcomodacaoWhereInput = {
    AND?: TipoAcomodacaoWhereInput | TipoAcomodacaoWhereInput[]
    OR?: TipoAcomodacaoWhereInput[]
    NOT?: TipoAcomodacaoWhereInput | TipoAcomodacaoWhereInput[]
    id?: IntFilter<"TipoAcomodacao"> | number
    nome?: StringFilter<"TipoAcomodacao"> | string
    Acomodacaoes?: AcomodacaoListRelationFilter
  }

  export type TipoAcomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    Acomodacaoes?: AcomodacaoOrderByRelationAggregateInput
  }

  export type TipoAcomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoAcomodacaoWhereInput | TipoAcomodacaoWhereInput[]
    OR?: TipoAcomodacaoWhereInput[]
    NOT?: TipoAcomodacaoWhereInput | TipoAcomodacaoWhereInput[]
    nome?: StringFilter<"TipoAcomodacao"> | string
    Acomodacaoes?: AcomodacaoListRelationFilter
  }, "id">

  export type TipoAcomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: TipoAcomodacaoCountOrderByAggregateInput
    _avg?: TipoAcomodacaoAvgOrderByAggregateInput
    _max?: TipoAcomodacaoMaxOrderByAggregateInput
    _min?: TipoAcomodacaoMinOrderByAggregateInput
    _sum?: TipoAcomodacaoSumOrderByAggregateInput
  }

  export type TipoAcomodacaoScalarWhereWithAggregatesInput = {
    AND?: TipoAcomodacaoScalarWhereWithAggregatesInput | TipoAcomodacaoScalarWhereWithAggregatesInput[]
    OR?: TipoAcomodacaoScalarWhereWithAggregatesInput[]
    NOT?: TipoAcomodacaoScalarWhereWithAggregatesInput | TipoAcomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoAcomodacao"> | number
    nome?: StringWithAggregatesFilter<"TipoAcomodacao"> | string
  }

  export type Foto_AcomodacaoWhereInput = {
    AND?: Foto_AcomodacaoWhereInput | Foto_AcomodacaoWhereInput[]
    OR?: Foto_AcomodacaoWhereInput[]
    NOT?: Foto_AcomodacaoWhereInput | Foto_AcomodacaoWhereInput[]
    id?: IntFilter<"Foto_Acomodacao"> | number
    url_foto?: StringFilter<"Foto_Acomodacao"> | string
    acomodacaoId?: IntFilter<"Foto_Acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
  }

  export type Foto_AcomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    acomodacaoId?: SortOrder
    acomodacao?: AcomodacaoOrderByWithRelationInput
  }

  export type Foto_AcomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Foto_AcomodacaoWhereInput | Foto_AcomodacaoWhereInput[]
    OR?: Foto_AcomodacaoWhereInput[]
    NOT?: Foto_AcomodacaoWhereInput | Foto_AcomodacaoWhereInput[]
    url_foto?: StringFilter<"Foto_Acomodacao"> | string
    acomodacaoId?: IntFilter<"Foto_Acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
  }, "id">

  export type Foto_AcomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    url_foto?: SortOrder
    acomodacaoId?: SortOrder
    _count?: Foto_AcomodacaoCountOrderByAggregateInput
    _avg?: Foto_AcomodacaoAvgOrderByAggregateInput
    _max?: Foto_AcomodacaoMaxOrderByAggregateInput
    _min?: Foto_AcomodacaoMinOrderByAggregateInput
    _sum?: Foto_AcomodacaoSumOrderByAggregateInput
  }

  export type Foto_AcomodacaoScalarWhereWithAggregatesInput = {
    AND?: Foto_AcomodacaoScalarWhereWithAggregatesInput | Foto_AcomodacaoScalarWhereWithAggregatesInput[]
    OR?: Foto_AcomodacaoScalarWhereWithAggregatesInput[]
    NOT?: Foto_AcomodacaoScalarWhereWithAggregatesInput | Foto_AcomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Foto_Acomodacao"> | number
    url_foto?: StringWithAggregatesFilter<"Foto_Acomodacao"> | string
    acomodacaoId?: IntWithAggregatesFilter<"Foto_Acomodacao"> | number
  }

  export type ReservaWhereInput = {
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    id?: IntFilter<"Reserva"> | number
    data_check_in?: DateTimeFilter<"Reserva"> | Date | string
    data_check_out?: DateTimeFilter<"Reserva"> | Date | string
    quantidade_pessoas?: IntFilter<"Reserva"> | number
    status?: StringFilter<"Reserva"> | string
    aceita_pet?: BoolFilter<"Reserva"> | boolean
    clienteId?: IntFilter<"Reserva"> | number
    acomodacaoId?: IntFilter<"Reserva"> | number
    Cobranca?: XOR<CobrancaNullableRelationFilter, CobrancaWhereInput> | null
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type ReservaOrderByWithRelationInput = {
    id?: SortOrder
    data_check_in?: SortOrder
    data_check_out?: SortOrder
    quantidade_pessoas?: SortOrder
    status?: SortOrder
    aceita_pet?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
    Cobranca?: CobrancaOrderByWithRelationInput
    acomodacao?: AcomodacaoOrderByWithRelationInput
    cliente?: ClientOrderByWithRelationInput
  }

  export type ReservaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    data_check_in?: DateTimeFilter<"Reserva"> | Date | string
    data_check_out?: DateTimeFilter<"Reserva"> | Date | string
    quantidade_pessoas?: IntFilter<"Reserva"> | number
    status?: StringFilter<"Reserva"> | string
    aceita_pet?: BoolFilter<"Reserva"> | boolean
    clienteId?: IntFilter<"Reserva"> | number
    acomodacaoId?: IntFilter<"Reserva"> | number
    Cobranca?: XOR<CobrancaNullableRelationFilter, CobrancaWhereInput> | null
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type ReservaOrderByWithAggregationInput = {
    id?: SortOrder
    data_check_in?: SortOrder
    data_check_out?: SortOrder
    quantidade_pessoas?: SortOrder
    status?: SortOrder
    aceita_pet?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
    _count?: ReservaCountOrderByAggregateInput
    _avg?: ReservaAvgOrderByAggregateInput
    _max?: ReservaMaxOrderByAggregateInput
    _min?: ReservaMinOrderByAggregateInput
    _sum?: ReservaSumOrderByAggregateInput
  }

  export type ReservaScalarWhereWithAggregatesInput = {
    AND?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    OR?: ReservaScalarWhereWithAggregatesInput[]
    NOT?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reserva"> | number
    data_check_in?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    data_check_out?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    quantidade_pessoas?: IntWithAggregatesFilter<"Reserva"> | number
    status?: StringWithAggregatesFilter<"Reserva"> | string
    aceita_pet?: BoolWithAggregatesFilter<"Reserva"> | boolean
    clienteId?: IntWithAggregatesFilter<"Reserva"> | number
    acomodacaoId?: IntWithAggregatesFilter<"Reserva"> | number
  }

  export type Gerenciamento_ganhos_acomodacaoWhereInput = {
    AND?: Gerenciamento_ganhos_acomodacaoWhereInput | Gerenciamento_ganhos_acomodacaoWhereInput[]
    OR?: Gerenciamento_ganhos_acomodacaoWhereInput[]
    NOT?: Gerenciamento_ganhos_acomodacaoWhereInput | Gerenciamento_ganhos_acomodacaoWhereInput[]
    id?: IntFilter<"Gerenciamento_ganhos_acomodacao"> | number
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos_acomodacao"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Gerenciamento_ganhos_acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
  }

  export type Gerenciamento_ganhos_acomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrderInput | SortOrder
    valor_lucro?: SortOrderInput | SortOrder
    acomodacaoId?: SortOrder
    acomodacao?: AcomodacaoOrderByWithRelationInput
  }

  export type Gerenciamento_ganhos_acomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Gerenciamento_ganhos_acomodacaoWhereInput | Gerenciamento_ganhos_acomodacaoWhereInput[]
    OR?: Gerenciamento_ganhos_acomodacaoWhereInput[]
    NOT?: Gerenciamento_ganhos_acomodacaoWhereInput | Gerenciamento_ganhos_acomodacaoWhereInput[]
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos_acomodacao"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Gerenciamento_ganhos_acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
  }, "id">

  export type Gerenciamento_ganhos_acomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrderInput | SortOrder
    valor_lucro?: SortOrderInput | SortOrder
    acomodacaoId?: SortOrder
    _count?: Gerenciamento_ganhos_acomodacaoCountOrderByAggregateInput
    _avg?: Gerenciamento_ganhos_acomodacaoAvgOrderByAggregateInput
    _max?: Gerenciamento_ganhos_acomodacaoMaxOrderByAggregateInput
    _min?: Gerenciamento_ganhos_acomodacaoMinOrderByAggregateInput
    _sum?: Gerenciamento_ganhos_acomodacaoSumOrderByAggregateInput
  }

  export type Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput = {
    AND?: Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput | Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput[]
    OR?: Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput[]
    NOT?: Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput | Gerenciamento_ganhos_acomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Gerenciamento_ganhos_acomodacao"> | number
    data?: DateTimeNullableWithAggregatesFilter<"Gerenciamento_ganhos_acomodacao"> | Date | string | null
    valor_lucro?: FloatNullableWithAggregatesFilter<"Gerenciamento_ganhos_acomodacao"> | number | null
    acomodacaoId?: IntWithAggregatesFilter<"Gerenciamento_ganhos_acomodacao"> | number
  }

  export type Avaliacao_acomodacaoWhereInput = {
    AND?: Avaliacao_acomodacaoWhereInput | Avaliacao_acomodacaoWhereInput[]
    OR?: Avaliacao_acomodacaoWhereInput[]
    NOT?: Avaliacao_acomodacaoWhereInput | Avaliacao_acomodacaoWhereInput[]
    id?: IntFilter<"Avaliacao_acomodacao"> | number
    custo_beneficio?: IntFilter<"Avaliacao_acomodacao"> | number
    atendimento?: IntFilter<"Avaliacao_acomodacao"> | number
    comida?: IntFilter<"Avaliacao_acomodacao"> | number
    limpeza?: IntFilter<"Avaliacao_acomodacao"> | number
    conforto?: IntFilter<"Avaliacao_acomodacao"> | number
    localizacao?: IntFilter<"Avaliacao_acomodacao"> | number
    comentario?: IntNullableFilter<"Avaliacao_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Avaliacao_acomodacao"> | number
    clienteId?: IntFilter<"Avaliacao_acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type Avaliacao_acomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrderInput | SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
    acomodacao?: AcomodacaoOrderByWithRelationInput
    cliente?: ClientOrderByWithRelationInput
  }

  export type Avaliacao_acomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Avaliacao_acomodacaoWhereInput | Avaliacao_acomodacaoWhereInput[]
    OR?: Avaliacao_acomodacaoWhereInput[]
    NOT?: Avaliacao_acomodacaoWhereInput | Avaliacao_acomodacaoWhereInput[]
    custo_beneficio?: IntFilter<"Avaliacao_acomodacao"> | number
    atendimento?: IntFilter<"Avaliacao_acomodacao"> | number
    comida?: IntFilter<"Avaliacao_acomodacao"> | number
    limpeza?: IntFilter<"Avaliacao_acomodacao"> | number
    conforto?: IntFilter<"Avaliacao_acomodacao"> | number
    localizacao?: IntFilter<"Avaliacao_acomodacao"> | number
    comentario?: IntNullableFilter<"Avaliacao_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Avaliacao_acomodacao"> | number
    clienteId?: IntFilter<"Avaliacao_acomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type Avaliacao_acomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrderInput | SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
    _count?: Avaliacao_acomodacaoCountOrderByAggregateInput
    _avg?: Avaliacao_acomodacaoAvgOrderByAggregateInput
    _max?: Avaliacao_acomodacaoMaxOrderByAggregateInput
    _min?: Avaliacao_acomodacaoMinOrderByAggregateInput
    _sum?: Avaliacao_acomodacaoSumOrderByAggregateInput
  }

  export type Avaliacao_acomodacaoScalarWhereWithAggregatesInput = {
    AND?: Avaliacao_acomodacaoScalarWhereWithAggregatesInput | Avaliacao_acomodacaoScalarWhereWithAggregatesInput[]
    OR?: Avaliacao_acomodacaoScalarWhereWithAggregatesInput[]
    NOT?: Avaliacao_acomodacaoScalarWhereWithAggregatesInput | Avaliacao_acomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    custo_beneficio?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    atendimento?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    comida?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    limpeza?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    conforto?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    localizacao?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    comentario?: IntNullableWithAggregatesFilter<"Avaliacao_acomodacao"> | number | null
    acomodacaoId?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
    clienteId?: IntWithAggregatesFilter<"Avaliacao_acomodacao"> | number
  }

  export type CobrancaWhereInput = {
    AND?: CobrancaWhereInput | CobrancaWhereInput[]
    OR?: CobrancaWhereInput[]
    NOT?: CobrancaWhereInput | CobrancaWhereInput[]
    id?: IntFilter<"Cobranca"> | number
    data_pagamento?: DateTimeNullableFilter<"Cobranca"> | Date | string | null
    data_vencimento?: DateTimeNullableFilter<"Cobranca"> | Date | string | null
    valor?: FloatNullableFilter<"Cobranca"> | number | null
    status?: StringNullableFilter<"Cobranca"> | string | null
    reservaId?: IntFilter<"Cobranca"> | number
    reserva?: XOR<ReservaRelationFilter, ReservaWhereInput>
  }

  export type CobrancaOrderByWithRelationInput = {
    id?: SortOrder
    data_pagamento?: SortOrderInput | SortOrder
    data_vencimento?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    reservaId?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
  }

  export type CobrancaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reservaId?: number
    AND?: CobrancaWhereInput | CobrancaWhereInput[]
    OR?: CobrancaWhereInput[]
    NOT?: CobrancaWhereInput | CobrancaWhereInput[]
    data_pagamento?: DateTimeNullableFilter<"Cobranca"> | Date | string | null
    data_vencimento?: DateTimeNullableFilter<"Cobranca"> | Date | string | null
    valor?: FloatNullableFilter<"Cobranca"> | number | null
    status?: StringNullableFilter<"Cobranca"> | string | null
    reserva?: XOR<ReservaRelationFilter, ReservaWhereInput>
  }, "id" | "reservaId">

  export type CobrancaOrderByWithAggregationInput = {
    id?: SortOrder
    data_pagamento?: SortOrderInput | SortOrder
    data_vencimento?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    reservaId?: SortOrder
    _count?: CobrancaCountOrderByAggregateInput
    _avg?: CobrancaAvgOrderByAggregateInput
    _max?: CobrancaMaxOrderByAggregateInput
    _min?: CobrancaMinOrderByAggregateInput
    _sum?: CobrancaSumOrderByAggregateInput
  }

  export type CobrancaScalarWhereWithAggregatesInput = {
    AND?: CobrancaScalarWhereWithAggregatesInput | CobrancaScalarWhereWithAggregatesInput[]
    OR?: CobrancaScalarWhereWithAggregatesInput[]
    NOT?: CobrancaScalarWhereWithAggregatesInput | CobrancaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cobranca"> | number
    data_pagamento?: DateTimeNullableWithAggregatesFilter<"Cobranca"> | Date | string | null
    data_vencimento?: DateTimeNullableWithAggregatesFilter<"Cobranca"> | Date | string | null
    valor?: FloatNullableWithAggregatesFilter<"Cobranca"> | number | null
    status?: StringNullableWithAggregatesFilter<"Cobranca"> | string | null
    reservaId?: IntWithAggregatesFilter<"Cobranca"> | number
  }

  export type Gerenciamento_ganhosWhereInput = {
    AND?: Gerenciamento_ganhosWhereInput | Gerenciamento_ganhosWhereInput[]
    OR?: Gerenciamento_ganhosWhereInput[]
    NOT?: Gerenciamento_ganhosWhereInput | Gerenciamento_ganhosWhereInput[]
    id?: IntFilter<"Gerenciamento_ganhos"> | number
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos"> | number | null
    proprietarioId?: IntFilter<"Gerenciamento_ganhos"> | number
    proprietario?: XOR<ProprietarioRelationFilter, ProprietarioWhereInput>
  }

  export type Gerenciamento_ganhosOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrderInput | SortOrder
    valor_lucro?: SortOrderInput | SortOrder
    proprietarioId?: SortOrder
    proprietario?: ProprietarioOrderByWithRelationInput
  }

  export type Gerenciamento_ganhosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Gerenciamento_ganhosWhereInput | Gerenciamento_ganhosWhereInput[]
    OR?: Gerenciamento_ganhosWhereInput[]
    NOT?: Gerenciamento_ganhosWhereInput | Gerenciamento_ganhosWhereInput[]
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos"> | number | null
    proprietarioId?: IntFilter<"Gerenciamento_ganhos"> | number
    proprietario?: XOR<ProprietarioRelationFilter, ProprietarioWhereInput>
  }, "id">

  export type Gerenciamento_ganhosOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrderInput | SortOrder
    valor_lucro?: SortOrderInput | SortOrder
    proprietarioId?: SortOrder
    _count?: Gerenciamento_ganhosCountOrderByAggregateInput
    _avg?: Gerenciamento_ganhosAvgOrderByAggregateInput
    _max?: Gerenciamento_ganhosMaxOrderByAggregateInput
    _min?: Gerenciamento_ganhosMinOrderByAggregateInput
    _sum?: Gerenciamento_ganhosSumOrderByAggregateInput
  }

  export type Gerenciamento_ganhosScalarWhereWithAggregatesInput = {
    AND?: Gerenciamento_ganhosScalarWhereWithAggregatesInput | Gerenciamento_ganhosScalarWhereWithAggregatesInput[]
    OR?: Gerenciamento_ganhosScalarWhereWithAggregatesInput[]
    NOT?: Gerenciamento_ganhosScalarWhereWithAggregatesInput | Gerenciamento_ganhosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Gerenciamento_ganhos"> | number
    data?: DateTimeNullableWithAggregatesFilter<"Gerenciamento_ganhos"> | Date | string | null
    valor_lucro?: FloatNullableWithAggregatesFilter<"Gerenciamento_ganhos"> | number | null
    proprietarioId?: IntWithAggregatesFilter<"Gerenciamento_ganhos"> | number
  }

  export type InteresseWhereInput = {
    AND?: InteresseWhereInput | InteresseWhereInput[]
    OR?: InteresseWhereInput[]
    NOT?: InteresseWhereInput | InteresseWhereInput[]
    id?: IntFilter<"Interesse"> | number
    Nome?: StringFilter<"Interesse"> | string
    Proprietario?: ProprietarioNoInteresseListRelationFilter
  }

  export type InteresseOrderByWithRelationInput = {
    id?: SortOrder
    Nome?: SortOrder
    Proprietario?: ProprietarioNoInteresseOrderByRelationAggregateInput
  }

  export type InteresseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: InteresseWhereInput | InteresseWhereInput[]
    OR?: InteresseWhereInput[]
    NOT?: InteresseWhereInput | InteresseWhereInput[]
    Nome?: StringFilter<"Interesse"> | string
    Proprietario?: ProprietarioNoInteresseListRelationFilter
  }, "id">

  export type InteresseOrderByWithAggregationInput = {
    id?: SortOrder
    Nome?: SortOrder
    _count?: InteresseCountOrderByAggregateInput
    _avg?: InteresseAvgOrderByAggregateInput
    _max?: InteresseMaxOrderByAggregateInput
    _min?: InteresseMinOrderByAggregateInput
    _sum?: InteresseSumOrderByAggregateInput
  }

  export type InteresseScalarWhereWithAggregatesInput = {
    AND?: InteresseScalarWhereWithAggregatesInput | InteresseScalarWhereWithAggregatesInput[]
    OR?: InteresseScalarWhereWithAggregatesInput[]
    NOT?: InteresseScalarWhereWithAggregatesInput | InteresseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Interesse"> | number
    Nome?: StringWithAggregatesFilter<"Interesse"> | string
  }

  export type ProprietarioNoInteresseWhereInput = {
    AND?: ProprietarioNoInteresseWhereInput | ProprietarioNoInteresseWhereInput[]
    OR?: ProprietarioNoInteresseWhereInput[]
    NOT?: ProprietarioNoInteresseWhereInput | ProprietarioNoInteresseWhereInput[]
    proprietarioId?: IntFilter<"ProprietarioNoInteresse"> | number
    interesseId?: IntFilter<"ProprietarioNoInteresse"> | number
    interesse?: XOR<InteresseRelationFilter, InteresseWhereInput>
    proprietario?: XOR<ProprietarioRelationFilter, ProprietarioWhereInput>
  }

  export type ProprietarioNoInteresseOrderByWithRelationInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
    interesse?: InteresseOrderByWithRelationInput
    proprietario?: ProprietarioOrderByWithRelationInput
  }

  export type ProprietarioNoInteresseWhereUniqueInput = Prisma.AtLeast<{
    proprietarioId_interesseId?: ProprietarioNoInteresseProprietarioIdInteresseIdCompoundUniqueInput
    AND?: ProprietarioNoInteresseWhereInput | ProprietarioNoInteresseWhereInput[]
    OR?: ProprietarioNoInteresseWhereInput[]
    NOT?: ProprietarioNoInteresseWhereInput | ProprietarioNoInteresseWhereInput[]
    proprietarioId?: IntFilter<"ProprietarioNoInteresse"> | number
    interesseId?: IntFilter<"ProprietarioNoInteresse"> | number
    interesse?: XOR<InteresseRelationFilter, InteresseWhereInput>
    proprietario?: XOR<ProprietarioRelationFilter, ProprietarioWhereInput>
  }, "proprietarioId_interesseId">

  export type ProprietarioNoInteresseOrderByWithAggregationInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
    _count?: ProprietarioNoInteresseCountOrderByAggregateInput
    _avg?: ProprietarioNoInteresseAvgOrderByAggregateInput
    _max?: ProprietarioNoInteresseMaxOrderByAggregateInput
    _min?: ProprietarioNoInteresseMinOrderByAggregateInput
    _sum?: ProprietarioNoInteresseSumOrderByAggregateInput
  }

  export type ProprietarioNoInteresseScalarWhereWithAggregatesInput = {
    AND?: ProprietarioNoInteresseScalarWhereWithAggregatesInput | ProprietarioNoInteresseScalarWhereWithAggregatesInput[]
    OR?: ProprietarioNoInteresseScalarWhereWithAggregatesInput[]
    NOT?: ProprietarioNoInteresseScalarWhereWithAggregatesInput | ProprietarioNoInteresseScalarWhereWithAggregatesInput[]
    proprietarioId?: IntWithAggregatesFilter<"ProprietarioNoInteresse"> | number
    interesseId?: IntWithAggregatesFilter<"ProprietarioNoInteresse"> | number
  }

  export type CupomWhereInput = {
    AND?: CupomWhereInput | CupomWhereInput[]
    OR?: CupomWhereInput[]
    NOT?: CupomWhereInput | CupomWhereInput[]
    id?: IntFilter<"Cupom"> | number
    codigo?: StringFilter<"Cupom"> | string
    desconto?: FloatFilter<"Cupom"> | number
    data_validade?: DateTimeFilter<"Cupom"> | Date | string
    Cliente?: ClienteNoCupomListRelationFilter
  }

  export type CupomOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    desconto?: SortOrder
    data_validade?: SortOrder
    Cliente?: ClienteNoCupomOrderByRelationAggregateInput
  }

  export type CupomWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CupomWhereInput | CupomWhereInput[]
    OR?: CupomWhereInput[]
    NOT?: CupomWhereInput | CupomWhereInput[]
    codigo?: StringFilter<"Cupom"> | string
    desconto?: FloatFilter<"Cupom"> | number
    data_validade?: DateTimeFilter<"Cupom"> | Date | string
    Cliente?: ClienteNoCupomListRelationFilter
  }, "id">

  export type CupomOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    desconto?: SortOrder
    data_validade?: SortOrder
    _count?: CupomCountOrderByAggregateInput
    _avg?: CupomAvgOrderByAggregateInput
    _max?: CupomMaxOrderByAggregateInput
    _min?: CupomMinOrderByAggregateInput
    _sum?: CupomSumOrderByAggregateInput
  }

  export type CupomScalarWhereWithAggregatesInput = {
    AND?: CupomScalarWhereWithAggregatesInput | CupomScalarWhereWithAggregatesInput[]
    OR?: CupomScalarWhereWithAggregatesInput[]
    NOT?: CupomScalarWhereWithAggregatesInput | CupomScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cupom"> | number
    codigo?: StringWithAggregatesFilter<"Cupom"> | string
    desconto?: FloatWithAggregatesFilter<"Cupom"> | number
    data_validade?: DateTimeWithAggregatesFilter<"Cupom"> | Date | string
  }

  export type ClienteNoCupomWhereInput = {
    AND?: ClienteNoCupomWhereInput | ClienteNoCupomWhereInput[]
    OR?: ClienteNoCupomWhereInput[]
    NOT?: ClienteNoCupomWhereInput | ClienteNoCupomWhereInput[]
    clienteId?: IntFilter<"ClienteNoCupom"> | number
    cupomId?: IntFilter<"ClienteNoCupom"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    cupom?: XOR<CupomRelationFilter, CupomWhereInput>
  }

  export type ClienteNoCupomOrderByWithRelationInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
    cliente?: ClientOrderByWithRelationInput
    cupom?: CupomOrderByWithRelationInput
  }

  export type ClienteNoCupomWhereUniqueInput = Prisma.AtLeast<{
    clienteId_cupomId?: ClienteNoCupomClienteIdCupomIdCompoundUniqueInput
    AND?: ClienteNoCupomWhereInput | ClienteNoCupomWhereInput[]
    OR?: ClienteNoCupomWhereInput[]
    NOT?: ClienteNoCupomWhereInput | ClienteNoCupomWhereInput[]
    clienteId?: IntFilter<"ClienteNoCupom"> | number
    cupomId?: IntFilter<"ClienteNoCupom"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    cupom?: XOR<CupomRelationFilter, CupomWhereInput>
  }, "clienteId_cupomId">

  export type ClienteNoCupomOrderByWithAggregationInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
    _count?: ClienteNoCupomCountOrderByAggregateInput
    _avg?: ClienteNoCupomAvgOrderByAggregateInput
    _max?: ClienteNoCupomMaxOrderByAggregateInput
    _min?: ClienteNoCupomMinOrderByAggregateInput
    _sum?: ClienteNoCupomSumOrderByAggregateInput
  }

  export type ClienteNoCupomScalarWhereWithAggregatesInput = {
    AND?: ClienteNoCupomScalarWhereWithAggregatesInput | ClienteNoCupomScalarWhereWithAggregatesInput[]
    OR?: ClienteNoCupomScalarWhereWithAggregatesInput[]
    NOT?: ClienteNoCupomScalarWhereWithAggregatesInput | ClienteNoCupomScalarWhereWithAggregatesInput[]
    clienteId?: IntWithAggregatesFilter<"ClienteNoCupom"> | number
    cupomId?: IntWithAggregatesFilter<"ClienteNoCupom"> | number
  }

  export type FavoritoWhereInput = {
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    id?: IntFilter<"Favorito"> | number
    clienteId?: IntFilter<"Favorito"> | number
    hotelId?: IntFilter<"Favorito"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }

  export type FavoritoOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
    cliente?: ClientOrderByWithRelationInput
    hotel?: HotelOrderByWithRelationInput
  }

  export type FavoritoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    clienteId?: IntFilter<"Favorito"> | number
    hotelId?: IntFilter<"Favorito"> | number
    cliente?: XOR<ClientRelationFilter, ClientWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }, "id">

  export type FavoritoOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
    _count?: FavoritoCountOrderByAggregateInput
    _avg?: FavoritoAvgOrderByAggregateInput
    _max?: FavoritoMaxOrderByAggregateInput
    _min?: FavoritoMinOrderByAggregateInput
    _sum?: FavoritoSumOrderByAggregateInput
  }

  export type FavoritoScalarWhereWithAggregatesInput = {
    AND?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    OR?: FavoritoScalarWhereWithAggregatesInput[]
    NOT?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Favorito"> | number
    clienteId?: IntWithAggregatesFilter<"Favorito"> | number
    hotelId?: IntWithAggregatesFilter<"Favorito"> | number
  }

  export type ComodidadeAcomodacaoWhereInput = {
    AND?: ComodidadeAcomodacaoWhereInput | ComodidadeAcomodacaoWhereInput[]
    OR?: ComodidadeAcomodacaoWhereInput[]
    NOT?: ComodidadeAcomodacaoWhereInput | ComodidadeAcomodacaoWhereInput[]
    id?: IntFilter<"ComodidadeAcomodacao"> | number
    nome?: StringFilter<"ComodidadeAcomodacao"> | string
    Acomodacao?: ComodidadeNaAcomodacaoListRelationFilter
  }

  export type ComodidadeAcomodacaoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    Acomodacao?: ComodidadeNaAcomodacaoOrderByRelationAggregateInput
  }

  export type ComodidadeAcomodacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComodidadeAcomodacaoWhereInput | ComodidadeAcomodacaoWhereInput[]
    OR?: ComodidadeAcomodacaoWhereInput[]
    NOT?: ComodidadeAcomodacaoWhereInput | ComodidadeAcomodacaoWhereInput[]
    nome?: StringFilter<"ComodidadeAcomodacao"> | string
    Acomodacao?: ComodidadeNaAcomodacaoListRelationFilter
  }, "id">

  export type ComodidadeAcomodacaoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: ComodidadeAcomodacaoCountOrderByAggregateInput
    _avg?: ComodidadeAcomodacaoAvgOrderByAggregateInput
    _max?: ComodidadeAcomodacaoMaxOrderByAggregateInput
    _min?: ComodidadeAcomodacaoMinOrderByAggregateInput
    _sum?: ComodidadeAcomodacaoSumOrderByAggregateInput
  }

  export type ComodidadeAcomodacaoScalarWhereWithAggregatesInput = {
    AND?: ComodidadeAcomodacaoScalarWhereWithAggregatesInput | ComodidadeAcomodacaoScalarWhereWithAggregatesInput[]
    OR?: ComodidadeAcomodacaoScalarWhereWithAggregatesInput[]
    NOT?: ComodidadeAcomodacaoScalarWhereWithAggregatesInput | ComodidadeAcomodacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ComodidadeAcomodacao"> | number
    nome?: StringWithAggregatesFilter<"ComodidadeAcomodacao"> | string
  }

  export type ComodidadeNaAcomodacaoWhereInput = {
    AND?: ComodidadeNaAcomodacaoWhereInput | ComodidadeNaAcomodacaoWhereInput[]
    OR?: ComodidadeNaAcomodacaoWhereInput[]
    NOT?: ComodidadeNaAcomodacaoWhereInput | ComodidadeNaAcomodacaoWhereInput[]
    acomodacaoId?: IntFilter<"ComodidadeNaAcomodacao"> | number
    comodidadeId?: IntFilter<"ComodidadeNaAcomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    comodidade?: XOR<ComodidadeAcomodacaoRelationFilter, ComodidadeAcomodacaoWhereInput>
  }

  export type ComodidadeNaAcomodacaoOrderByWithRelationInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
    acomodacao?: AcomodacaoOrderByWithRelationInput
    comodidade?: ComodidadeAcomodacaoOrderByWithRelationInput
  }

  export type ComodidadeNaAcomodacaoWhereUniqueInput = Prisma.AtLeast<{
    acomodacaoId_comodidadeId?: ComodidadeNaAcomodacaoAcomodacaoIdComodidadeIdCompoundUniqueInput
    AND?: ComodidadeNaAcomodacaoWhereInput | ComodidadeNaAcomodacaoWhereInput[]
    OR?: ComodidadeNaAcomodacaoWhereInput[]
    NOT?: ComodidadeNaAcomodacaoWhereInput | ComodidadeNaAcomodacaoWhereInput[]
    acomodacaoId?: IntFilter<"ComodidadeNaAcomodacao"> | number
    comodidadeId?: IntFilter<"ComodidadeNaAcomodacao"> | number
    acomodacao?: XOR<AcomodacaoRelationFilter, AcomodacaoWhereInput>
    comodidade?: XOR<ComodidadeAcomodacaoRelationFilter, ComodidadeAcomodacaoWhereInput>
  }, "acomodacaoId_comodidadeId">

  export type ComodidadeNaAcomodacaoOrderByWithAggregationInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
    _count?: ComodidadeNaAcomodacaoCountOrderByAggregateInput
    _avg?: ComodidadeNaAcomodacaoAvgOrderByAggregateInput
    _max?: ComodidadeNaAcomodacaoMaxOrderByAggregateInput
    _min?: ComodidadeNaAcomodacaoMinOrderByAggregateInput
    _sum?: ComodidadeNaAcomodacaoSumOrderByAggregateInput
  }

  export type ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput = {
    AND?: ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput | ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput[]
    OR?: ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput[]
    NOT?: ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput | ComodidadeNaAcomodacaoScalarWhereWithAggregatesInput[]
    acomodacaoId?: IntWithAggregatesFilter<"ComodidadeNaAcomodacao"> | number
    comodidadeId?: IntWithAggregatesFilter<"ComodidadeNaAcomodacao"> | number
  }

  export type ComodidadeHotelWhereInput = {
    AND?: ComodidadeHotelWhereInput | ComodidadeHotelWhereInput[]
    OR?: ComodidadeHotelWhereInput[]
    NOT?: ComodidadeHotelWhereInput | ComodidadeHotelWhereInput[]
    id?: IntFilter<"ComodidadeHotel"> | number
    nome?: StringFilter<"ComodidadeHotel"> | string
    Hotel?: ComodidadeNoHotelListRelationFilter
  }

  export type ComodidadeHotelOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    Hotel?: ComodidadeNoHotelOrderByRelationAggregateInput
  }

  export type ComodidadeHotelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComodidadeHotelWhereInput | ComodidadeHotelWhereInput[]
    OR?: ComodidadeHotelWhereInput[]
    NOT?: ComodidadeHotelWhereInput | ComodidadeHotelWhereInput[]
    nome?: StringFilter<"ComodidadeHotel"> | string
    Hotel?: ComodidadeNoHotelListRelationFilter
  }, "id">

  export type ComodidadeHotelOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: ComodidadeHotelCountOrderByAggregateInput
    _avg?: ComodidadeHotelAvgOrderByAggregateInput
    _max?: ComodidadeHotelMaxOrderByAggregateInput
    _min?: ComodidadeHotelMinOrderByAggregateInput
    _sum?: ComodidadeHotelSumOrderByAggregateInput
  }

  export type ComodidadeHotelScalarWhereWithAggregatesInput = {
    AND?: ComodidadeHotelScalarWhereWithAggregatesInput | ComodidadeHotelScalarWhereWithAggregatesInput[]
    OR?: ComodidadeHotelScalarWhereWithAggregatesInput[]
    NOT?: ComodidadeHotelScalarWhereWithAggregatesInput | ComodidadeHotelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ComodidadeHotel"> | number
    nome?: StringWithAggregatesFilter<"ComodidadeHotel"> | string
  }

  export type ComodidadeNoHotelWhereInput = {
    AND?: ComodidadeNoHotelWhereInput | ComodidadeNoHotelWhereInput[]
    OR?: ComodidadeNoHotelWhereInput[]
    NOT?: ComodidadeNoHotelWhereInput | ComodidadeNoHotelWhereInput[]
    hotelId?: IntFilter<"ComodidadeNoHotel"> | number
    comodidadeId?: IntFilter<"ComodidadeNoHotel"> | number
    comodidade?: XOR<ComodidadeHotelRelationFilter, ComodidadeHotelWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }

  export type ComodidadeNoHotelOrderByWithRelationInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
    comodidade?: ComodidadeHotelOrderByWithRelationInput
    hotel?: HotelOrderByWithRelationInput
  }

  export type ComodidadeNoHotelWhereUniqueInput = Prisma.AtLeast<{
    hotelId_comodidadeId?: ComodidadeNoHotelHotelIdComodidadeIdCompoundUniqueInput
    AND?: ComodidadeNoHotelWhereInput | ComodidadeNoHotelWhereInput[]
    OR?: ComodidadeNoHotelWhereInput[]
    NOT?: ComodidadeNoHotelWhereInput | ComodidadeNoHotelWhereInput[]
    hotelId?: IntFilter<"ComodidadeNoHotel"> | number
    comodidadeId?: IntFilter<"ComodidadeNoHotel"> | number
    comodidade?: XOR<ComodidadeHotelRelationFilter, ComodidadeHotelWhereInput>
    hotel?: XOR<HotelRelationFilter, HotelWhereInput>
  }, "hotelId_comodidadeId">

  export type ComodidadeNoHotelOrderByWithAggregationInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
    _count?: ComodidadeNoHotelCountOrderByAggregateInput
    _avg?: ComodidadeNoHotelAvgOrderByAggregateInput
    _max?: ComodidadeNoHotelMaxOrderByAggregateInput
    _min?: ComodidadeNoHotelMinOrderByAggregateInput
    _sum?: ComodidadeNoHotelSumOrderByAggregateInput
  }

  export type ComodidadeNoHotelScalarWhereWithAggregatesInput = {
    AND?: ComodidadeNoHotelScalarWhereWithAggregatesInput | ComodidadeNoHotelScalarWhereWithAggregatesInput[]
    OR?: ComodidadeNoHotelScalarWhereWithAggregatesInput[]
    NOT?: ComodidadeNoHotelScalarWhereWithAggregatesInput | ComodidadeNoHotelScalarWhereWithAggregatesInput[]
    hotelId?: IntWithAggregatesFilter<"ComodidadeNoHotel"> | number
    comodidadeId?: IntWithAggregatesFilter<"ComodidadeNoHotel"> | number
  }

  export type EnderecoCreateInput = {
    numero?: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
    Hotel?: HotelCreateNestedManyWithoutEnderecoInput
  }

  export type EnderecoUncheckedCreateInput = {
    id?: number
    numero?: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
    Hotel?: HotelUncheckedCreateNestedManyWithoutEnderecoInput
  }

  export type EnderecoUpdateInput = {
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    Hotel?: HotelUpdateManyWithoutEnderecoNestedInput
  }

  export type EnderecoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    Hotel?: HotelUncheckedUpdateManyWithoutEnderecoNestedInput
  }

  export type EnderecoCreateManyInput = {
    id?: number
    numero?: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
  }

  export type EnderecoUpdateManyMutationInput = {
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
  }

  export type FotosHotelCreateInput = {
    url_foto: string
    id_hotel: HotelCreateNestedOneWithoutFotosHotelInput
  }

  export type FotosHotelUncheckedCreateInput = {
    id?: number
    url_foto: string
    hotelId: number
  }

  export type FotosHotelUpdateInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
    id_hotel?: HotelUpdateOneRequiredWithoutFotosHotelNestedInput
  }

  export type FotosHotelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type FotosHotelCreateManyInput = {
    id?: number
    url_foto: string
    hotelId: number
  }

  export type FotosHotelUpdateManyMutationInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotosHotelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type HotelCreateInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type HotelCreateManyInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
  }

  export type HotelUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
  }

  export type HotelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoCreateInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    cliente: ClientCreateNestedOneWithoutAvaliacaoInput
    hotel: HotelCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    hotelId: number
    clientId: number
  }

  export type AvaliacaoUpdateInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClientUpdateOneRequiredWithoutAvaliacaoNestedInput
    hotel?: HotelUpdateOneRequiredWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    hotelId?: IntFieldUpdateOperationsInput | number
    clientId?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoCreateManyInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    hotelId: number
    clientId: number
  }

  export type AvaliacaoUpdateManyMutationInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AvaliacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    hotelId?: IntFieldUpdateOperationsInput | number
    clientId?: IntFieldUpdateOperationsInput | number
  }

  export type Descricao_detalhadaCreateInput = {
    descricao?: string | null
    sobre?: string | null
    banheiro?: string | null
    quarto?: string | null
    regiao?: string | null
    id_hotel: HotelCreateNestedOneWithoutDescricao_detalhadaInput
  }

  export type Descricao_detalhadaUncheckedCreateInput = {
    id?: number
    descricao?: string | null
    sobre?: string | null
    banheiro?: string | null
    quarto?: string | null
    regiao?: string | null
    hotelId: number
  }

  export type Descricao_detalhadaUpdateInput = {
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
    id_hotel?: HotelUpdateOneRequiredWithoutDescricao_detalhadaNestedInput
  }

  export type Descricao_detalhadaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type Descricao_detalhadaCreateManyInput = {
    id?: number
    descricao?: string | null
    sobre?: string | null
    banheiro?: string | null
    quarto?: string | null
    regiao?: string | null
    hotelId: number
  }

  export type Descricao_detalhadaUpdateManyMutationInput = {
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Descricao_detalhadaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioCreateInput = {
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientUncheckedCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUncheckedUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
  }

  export type UsuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ClientCreateInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateInput = {
    id?: number
    usuarioId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientUpdateInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClientCreateManyInput = {
    id?: number
    usuarioId: number
  }

  export type ClientUpdateManyMutationInput = {

  }

  export type ClientUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioCreateInput = {
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosCreateNestedManyWithoutProprietarioInput
    usuario: UsuarioCreateNestedOneWithoutProprietarioInput
    Interesse?: ProprietarioNoInteresseCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioUncheckedCreateInput = {
    id?: number
    usuarioId: number
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedCreateNestedManyWithoutProprietarioInput
    Interesse?: ProprietarioNoInteresseUncheckedCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioUpdateInput = {
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUpdateManyWithoutProprietarioNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutProprietarioNestedInput
    Interesse?: ProprietarioNoInteresseUpdateManyWithoutProprietarioNestedInput
  }

  export type ProprietarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioNestedInput
    Interesse?: ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioNestedInput
  }

  export type ProprietarioCreateManyInput = {
    id?: number
    usuarioId: number
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
  }

  export type ProprietarioUpdateManyMutationInput = {
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProprietarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FotoUsuarioCreateInput = {
    url_foto: string
    usuario: UsuarioCreateNestedOneWithoutFotoUsuarioInput
  }

  export type FotoUsuarioUncheckedCreateInput = {
    id?: number
    url_foto: string
    usuarioId: number
  }

  export type FotoUsuarioUpdateInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutFotoUsuarioNestedInput
  }

  export type FotoUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type FotoUsuarioCreateManyInput = {
    id?: number
    url_foto: string
    usuarioId: number
  }

  export type FotoUsuarioUpdateManyMutationInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotoUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type NotificacaoCreateInput = {
    mensagem: string
    titulo: string
    leitura: boolean
    data_criacao: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacaoInput
  }

  export type NotificacaoUncheckedCreateInput = {
    id?: number
    mensagem: string
    titulo: string
    usuarioId: number
    leitura: boolean
    data_criacao: Date | string
  }

  export type NotificacaoUpdateInput = {
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacaoNestedInput
  }

  export type NotificacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoCreateManyInput = {
    id?: number
    mensagem: string
    titulo: string
    usuarioId: number
    leitura: boolean
    data_criacao: Date | string
  }

  export type NotificacaoUpdateManyMutationInput = {
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AcomodacaoCreateInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoCreateManyInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
  }

  export type AcomodacaoUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
  }

  export type AcomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type TipoAcomodacaoCreateInput = {
    nome: string
    Acomodacaoes?: AcomodacaoCreateNestedManyWithoutTipoAcomodacaoInput
  }

  export type TipoAcomodacaoUncheckedCreateInput = {
    id?: number
    nome: string
    Acomodacaoes?: AcomodacaoUncheckedCreateNestedManyWithoutTipoAcomodacaoInput
  }

  export type TipoAcomodacaoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    Acomodacaoes?: AcomodacaoUpdateManyWithoutTipoAcomodacaoNestedInput
  }

  export type TipoAcomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    Acomodacaoes?: AcomodacaoUncheckedUpdateManyWithoutTipoAcomodacaoNestedInput
  }

  export type TipoAcomodacaoCreateManyInput = {
    id?: number
    nome: string
  }

  export type TipoAcomodacaoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type TipoAcomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_AcomodacaoCreateInput = {
    url_foto: string
    acomodacao: AcomodacaoCreateNestedOneWithoutFotoAcomodacaoInput
  }

  export type Foto_AcomodacaoUncheckedCreateInput = {
    id?: number
    url_foto: string
    acomodacaoId: number
  }

  export type Foto_AcomodacaoUpdateInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutFotoAcomodacaoNestedInput
  }

  export type Foto_AcomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Foto_AcomodacaoCreateManyInput = {
    id?: number
    url_foto: string
    acomodacaoId: number
  }

  export type Foto_AcomodacaoUpdateManyMutationInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_AcomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaCreateInput = {
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    Cobranca?: CobrancaCreateNestedOneWithoutReservaInput
    acomodacao: AcomodacaoCreateNestedOneWithoutReservaInput
    cliente: ClientCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
    acomodacaoId: number
    Cobranca?: CobrancaUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaUpdateInput = {
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    Cobranca?: CobrancaUpdateOneWithoutReservaNestedInput
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutReservaNestedInput
    cliente?: ClientUpdateOneRequiredWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    clienteId?: IntFieldUpdateOperationsInput | number
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    Cobranca?: CobrancaUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaCreateManyInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
    acomodacaoId: number
  }

  export type ReservaUpdateManyMutationInput = {
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    clienteId?: IntFieldUpdateOperationsInput | number
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Gerenciamento_ganhos_acomodacaoCreateInput = {
    data?: Date | string | null
    valor_lucro?: number | null
    acomodacao: AcomodacaoCreateNestedOneWithoutGerenciamento_ganhosInput
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedCreateInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
    acomodacaoId: number
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutGerenciamento_ganhosNestedInput
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Gerenciamento_ganhos_acomodacaoCreateManyInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
    acomodacaoId: number
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateManyMutationInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoCreateInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacao: AcomodacaoCreateNestedOneWithoutAvaliacao_acomodacaoInput
    cliente: ClientCreateNestedOneWithoutAvaliacao_acomodacaoInput
  }

  export type Avaliacao_acomodacaoUncheckedCreateInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacaoId: number
    clienteId: number
  }

  export type Avaliacao_acomodacaoUpdateInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput
    cliente?: ClientUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput
  }

  export type Avaliacao_acomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoCreateManyInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacaoId: number
    clienteId: number
  }

  export type Avaliacao_acomodacaoUpdateManyMutationInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Avaliacao_acomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type CobrancaCreateInput = {
    data_pagamento?: Date | string | null
    data_vencimento?: Date | string | null
    valor?: number | null
    status?: string | null
    reserva: ReservaCreateNestedOneWithoutCobrancaInput
  }

  export type CobrancaUncheckedCreateInput = {
    id?: number
    data_pagamento?: Date | string | null
    data_vencimento?: Date | string | null
    valor?: number | null
    status?: string | null
    reservaId: number
  }

  export type CobrancaUpdateInput = {
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reserva?: ReservaUpdateOneRequiredWithoutCobrancaNestedInput
  }

  export type CobrancaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reservaId?: IntFieldUpdateOperationsInput | number
  }

  export type CobrancaCreateManyInput = {
    id?: number
    data_pagamento?: Date | string | null
    data_vencimento?: Date | string | null
    valor?: number | null
    status?: string | null
    reservaId: number
  }

  export type CobrancaUpdateManyMutationInput = {
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CobrancaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reservaId?: IntFieldUpdateOperationsInput | number
  }

  export type Gerenciamento_ganhosCreateInput = {
    data?: Date | string | null
    valor_lucro?: number | null
    proprietario: ProprietarioCreateNestedOneWithoutGerenciamento_ganhosInput
  }

  export type Gerenciamento_ganhosUncheckedCreateInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
    proprietarioId: number
  }

  export type Gerenciamento_ganhosUpdateInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    proprietario?: ProprietarioUpdateOneRequiredWithoutGerenciamento_ganhosNestedInput
  }

  export type Gerenciamento_ganhosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    proprietarioId?: IntFieldUpdateOperationsInput | number
  }

  export type Gerenciamento_ganhosCreateManyInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
    proprietarioId: number
  }

  export type Gerenciamento_ganhosUpdateManyMutationInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
    proprietarioId?: IntFieldUpdateOperationsInput | number
  }

  export type InteresseCreateInput = {
    Nome: string
    Proprietario?: ProprietarioNoInteresseCreateNestedManyWithoutInteresseInput
  }

  export type InteresseUncheckedCreateInput = {
    id?: number
    Nome: string
    Proprietario?: ProprietarioNoInteresseUncheckedCreateNestedManyWithoutInteresseInput
  }

  export type InteresseUpdateInput = {
    Nome?: StringFieldUpdateOperationsInput | string
    Proprietario?: ProprietarioNoInteresseUpdateManyWithoutInteresseNestedInput
  }

  export type InteresseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    Nome?: StringFieldUpdateOperationsInput | string
    Proprietario?: ProprietarioNoInteresseUncheckedUpdateManyWithoutInteresseNestedInput
  }

  export type InteresseCreateManyInput = {
    id?: number
    Nome: string
  }

  export type InteresseUpdateManyMutationInput = {
    Nome?: StringFieldUpdateOperationsInput | string
  }

  export type InteresseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    Nome?: StringFieldUpdateOperationsInput | string
  }

  export type ProprietarioNoInteresseCreateInput = {
    interesse: InteresseCreateNestedOneWithoutProprietarioInput
    proprietario: ProprietarioCreateNestedOneWithoutInteresseInput
  }

  export type ProprietarioNoInteresseUncheckedCreateInput = {
    proprietarioId: number
    interesseId: number
  }

  export type ProprietarioNoInteresseUpdateInput = {
    interesse?: InteresseUpdateOneRequiredWithoutProprietarioNestedInput
    proprietario?: ProprietarioUpdateOneRequiredWithoutInteresseNestedInput
  }

  export type ProprietarioNoInteresseUncheckedUpdateInput = {
    proprietarioId?: IntFieldUpdateOperationsInput | number
    interesseId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioNoInteresseCreateManyInput = {
    proprietarioId: number
    interesseId: number
  }

  export type ProprietarioNoInteresseUpdateManyMutationInput = {

  }

  export type ProprietarioNoInteresseUncheckedUpdateManyInput = {
    proprietarioId?: IntFieldUpdateOperationsInput | number
    interesseId?: IntFieldUpdateOperationsInput | number
  }

  export type CupomCreateInput = {
    codigo: string
    desconto: number
    data_validade: Date | string
    Cliente?: ClienteNoCupomCreateNestedManyWithoutCupomInput
  }

  export type CupomUncheckedCreateInput = {
    id?: number
    codigo: string
    desconto: number
    data_validade: Date | string
    Cliente?: ClienteNoCupomUncheckedCreateNestedManyWithoutCupomInput
  }

  export type CupomUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
    Cliente?: ClienteNoCupomUpdateManyWithoutCupomNestedInput
  }

  export type CupomUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
    Cliente?: ClienteNoCupomUncheckedUpdateManyWithoutCupomNestedInput
  }

  export type CupomCreateManyInput = {
    id?: number
    codigo: string
    desconto: number
    data_validade: Date | string
  }

  export type CupomUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CupomUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteNoCupomCreateInput = {
    cliente: ClientCreateNestedOneWithoutCupomInput
    cupom: CupomCreateNestedOneWithoutClienteInput
  }

  export type ClienteNoCupomUncheckedCreateInput = {
    clienteId: number
    cupomId: number
  }

  export type ClienteNoCupomUpdateInput = {
    cliente?: ClientUpdateOneRequiredWithoutCupomNestedInput
    cupom?: CupomUpdateOneRequiredWithoutClienteNestedInput
  }

  export type ClienteNoCupomUncheckedUpdateInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    cupomId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteNoCupomCreateManyInput = {
    clienteId: number
    cupomId: number
  }

  export type ClienteNoCupomUpdateManyMutationInput = {

  }

  export type ClienteNoCupomUncheckedUpdateManyInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    cupomId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoCreateInput = {
    cliente: ClientCreateNestedOneWithoutFavoritoInput
    hotel: HotelCreateNestedOneWithoutFavoritoInput
  }

  export type FavoritoUncheckedCreateInput = {
    id?: number
    clienteId: number
    hotelId: number
  }

  export type FavoritoUpdateInput = {
    cliente?: ClientUpdateOneRequiredWithoutFavoritoNestedInput
    hotel?: HotelUpdateOneRequiredWithoutFavoritoNestedInput
  }

  export type FavoritoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoCreateManyInput = {
    id?: number
    clienteId: number
    hotelId: number
  }

  export type FavoritoUpdateManyMutationInput = {

  }

  export type FavoritoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeAcomodacaoCreateInput = {
    nome: string
    Acomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutComodidadeInput
  }

  export type ComodidadeAcomodacaoUncheckedCreateInput = {
    id?: number
    nome: string
    Acomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutComodidadeInput
  }

  export type ComodidadeAcomodacaoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    Acomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutComodidadeNestedInput
  }

  export type ComodidadeAcomodacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    Acomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutComodidadeNestedInput
  }

  export type ComodidadeAcomodacaoCreateManyInput = {
    id?: number
    nome: string
  }

  export type ComodidadeAcomodacaoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeAcomodacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeNaAcomodacaoCreateInput = {
    acomodacao: AcomodacaoCreateNestedOneWithoutComodidadeNaAcomodacaoInput
    comodidade: ComodidadeAcomodacaoCreateNestedOneWithoutAcomodacaoInput
  }

  export type ComodidadeNaAcomodacaoUncheckedCreateInput = {
    acomodacaoId: number
    comodidadeId: number
  }

  export type ComodidadeNaAcomodacaoUpdateInput = {
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutComodidadeNaAcomodacaoNestedInput
    comodidade?: ComodidadeAcomodacaoUpdateOneRequiredWithoutAcomodacaoNestedInput
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateInput = {
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNaAcomodacaoCreateManyInput = {
    acomodacaoId: number
    comodidadeId: number
  }

  export type ComodidadeNaAcomodacaoUpdateManyMutationInput = {

  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateManyInput = {
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeHotelCreateInput = {
    nome: string
    Hotel?: ComodidadeNoHotelCreateNestedManyWithoutComodidadeInput
  }

  export type ComodidadeHotelUncheckedCreateInput = {
    id?: number
    nome: string
    Hotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutComodidadeInput
  }

  export type ComodidadeHotelUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    Hotel?: ComodidadeNoHotelUpdateManyWithoutComodidadeNestedInput
  }

  export type ComodidadeHotelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    Hotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutComodidadeNestedInput
  }

  export type ComodidadeHotelCreateManyInput = {
    id?: number
    nome: string
  }

  export type ComodidadeHotelUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeHotelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeNoHotelCreateInput = {
    comodidade: ComodidadeHotelCreateNestedOneWithoutHotelInput
    hotel: HotelCreateNestedOneWithoutComodidadeNoHotelInput
  }

  export type ComodidadeNoHotelUncheckedCreateInput = {
    hotelId: number
    comodidadeId: number
  }

  export type ComodidadeNoHotelUpdateInput = {
    comodidade?: ComodidadeHotelUpdateOneRequiredWithoutHotelNestedInput
    hotel?: HotelUpdateOneRequiredWithoutComodidadeNoHotelNestedInput
  }

  export type ComodidadeNoHotelUncheckedUpdateInput = {
    hotelId?: IntFieldUpdateOperationsInput | number
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNoHotelCreateManyInput = {
    hotelId: number
    comodidadeId: number
  }

  export type ComodidadeNoHotelUpdateManyMutationInput = {

  }

  export type ComodidadeNoHotelUncheckedUpdateManyInput = {
    hotelId?: IntFieldUpdateOperationsInput | number
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type HotelListRelationFilter = {
    every?: HotelWhereInput
    some?: HotelWhereInput
    none?: HotelWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type HotelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EnderecoCountOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    pais?: SortOrder
  }

  export type EnderecoAvgOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
  }

  export type EnderecoMaxOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    pais?: SortOrder
  }

  export type EnderecoMinOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    pais?: SortOrder
  }

  export type EnderecoSumOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type HotelRelationFilter = {
    is?: HotelWhereInput
    isNot?: HotelWhereInput
  }

  export type FotosHotelCountOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    hotelId?: SortOrder
  }

  export type FotosHotelAvgOrderByAggregateInput = {
    id?: SortOrder
    hotelId?: SortOrder
  }

  export type FotosHotelMaxOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    hotelId?: SortOrder
  }

  export type FotosHotelMinOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    hotelId?: SortOrder
  }

  export type FotosHotelSumOrderByAggregateInput = {
    id?: SortOrder
    hotelId?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type AcomodacaoListRelationFilter = {
    every?: AcomodacaoWhereInput
    some?: AcomodacaoWhereInput
    none?: AcomodacaoWhereInput
  }

  export type AvaliacaoListRelationFilter = {
    every?: AvaliacaoWhereInput
    some?: AvaliacaoWhereInput
    none?: AvaliacaoWhereInput
  }

  export type ComodidadeNoHotelListRelationFilter = {
    every?: ComodidadeNoHotelWhereInput
    some?: ComodidadeNoHotelWhereInput
    none?: ComodidadeNoHotelWhereInput
  }

  export type Descricao_detalhadaNullableRelationFilter = {
    is?: Descricao_detalhadaWhereInput | null
    isNot?: Descricao_detalhadaWhereInput | null
  }

  export type FavoritoListRelationFilter = {
    every?: FavoritoWhereInput
    some?: FavoritoWhereInput
    none?: FavoritoWhereInput
  }

  export type FotosHotelListRelationFilter = {
    every?: FotosHotelWhereInput
    some?: FotosHotelWhereInput
    none?: FotosHotelWhereInput
  }

  export type EnderecoRelationFilter = {
    is?: EnderecoWhereInput
    isNot?: EnderecoWhereInput
  }

  export type AcomodacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvaliacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComodidadeNoHotelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoritoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FotosHotelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HotelCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    sobre?: SortOrder
    descricao?: SortOrder
    visualizacoes?: SortOrder
    informacoes_extras?: SortOrder
    pet?: SortOrder
    enderecoId?: SortOrder
  }

  export type HotelAvgOrderByAggregateInput = {
    id?: SortOrder
    visualizacoes?: SortOrder
    enderecoId?: SortOrder
  }

  export type HotelMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    sobre?: SortOrder
    descricao?: SortOrder
    visualizacoes?: SortOrder
    informacoes_extras?: SortOrder
    pet?: SortOrder
    enderecoId?: SortOrder
  }

  export type HotelMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    telefone?: SortOrder
    sobre?: SortOrder
    descricao?: SortOrder
    visualizacoes?: SortOrder
    informacoes_extras?: SortOrder
    pet?: SortOrder
    enderecoId?: SortOrder
  }

  export type HotelSumOrderByAggregateInput = {
    id?: SortOrder
    visualizacoes?: SortOrder
    enderecoId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ClientRelationFilter = {
    is?: ClientWhereInput
    isNot?: ClientWhereInput
  }

  export type AvaliacaoCountOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
  }

  export type AvaliacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
  }

  export type AvaliacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
  }

  export type AvaliacaoMinOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
  }

  export type AvaliacaoSumOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    hotelId?: SortOrder
    clientId?: SortOrder
  }

  export type Descricao_detalhadaCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    sobre?: SortOrder
    banheiro?: SortOrder
    quarto?: SortOrder
    regiao?: SortOrder
    hotelId?: SortOrder
  }

  export type Descricao_detalhadaAvgOrderByAggregateInput = {
    id?: SortOrder
    hotelId?: SortOrder
  }

  export type Descricao_detalhadaMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    sobre?: SortOrder
    banheiro?: SortOrder
    quarto?: SortOrder
    regiao?: SortOrder
    hotelId?: SortOrder
  }

  export type Descricao_detalhadaMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    sobre?: SortOrder
    banheiro?: SortOrder
    quarto?: SortOrder
    regiao?: SortOrder
    hotelId?: SortOrder
  }

  export type Descricao_detalhadaSumOrderByAggregateInput = {
    id?: SortOrder
    hotelId?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ClientNullableRelationFilter = {
    is?: ClientWhereInput | null
    isNot?: ClientWhereInput | null
  }

  export type FotoUsuarioListRelationFilter = {
    every?: FotoUsuarioWhereInput
    some?: FotoUsuarioWhereInput
    none?: FotoUsuarioWhereInput
  }

  export type NotificacaoListRelationFilter = {
    every?: NotificacaoWhereInput
    some?: NotificacaoWhereInput
    none?: NotificacaoWhereInput
  }

  export type ProprietarioNullableRelationFilter = {
    is?: ProprietarioWhereInput | null
    isNot?: ProprietarioWhereInput | null
  }

  export type FotoUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    hash_senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    vip?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    hash_senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    vip?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    hash_senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    vip?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Avaliacao_acomodacaoListRelationFilter = {
    every?: Avaliacao_acomodacaoWhereInput
    some?: Avaliacao_acomodacaoWhereInput
    none?: Avaliacao_acomodacaoWhereInput
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type ClienteNoCupomListRelationFilter = {
    every?: ClienteNoCupomWhereInput
    some?: ClienteNoCupomWhereInput
    none?: ClienteNoCupomWhereInput
  }

  export type ReservaListRelationFilter = {
    every?: ReservaWhereInput
    some?: ReservaWhereInput
    none?: ReservaWhereInput
  }

  export type Avaliacao_acomodacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteNoCupomOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ClientAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ClientSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type Gerenciamento_ganhosListRelationFilter = {
    every?: Gerenciamento_ganhosWhereInput
    some?: Gerenciamento_ganhosWhereInput
    none?: Gerenciamento_ganhosWhereInput
  }

  export type ProprietarioNoInteresseListRelationFilter = {
    every?: ProprietarioNoInteresseWhereInput
    some?: ProprietarioNoInteresseWhereInput
    none?: ProprietarioNoInteresseWhereInput
  }

  export type Gerenciamento_ganhosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProprietarioNoInteresseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProprietarioCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrder
    avaliacao?: SortOrder
    sobre?: SortOrder
  }

  export type ProprietarioAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrder
  }

  export type ProprietarioMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrder
    avaliacao?: SortOrder
    sobre?: SortOrder
  }

  export type ProprietarioMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrder
    avaliacao?: SortOrder
    sobre?: SortOrder
  }

  export type ProprietarioSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tempo_hospedagem?: SortOrder
  }

  export type FotoUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    usuarioId?: SortOrder
  }

  export type FotoUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type FotoUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    usuarioId?: SortOrder
  }

  export type FotoUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    usuarioId?: SortOrder
  }

  export type FotoUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NotificacaoCountOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    titulo?: SortOrder
    usuarioId?: SortOrder
    leitura?: SortOrder
    data_criacao?: SortOrder
  }

  export type NotificacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type NotificacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    titulo?: SortOrder
    usuarioId?: SortOrder
    leitura?: SortOrder
    data_criacao?: SortOrder
  }

  export type NotificacaoMinOrderByAggregateInput = {
    id?: SortOrder
    mensagem?: SortOrder
    titulo?: SortOrder
    usuarioId?: SortOrder
    leitura?: SortOrder
    data_criacao?: SortOrder
  }

  export type NotificacaoSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type TipoAcomodacaoRelationFilter = {
    is?: TipoAcomodacaoWhereInput
    isNot?: TipoAcomodacaoWhereInput
  }

  export type ComodidadeNaAcomodacaoListRelationFilter = {
    every?: ComodidadeNaAcomodacaoWhereInput
    some?: ComodidadeNaAcomodacaoWhereInput
    none?: ComodidadeNaAcomodacaoWhereInput
  }

  export type Foto_AcomodacaoListRelationFilter = {
    every?: Foto_AcomodacaoWhereInput
    some?: Foto_AcomodacaoWhereInput
    none?: Foto_AcomodacaoWhereInput
  }

  export type Gerenciamento_ganhos_acomodacaoListRelationFilter = {
    every?: Gerenciamento_ganhos_acomodacaoWhereInput
    some?: Gerenciamento_ganhos_acomodacaoWhereInput
    none?: Gerenciamento_ganhos_acomodacaoWhereInput
  }

  export type ComodidadeNaAcomodacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Foto_AcomodacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Gerenciamento_ganhos_acomodacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AcomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    complemento?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
  }

  export type AcomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
  }

  export type AcomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    complemento?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
  }

  export type AcomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    complemento?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
  }

  export type AcomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
    banheiros?: SortOrder
    quartos?: SortOrder
    camas?: SortOrder
    valor_diaria?: SortOrder
    valor_pet?: SortOrder
    tipo_acomodacaoId?: SortOrder
    hotelId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type TipoAcomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type TipoAcomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoAcomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type TipoAcomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type TipoAcomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AcomodacaoRelationFilter = {
    is?: AcomodacaoWhereInput
    isNot?: AcomodacaoWhereInput
  }

  export type Foto_AcomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Foto_AcomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Foto_AcomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Foto_AcomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    url_foto?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Foto_AcomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type CobrancaNullableRelationFilter = {
    is?: CobrancaWhereInput | null
    isNot?: CobrancaWhereInput | null
  }

  export type ReservaCountOrderByAggregateInput = {
    id?: SortOrder
    data_check_in?: SortOrder
    data_check_out?: SortOrder
    quantidade_pessoas?: SortOrder
    status?: SortOrder
    aceita_pet?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type ReservaAvgOrderByAggregateInput = {
    id?: SortOrder
    quantidade_pessoas?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type ReservaMaxOrderByAggregateInput = {
    id?: SortOrder
    data_check_in?: SortOrder
    data_check_out?: SortOrder
    quantidade_pessoas?: SortOrder
    status?: SortOrder
    aceita_pet?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type ReservaMinOrderByAggregateInput = {
    id?: SortOrder
    data_check_in?: SortOrder
    data_check_out?: SortOrder
    quantidade_pessoas?: SortOrder
    status?: SortOrder
    aceita_pet?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type ReservaSumOrderByAggregateInput = {
    id?: SortOrder
    quantidade_pessoas?: SortOrder
    clienteId?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Gerenciamento_ganhos_acomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Gerenciamento_ganhos_acomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    valor_lucro?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Gerenciamento_ganhos_acomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Gerenciamento_ganhos_acomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type Gerenciamento_ganhos_acomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
    valor_lucro?: SortOrder
    acomodacaoId?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Avaliacao_acomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
  }

  export type Avaliacao_acomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
  }

  export type Avaliacao_acomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
  }

  export type Avaliacao_acomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
  }

  export type Avaliacao_acomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
    custo_beneficio?: SortOrder
    atendimento?: SortOrder
    comida?: SortOrder
    limpeza?: SortOrder
    conforto?: SortOrder
    localizacao?: SortOrder
    comentario?: SortOrder
    acomodacaoId?: SortOrder
    clienteId?: SortOrder
  }

  export type ReservaRelationFilter = {
    is?: ReservaWhereInput
    isNot?: ReservaWhereInput
  }

  export type CobrancaCountOrderByAggregateInput = {
    id?: SortOrder
    data_pagamento?: SortOrder
    data_vencimento?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    reservaId?: SortOrder
  }

  export type CobrancaAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    reservaId?: SortOrder
  }

  export type CobrancaMaxOrderByAggregateInput = {
    id?: SortOrder
    data_pagamento?: SortOrder
    data_vencimento?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    reservaId?: SortOrder
  }

  export type CobrancaMinOrderByAggregateInput = {
    id?: SortOrder
    data_pagamento?: SortOrder
    data_vencimento?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    reservaId?: SortOrder
  }

  export type CobrancaSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    reservaId?: SortOrder
  }

  export type ProprietarioRelationFilter = {
    is?: ProprietarioWhereInput
    isNot?: ProprietarioWhereInput
  }

  export type Gerenciamento_ganhosCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    proprietarioId?: SortOrder
  }

  export type Gerenciamento_ganhosAvgOrderByAggregateInput = {
    id?: SortOrder
    valor_lucro?: SortOrder
    proprietarioId?: SortOrder
  }

  export type Gerenciamento_ganhosMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    proprietarioId?: SortOrder
  }

  export type Gerenciamento_ganhosMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor_lucro?: SortOrder
    proprietarioId?: SortOrder
  }

  export type Gerenciamento_ganhosSumOrderByAggregateInput = {
    id?: SortOrder
    valor_lucro?: SortOrder
    proprietarioId?: SortOrder
  }

  export type InteresseCountOrderByAggregateInput = {
    id?: SortOrder
    Nome?: SortOrder
  }

  export type InteresseAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type InteresseMaxOrderByAggregateInput = {
    id?: SortOrder
    Nome?: SortOrder
  }

  export type InteresseMinOrderByAggregateInput = {
    id?: SortOrder
    Nome?: SortOrder
  }

  export type InteresseSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type InteresseRelationFilter = {
    is?: InteresseWhereInput
    isNot?: InteresseWhereInput
  }

  export type ProprietarioNoInteresseProprietarioIdInteresseIdCompoundUniqueInput = {
    proprietarioId: number
    interesseId: number
  }

  export type ProprietarioNoInteresseCountOrderByAggregateInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
  }

  export type ProprietarioNoInteresseAvgOrderByAggregateInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
  }

  export type ProprietarioNoInteresseMaxOrderByAggregateInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
  }

  export type ProprietarioNoInteresseMinOrderByAggregateInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
  }

  export type ProprietarioNoInteresseSumOrderByAggregateInput = {
    proprietarioId?: SortOrder
    interesseId?: SortOrder
  }

  export type CupomCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    desconto?: SortOrder
    data_validade?: SortOrder
  }

  export type CupomAvgOrderByAggregateInput = {
    id?: SortOrder
    desconto?: SortOrder
  }

  export type CupomMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    desconto?: SortOrder
    data_validade?: SortOrder
  }

  export type CupomMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    desconto?: SortOrder
    data_validade?: SortOrder
  }

  export type CupomSumOrderByAggregateInput = {
    id?: SortOrder
    desconto?: SortOrder
  }

  export type CupomRelationFilter = {
    is?: CupomWhereInput
    isNot?: CupomWhereInput
  }

  export type ClienteNoCupomClienteIdCupomIdCompoundUniqueInput = {
    clienteId: number
    cupomId: number
  }

  export type ClienteNoCupomCountOrderByAggregateInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
  }

  export type ClienteNoCupomAvgOrderByAggregateInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
  }

  export type ClienteNoCupomMaxOrderByAggregateInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
  }

  export type ClienteNoCupomMinOrderByAggregateInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
  }

  export type ClienteNoCupomSumOrderByAggregateInput = {
    clienteId?: SortOrder
    cupomId?: SortOrder
  }

  export type FavoritoCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
  }

  export type FavoritoAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
  }

  export type FavoritoMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
  }

  export type FavoritoMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
  }

  export type FavoritoSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    hotelId?: SortOrder
  }

  export type ComodidadeAcomodacaoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeAcomodacaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ComodidadeAcomodacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeAcomodacaoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeAcomodacaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ComodidadeAcomodacaoRelationFilter = {
    is?: ComodidadeAcomodacaoWhereInput
    isNot?: ComodidadeAcomodacaoWhereInput
  }

  export type ComodidadeNaAcomodacaoAcomodacaoIdComodidadeIdCompoundUniqueInput = {
    acomodacaoId: number
    comodidadeId: number
  }

  export type ComodidadeNaAcomodacaoCountOrderByAggregateInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNaAcomodacaoAvgOrderByAggregateInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNaAcomodacaoMaxOrderByAggregateInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNaAcomodacaoMinOrderByAggregateInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNaAcomodacaoSumOrderByAggregateInput = {
    acomodacaoId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeHotelCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeHotelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ComodidadeHotelMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeHotelMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type ComodidadeHotelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ComodidadeHotelRelationFilter = {
    is?: ComodidadeHotelWhereInput
    isNot?: ComodidadeHotelWhereInput
  }

  export type ComodidadeNoHotelHotelIdComodidadeIdCompoundUniqueInput = {
    hotelId: number
    comodidadeId: number
  }

  export type ComodidadeNoHotelCountOrderByAggregateInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNoHotelAvgOrderByAggregateInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNoHotelMaxOrderByAggregateInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNoHotelMinOrderByAggregateInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type ComodidadeNoHotelSumOrderByAggregateInput = {
    hotelId?: SortOrder
    comodidadeId?: SortOrder
  }

  export type HotelCreateNestedManyWithoutEnderecoInput = {
    create?: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput> | HotelCreateWithoutEnderecoInput[] | HotelUncheckedCreateWithoutEnderecoInput[]
    connectOrCreate?: HotelCreateOrConnectWithoutEnderecoInput | HotelCreateOrConnectWithoutEnderecoInput[]
    createMany?: HotelCreateManyEnderecoInputEnvelope
    connect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
  }

  export type HotelUncheckedCreateNestedManyWithoutEnderecoInput = {
    create?: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput> | HotelCreateWithoutEnderecoInput[] | HotelUncheckedCreateWithoutEnderecoInput[]
    connectOrCreate?: HotelCreateOrConnectWithoutEnderecoInput | HotelCreateOrConnectWithoutEnderecoInput[]
    createMany?: HotelCreateManyEnderecoInputEnvelope
    connect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type HotelUpdateManyWithoutEnderecoNestedInput = {
    create?: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput> | HotelCreateWithoutEnderecoInput[] | HotelUncheckedCreateWithoutEnderecoInput[]
    connectOrCreate?: HotelCreateOrConnectWithoutEnderecoInput | HotelCreateOrConnectWithoutEnderecoInput[]
    upsert?: HotelUpsertWithWhereUniqueWithoutEnderecoInput | HotelUpsertWithWhereUniqueWithoutEnderecoInput[]
    createMany?: HotelCreateManyEnderecoInputEnvelope
    set?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    disconnect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    delete?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    connect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    update?: HotelUpdateWithWhereUniqueWithoutEnderecoInput | HotelUpdateWithWhereUniqueWithoutEnderecoInput[]
    updateMany?: HotelUpdateManyWithWhereWithoutEnderecoInput | HotelUpdateManyWithWhereWithoutEnderecoInput[]
    deleteMany?: HotelScalarWhereInput | HotelScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type HotelUncheckedUpdateManyWithoutEnderecoNestedInput = {
    create?: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput> | HotelCreateWithoutEnderecoInput[] | HotelUncheckedCreateWithoutEnderecoInput[]
    connectOrCreate?: HotelCreateOrConnectWithoutEnderecoInput | HotelCreateOrConnectWithoutEnderecoInput[]
    upsert?: HotelUpsertWithWhereUniqueWithoutEnderecoInput | HotelUpsertWithWhereUniqueWithoutEnderecoInput[]
    createMany?: HotelCreateManyEnderecoInputEnvelope
    set?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    disconnect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    delete?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    connect?: HotelWhereUniqueInput | HotelWhereUniqueInput[]
    update?: HotelUpdateWithWhereUniqueWithoutEnderecoInput | HotelUpdateWithWhereUniqueWithoutEnderecoInput[]
    updateMany?: HotelUpdateManyWithWhereWithoutEnderecoInput | HotelUpdateManyWithWhereWithoutEnderecoInput[]
    deleteMany?: HotelScalarWhereInput | HotelScalarWhereInput[]
  }

  export type HotelCreateNestedOneWithoutFotosHotelInput = {
    create?: XOR<HotelCreateWithoutFotosHotelInput, HotelUncheckedCreateWithoutFotosHotelInput>
    connectOrCreate?: HotelCreateOrConnectWithoutFotosHotelInput
    connect?: HotelWhereUniqueInput
  }

  export type HotelUpdateOneRequiredWithoutFotosHotelNestedInput = {
    create?: XOR<HotelCreateWithoutFotosHotelInput, HotelUncheckedCreateWithoutFotosHotelInput>
    connectOrCreate?: HotelCreateOrConnectWithoutFotosHotelInput
    upsert?: HotelUpsertWithoutFotosHotelInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutFotosHotelInput, HotelUpdateWithoutFotosHotelInput>, HotelUncheckedUpdateWithoutFotosHotelInput>
  }

  export type AcomodacaoCreateNestedManyWithoutHotelInput = {
    create?: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput> | AcomodacaoCreateWithoutHotelInput[] | AcomodacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutHotelInput | AcomodacaoCreateOrConnectWithoutHotelInput[]
    createMany?: AcomodacaoCreateManyHotelInputEnvelope
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
  }

  export type AvaliacaoCreateNestedManyWithoutHotelInput = {
    create?: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput> | AvaliacaoCreateWithoutHotelInput[] | AvaliacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutHotelInput | AvaliacaoCreateOrConnectWithoutHotelInput[]
    createMany?: AvaliacaoCreateManyHotelInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type ComodidadeNoHotelCreateNestedManyWithoutHotelInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput> | ComodidadeNoHotelCreateWithoutHotelInput[] | ComodidadeNoHotelUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutHotelInput | ComodidadeNoHotelCreateOrConnectWithoutHotelInput[]
    createMany?: ComodidadeNoHotelCreateManyHotelInputEnvelope
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
  }

  export type Descricao_detalhadaCreateNestedOneWithoutId_hotelInput = {
    create?: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
    connectOrCreate?: Descricao_detalhadaCreateOrConnectWithoutId_hotelInput
    connect?: Descricao_detalhadaWhereUniqueInput
  }

  export type FavoritoCreateNestedManyWithoutHotelInput = {
    create?: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput> | FavoritoCreateWithoutHotelInput[] | FavoritoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutHotelInput | FavoritoCreateOrConnectWithoutHotelInput[]
    createMany?: FavoritoCreateManyHotelInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type FotosHotelCreateNestedManyWithoutId_hotelInput = {
    create?: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput> | FotosHotelCreateWithoutId_hotelInput[] | FotosHotelUncheckedCreateWithoutId_hotelInput[]
    connectOrCreate?: FotosHotelCreateOrConnectWithoutId_hotelInput | FotosHotelCreateOrConnectWithoutId_hotelInput[]
    createMany?: FotosHotelCreateManyId_hotelInputEnvelope
    connect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
  }

  export type EnderecoCreateNestedOneWithoutHotelInput = {
    create?: XOR<EnderecoCreateWithoutHotelInput, EnderecoUncheckedCreateWithoutHotelInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutHotelInput
    connect?: EnderecoWhereUniqueInput
  }

  export type AcomodacaoUncheckedCreateNestedManyWithoutHotelInput = {
    create?: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput> | AcomodacaoCreateWithoutHotelInput[] | AcomodacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutHotelInput | AcomodacaoCreateOrConnectWithoutHotelInput[]
    createMany?: AcomodacaoCreateManyHotelInputEnvelope
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutHotelInput = {
    create?: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput> | AvaliacaoCreateWithoutHotelInput[] | AvaliacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutHotelInput | AvaliacaoCreateOrConnectWithoutHotelInput[]
    createMany?: AvaliacaoCreateManyHotelInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput> | ComodidadeNoHotelCreateWithoutHotelInput[] | ComodidadeNoHotelUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutHotelInput | ComodidadeNoHotelCreateOrConnectWithoutHotelInput[]
    createMany?: ComodidadeNoHotelCreateManyHotelInputEnvelope
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
  }

  export type Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput = {
    create?: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
    connectOrCreate?: Descricao_detalhadaCreateOrConnectWithoutId_hotelInput
    connect?: Descricao_detalhadaWhereUniqueInput
  }

  export type FavoritoUncheckedCreateNestedManyWithoutHotelInput = {
    create?: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput> | FavoritoCreateWithoutHotelInput[] | FavoritoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutHotelInput | FavoritoCreateOrConnectWithoutHotelInput[]
    createMany?: FavoritoCreateManyHotelInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput = {
    create?: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput> | FotosHotelCreateWithoutId_hotelInput[] | FotosHotelUncheckedCreateWithoutId_hotelInput[]
    connectOrCreate?: FotosHotelCreateOrConnectWithoutId_hotelInput | FotosHotelCreateOrConnectWithoutId_hotelInput[]
    createMany?: FotosHotelCreateManyId_hotelInputEnvelope
    connect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type AcomodacaoUpdateManyWithoutHotelNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput> | AcomodacaoCreateWithoutHotelInput[] | AcomodacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutHotelInput | AcomodacaoCreateOrConnectWithoutHotelInput[]
    upsert?: AcomodacaoUpsertWithWhereUniqueWithoutHotelInput | AcomodacaoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: AcomodacaoCreateManyHotelInputEnvelope
    set?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    disconnect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    delete?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    update?: AcomodacaoUpdateWithWhereUniqueWithoutHotelInput | AcomodacaoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: AcomodacaoUpdateManyWithWhereWithoutHotelInput | AcomodacaoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
  }

  export type AvaliacaoUpdateManyWithoutHotelNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput> | AvaliacaoCreateWithoutHotelInput[] | AvaliacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutHotelInput | AvaliacaoCreateOrConnectWithoutHotelInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutHotelInput | AvaliacaoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: AvaliacaoCreateManyHotelInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutHotelInput | AvaliacaoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutHotelInput | AvaliacaoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ComodidadeNoHotelUpdateManyWithoutHotelNestedInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput> | ComodidadeNoHotelCreateWithoutHotelInput[] | ComodidadeNoHotelUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutHotelInput | ComodidadeNoHotelCreateOrConnectWithoutHotelInput[]
    upsert?: ComodidadeNoHotelUpsertWithWhereUniqueWithoutHotelInput | ComodidadeNoHotelUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: ComodidadeNoHotelCreateManyHotelInputEnvelope
    set?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    disconnect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    delete?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    update?: ComodidadeNoHotelUpdateWithWhereUniqueWithoutHotelInput | ComodidadeNoHotelUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: ComodidadeNoHotelUpdateManyWithWhereWithoutHotelInput | ComodidadeNoHotelUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
  }

  export type Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput = {
    create?: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
    connectOrCreate?: Descricao_detalhadaCreateOrConnectWithoutId_hotelInput
    upsert?: Descricao_detalhadaUpsertWithoutId_hotelInput
    disconnect?: Descricao_detalhadaWhereInput | boolean
    delete?: Descricao_detalhadaWhereInput | boolean
    connect?: Descricao_detalhadaWhereUniqueInput
    update?: XOR<XOR<Descricao_detalhadaUpdateToOneWithWhereWithoutId_hotelInput, Descricao_detalhadaUpdateWithoutId_hotelInput>, Descricao_detalhadaUncheckedUpdateWithoutId_hotelInput>
  }

  export type FavoritoUpdateManyWithoutHotelNestedInput = {
    create?: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput> | FavoritoCreateWithoutHotelInput[] | FavoritoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutHotelInput | FavoritoCreateOrConnectWithoutHotelInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutHotelInput | FavoritoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: FavoritoCreateManyHotelInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutHotelInput | FavoritoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutHotelInput | FavoritoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type FotosHotelUpdateManyWithoutId_hotelNestedInput = {
    create?: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput> | FotosHotelCreateWithoutId_hotelInput[] | FotosHotelUncheckedCreateWithoutId_hotelInput[]
    connectOrCreate?: FotosHotelCreateOrConnectWithoutId_hotelInput | FotosHotelCreateOrConnectWithoutId_hotelInput[]
    upsert?: FotosHotelUpsertWithWhereUniqueWithoutId_hotelInput | FotosHotelUpsertWithWhereUniqueWithoutId_hotelInput[]
    createMany?: FotosHotelCreateManyId_hotelInputEnvelope
    set?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    disconnect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    delete?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    connect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    update?: FotosHotelUpdateWithWhereUniqueWithoutId_hotelInput | FotosHotelUpdateWithWhereUniqueWithoutId_hotelInput[]
    updateMany?: FotosHotelUpdateManyWithWhereWithoutId_hotelInput | FotosHotelUpdateManyWithWhereWithoutId_hotelInput[]
    deleteMany?: FotosHotelScalarWhereInput | FotosHotelScalarWhereInput[]
  }

  export type EnderecoUpdateOneRequiredWithoutHotelNestedInput = {
    create?: XOR<EnderecoCreateWithoutHotelInput, EnderecoUncheckedCreateWithoutHotelInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutHotelInput
    upsert?: EnderecoUpsertWithoutHotelInput
    connect?: EnderecoWhereUniqueInput
    update?: XOR<XOR<EnderecoUpdateToOneWithWhereWithoutHotelInput, EnderecoUpdateWithoutHotelInput>, EnderecoUncheckedUpdateWithoutHotelInput>
  }

  export type AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput> | AcomodacaoCreateWithoutHotelInput[] | AcomodacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutHotelInput | AcomodacaoCreateOrConnectWithoutHotelInput[]
    upsert?: AcomodacaoUpsertWithWhereUniqueWithoutHotelInput | AcomodacaoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: AcomodacaoCreateManyHotelInputEnvelope
    set?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    disconnect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    delete?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    update?: AcomodacaoUpdateWithWhereUniqueWithoutHotelInput | AcomodacaoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: AcomodacaoUpdateManyWithWhereWithoutHotelInput | AcomodacaoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput> | AvaliacaoCreateWithoutHotelInput[] | AvaliacaoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutHotelInput | AvaliacaoCreateOrConnectWithoutHotelInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutHotelInput | AvaliacaoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: AvaliacaoCreateManyHotelInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutHotelInput | AvaliacaoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutHotelInput | AvaliacaoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput> | ComodidadeNoHotelCreateWithoutHotelInput[] | ComodidadeNoHotelUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutHotelInput | ComodidadeNoHotelCreateOrConnectWithoutHotelInput[]
    upsert?: ComodidadeNoHotelUpsertWithWhereUniqueWithoutHotelInput | ComodidadeNoHotelUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: ComodidadeNoHotelCreateManyHotelInputEnvelope
    set?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    disconnect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    delete?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    update?: ComodidadeNoHotelUpdateWithWhereUniqueWithoutHotelInput | ComodidadeNoHotelUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: ComodidadeNoHotelUpdateManyWithWhereWithoutHotelInput | ComodidadeNoHotelUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
  }

  export type Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput = {
    create?: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
    connectOrCreate?: Descricao_detalhadaCreateOrConnectWithoutId_hotelInput
    upsert?: Descricao_detalhadaUpsertWithoutId_hotelInput
    disconnect?: Descricao_detalhadaWhereInput | boolean
    delete?: Descricao_detalhadaWhereInput | boolean
    connect?: Descricao_detalhadaWhereUniqueInput
    update?: XOR<XOR<Descricao_detalhadaUpdateToOneWithWhereWithoutId_hotelInput, Descricao_detalhadaUpdateWithoutId_hotelInput>, Descricao_detalhadaUncheckedUpdateWithoutId_hotelInput>
  }

  export type FavoritoUncheckedUpdateManyWithoutHotelNestedInput = {
    create?: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput> | FavoritoCreateWithoutHotelInput[] | FavoritoUncheckedCreateWithoutHotelInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutHotelInput | FavoritoCreateOrConnectWithoutHotelInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutHotelInput | FavoritoUpsertWithWhereUniqueWithoutHotelInput[]
    createMany?: FavoritoCreateManyHotelInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutHotelInput | FavoritoUpdateWithWhereUniqueWithoutHotelInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutHotelInput | FavoritoUpdateManyWithWhereWithoutHotelInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput = {
    create?: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput> | FotosHotelCreateWithoutId_hotelInput[] | FotosHotelUncheckedCreateWithoutId_hotelInput[]
    connectOrCreate?: FotosHotelCreateOrConnectWithoutId_hotelInput | FotosHotelCreateOrConnectWithoutId_hotelInput[]
    upsert?: FotosHotelUpsertWithWhereUniqueWithoutId_hotelInput | FotosHotelUpsertWithWhereUniqueWithoutId_hotelInput[]
    createMany?: FotosHotelCreateManyId_hotelInputEnvelope
    set?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    disconnect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    delete?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    connect?: FotosHotelWhereUniqueInput | FotosHotelWhereUniqueInput[]
    update?: FotosHotelUpdateWithWhereUniqueWithoutId_hotelInput | FotosHotelUpdateWithWhereUniqueWithoutId_hotelInput[]
    updateMany?: FotosHotelUpdateManyWithWhereWithoutId_hotelInput | FotosHotelUpdateManyWithWhereWithoutId_hotelInput[]
    deleteMany?: FotosHotelScalarWhereInput | FotosHotelScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutAvaliacaoInput = {
    create?: XOR<ClientCreateWithoutAvaliacaoInput, ClientUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAvaliacaoInput
    connect?: ClientWhereUniqueInput
  }

  export type HotelCreateNestedOneWithoutAvaliacaoInput = {
    create?: XOR<HotelCreateWithoutAvaliacaoInput, HotelUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutAvaliacaoInput
    connect?: HotelWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutAvaliacaoNestedInput = {
    create?: XOR<ClientCreateWithoutAvaliacaoInput, ClientUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAvaliacaoInput
    upsert?: ClientUpsertWithoutAvaliacaoInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutAvaliacaoInput, ClientUpdateWithoutAvaliacaoInput>, ClientUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type HotelUpdateOneRequiredWithoutAvaliacaoNestedInput = {
    create?: XOR<HotelCreateWithoutAvaliacaoInput, HotelUncheckedCreateWithoutAvaliacaoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutAvaliacaoInput
    upsert?: HotelUpsertWithoutAvaliacaoInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutAvaliacaoInput, HotelUpdateWithoutAvaliacaoInput>, HotelUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type HotelCreateNestedOneWithoutDescricao_detalhadaInput = {
    create?: XOR<HotelCreateWithoutDescricao_detalhadaInput, HotelUncheckedCreateWithoutDescricao_detalhadaInput>
    connectOrCreate?: HotelCreateOrConnectWithoutDescricao_detalhadaInput
    connect?: HotelWhereUniqueInput
  }

  export type HotelUpdateOneRequiredWithoutDescricao_detalhadaNestedInput = {
    create?: XOR<HotelCreateWithoutDescricao_detalhadaInput, HotelUncheckedCreateWithoutDescricao_detalhadaInput>
    connectOrCreate?: HotelCreateOrConnectWithoutDescricao_detalhadaInput
    upsert?: HotelUpsertWithoutDescricao_detalhadaInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutDescricao_detalhadaInput, HotelUpdateWithoutDescricao_detalhadaInput>, HotelUncheckedUpdateWithoutDescricao_detalhadaInput>
  }

  export type ClientCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUsuarioInput
    connect?: ClientWhereUniqueInput
  }

  export type FotoUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput> | FotoUsuarioCreateWithoutUsuarioInput[] | FotoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FotoUsuarioCreateOrConnectWithoutUsuarioInput | FotoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: FotoUsuarioCreateManyUsuarioInputEnvelope
    connect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
  }

  export type NotificacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type ProprietarioCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutUsuarioInput
    connect?: ProprietarioWhereUniqueInput
  }

  export type ClientUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUsuarioInput
    connect?: ClientWhereUniqueInput
  }

  export type FotoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput> | FotoUsuarioCreateWithoutUsuarioInput[] | FotoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FotoUsuarioCreateOrConnectWithoutUsuarioInput | FotoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: FotoUsuarioCreateManyUsuarioInputEnvelope
    connect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
  }

  export type NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
  }

  export type ProprietarioUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutUsuarioInput
    connect?: ProprietarioWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ClientUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUsuarioInput
    upsert?: ClientUpsertWithoutUsuarioInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutUsuarioInput, ClientUpdateWithoutUsuarioInput>, ClientUncheckedUpdateWithoutUsuarioInput>
  }

  export type FotoUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput> | FotoUsuarioCreateWithoutUsuarioInput[] | FotoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FotoUsuarioCreateOrConnectWithoutUsuarioInput | FotoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: FotoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | FotoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FotoUsuarioCreateManyUsuarioInputEnvelope
    set?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    disconnect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    delete?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    connect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    update?: FotoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | FotoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FotoUsuarioUpdateManyWithWhereWithoutUsuarioInput | FotoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FotoUsuarioScalarWhereInput | FotoUsuarioScalarWhereInput[]
  }

  export type NotificacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput | NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput | NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutUsuarioInput | NotificacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type ProprietarioUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutUsuarioInput
    upsert?: ProprietarioUpsertWithoutUsuarioInput
    disconnect?: ProprietarioWhereInput | boolean
    delete?: ProprietarioWhereInput | boolean
    connect?: ProprietarioWhereUniqueInput
    update?: XOR<XOR<ProprietarioUpdateToOneWithWhereWithoutUsuarioInput, ProprietarioUpdateWithoutUsuarioInput>, ProprietarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type ClientUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUsuarioInput
    upsert?: ClientUpsertWithoutUsuarioInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutUsuarioInput, ClientUpdateWithoutUsuarioInput>, ClientUncheckedUpdateWithoutUsuarioInput>
  }

  export type FotoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput> | FotoUsuarioCreateWithoutUsuarioInput[] | FotoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FotoUsuarioCreateOrConnectWithoutUsuarioInput | FotoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: FotoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | FotoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FotoUsuarioCreateManyUsuarioInputEnvelope
    set?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    disconnect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    delete?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    connect?: FotoUsuarioWhereUniqueInput | FotoUsuarioWhereUniqueInput[]
    update?: FotoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | FotoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FotoUsuarioUpdateManyWithWhereWithoutUsuarioInput | FotoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FotoUsuarioScalarWhereInput | FotoUsuarioScalarWhereInput[]
  }

  export type NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput> | NotificacaoCreateWithoutUsuarioInput[] | NotificacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacaoCreateOrConnectWithoutUsuarioInput | NotificacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput | NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacaoCreateManyUsuarioInputEnvelope
    set?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    disconnect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    delete?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    connect?: NotificacaoWhereUniqueInput | NotificacaoWhereUniqueInput[]
    update?: NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput | NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacaoUpdateManyWithWhereWithoutUsuarioInput | NotificacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
  }

  export type ProprietarioUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutUsuarioInput
    upsert?: ProprietarioUpsertWithoutUsuarioInput
    disconnect?: ProprietarioWhereInput | boolean
    delete?: ProprietarioWhereInput | boolean
    connect?: ProprietarioWhereUniqueInput
    update?: XOR<XOR<ProprietarioUpdateToOneWithWhereWithoutUsuarioInput, ProprietarioUpdateWithoutUsuarioInput>, ProprietarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type AvaliacaoCreateNestedManyWithoutClienteInput = {
    create?: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput> | AvaliacaoCreateWithoutClienteInput[] | AvaliacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClienteInput | AvaliacaoCreateOrConnectWithoutClienteInput[]
    createMany?: AvaliacaoCreateManyClienteInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput> | Avaliacao_acomodacaoCreateWithoutClienteInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput | Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput[]
    createMany?: Avaliacao_acomodacaoCreateManyClienteInputEnvelope
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutClientInput = {
    create?: XOR<UsuarioCreateWithoutClientInput, UsuarioUncheckedCreateWithoutClientInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutClientInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ClienteNoCupomCreateNestedManyWithoutClienteInput = {
    create?: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput> | ClienteNoCupomCreateWithoutClienteInput[] | ClienteNoCupomUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutClienteInput | ClienteNoCupomCreateOrConnectWithoutClienteInput[]
    createMany?: ClienteNoCupomCreateManyClienteInputEnvelope
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
  }

  export type FavoritoCreateNestedManyWithoutClienteInput = {
    create?: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput> | FavoritoCreateWithoutClienteInput[] | FavoritoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutClienteInput | FavoritoCreateOrConnectWithoutClienteInput[]
    createMany?: FavoritoCreateManyClienteInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput> | ReservaCreateWithoutClienteInput[] | ReservaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutClienteInput | ReservaCreateOrConnectWithoutClienteInput[]
    createMany?: ReservaCreateManyClienteInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput> | AvaliacaoCreateWithoutClienteInput[] | AvaliacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClienteInput | AvaliacaoCreateOrConnectWithoutClienteInput[]
    createMany?: AvaliacaoCreateManyClienteInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput> | Avaliacao_acomodacaoCreateWithoutClienteInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput | Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput[]
    createMany?: Avaliacao_acomodacaoCreateManyClienteInputEnvelope
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
  }

  export type ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput> | ClienteNoCupomCreateWithoutClienteInput[] | ClienteNoCupomUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutClienteInput | ClienteNoCupomCreateOrConnectWithoutClienteInput[]
    createMany?: ClienteNoCupomCreateManyClienteInputEnvelope
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
  }

  export type FavoritoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput> | FavoritoCreateWithoutClienteInput[] | FavoritoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutClienteInput | FavoritoCreateOrConnectWithoutClienteInput[]
    createMany?: FavoritoCreateManyClienteInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput> | ReservaCreateWithoutClienteInput[] | ReservaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutClienteInput | ReservaCreateOrConnectWithoutClienteInput[]
    createMany?: ReservaCreateManyClienteInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type AvaliacaoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput> | AvaliacaoCreateWithoutClienteInput[] | AvaliacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClienteInput | AvaliacaoCreateOrConnectWithoutClienteInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutClienteInput | AvaliacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: AvaliacaoCreateManyClienteInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutClienteInput | AvaliacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutClienteInput | AvaliacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput> | Avaliacao_acomodacaoCreateWithoutClienteInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput | Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput[]
    upsert?: Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutClienteInput | Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: Avaliacao_acomodacaoCreateManyClienteInputEnvelope
    set?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    disconnect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    delete?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    update?: Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutClienteInput | Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: Avaliacao_acomodacaoUpdateManyWithWhereWithoutClienteInput | Avaliacao_acomodacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutClientNestedInput = {
    create?: XOR<UsuarioCreateWithoutClientInput, UsuarioUncheckedCreateWithoutClientInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutClientInput
    upsert?: UsuarioUpsertWithoutClientInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutClientInput, UsuarioUpdateWithoutClientInput>, UsuarioUncheckedUpdateWithoutClientInput>
  }

  export type ClienteNoCupomUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput> | ClienteNoCupomCreateWithoutClienteInput[] | ClienteNoCupomUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutClienteInput | ClienteNoCupomCreateOrConnectWithoutClienteInput[]
    upsert?: ClienteNoCupomUpsertWithWhereUniqueWithoutClienteInput | ClienteNoCupomUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ClienteNoCupomCreateManyClienteInputEnvelope
    set?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    disconnect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    delete?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    update?: ClienteNoCupomUpdateWithWhereUniqueWithoutClienteInput | ClienteNoCupomUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ClienteNoCupomUpdateManyWithWhereWithoutClienteInput | ClienteNoCupomUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
  }

  export type FavoritoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput> | FavoritoCreateWithoutClienteInput[] | FavoritoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutClienteInput | FavoritoCreateOrConnectWithoutClienteInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutClienteInput | FavoritoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: FavoritoCreateManyClienteInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutClienteInput | FavoritoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutClienteInput | FavoritoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput> | ReservaCreateWithoutClienteInput[] | ReservaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutClienteInput | ReservaCreateOrConnectWithoutClienteInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutClienteInput | ReservaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReservaCreateManyClienteInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutClienteInput | ReservaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutClienteInput | ReservaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput> | AvaliacaoCreateWithoutClienteInput[] | AvaliacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClienteInput | AvaliacaoCreateOrConnectWithoutClienteInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutClienteInput | AvaliacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: AvaliacaoCreateManyClienteInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutClienteInput | AvaliacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutClienteInput | AvaliacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput> | Avaliacao_acomodacaoCreateWithoutClienteInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput | Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput[]
    upsert?: Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutClienteInput | Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: Avaliacao_acomodacaoCreateManyClienteInputEnvelope
    set?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    disconnect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    delete?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    update?: Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutClienteInput | Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: Avaliacao_acomodacaoUpdateManyWithWhereWithoutClienteInput | Avaliacao_acomodacaoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
  }

  export type ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput> | ClienteNoCupomCreateWithoutClienteInput[] | ClienteNoCupomUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutClienteInput | ClienteNoCupomCreateOrConnectWithoutClienteInput[]
    upsert?: ClienteNoCupomUpsertWithWhereUniqueWithoutClienteInput | ClienteNoCupomUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ClienteNoCupomCreateManyClienteInputEnvelope
    set?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    disconnect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    delete?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    update?: ClienteNoCupomUpdateWithWhereUniqueWithoutClienteInput | ClienteNoCupomUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ClienteNoCupomUpdateManyWithWhereWithoutClienteInput | ClienteNoCupomUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
  }

  export type FavoritoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput> | FavoritoCreateWithoutClienteInput[] | FavoritoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutClienteInput | FavoritoCreateOrConnectWithoutClienteInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutClienteInput | FavoritoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: FavoritoCreateManyClienteInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutClienteInput | FavoritoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutClienteInput | FavoritoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput> | ReservaCreateWithoutClienteInput[] | ReservaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutClienteInput | ReservaCreateOrConnectWithoutClienteInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutClienteInput | ReservaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReservaCreateManyClienteInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutClienteInput | ReservaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutClienteInput | ReservaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type Gerenciamento_ganhosCreateNestedManyWithoutProprietarioInput = {
    create?: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput> | Gerenciamento_ganhosCreateWithoutProprietarioInput[] | Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput | Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput[]
    createMany?: Gerenciamento_ganhosCreateManyProprietarioInputEnvelope
    connect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutProprietarioInput = {
    create?: XOR<UsuarioCreateWithoutProprietarioInput, UsuarioUncheckedCreateWithoutProprietarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutProprietarioInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProprietarioNoInteresseCreateNestedManyWithoutProprietarioInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput> | ProprietarioNoInteresseCreateWithoutProprietarioInput[] | ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput | ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput[]
    createMany?: ProprietarioNoInteresseCreateManyProprietarioInputEnvelope
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
  }

  export type Gerenciamento_ganhosUncheckedCreateNestedManyWithoutProprietarioInput = {
    create?: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput> | Gerenciamento_ganhosCreateWithoutProprietarioInput[] | Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput | Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput[]
    createMany?: Gerenciamento_ganhosCreateManyProprietarioInputEnvelope
    connect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
  }

  export type ProprietarioNoInteresseUncheckedCreateNestedManyWithoutProprietarioInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput> | ProprietarioNoInteresseCreateWithoutProprietarioInput[] | ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput | ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput[]
    createMany?: ProprietarioNoInteresseCreateManyProprietarioInputEnvelope
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
  }

  export type Gerenciamento_ganhosUpdateManyWithoutProprietarioNestedInput = {
    create?: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput> | Gerenciamento_ganhosCreateWithoutProprietarioInput[] | Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput | Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput[]
    upsert?: Gerenciamento_ganhosUpsertWithWhereUniqueWithoutProprietarioInput | Gerenciamento_ganhosUpsertWithWhereUniqueWithoutProprietarioInput[]
    createMany?: Gerenciamento_ganhosCreateManyProprietarioInputEnvelope
    set?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    disconnect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    delete?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    connect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    update?: Gerenciamento_ganhosUpdateWithWhereUniqueWithoutProprietarioInput | Gerenciamento_ganhosUpdateWithWhereUniqueWithoutProprietarioInput[]
    updateMany?: Gerenciamento_ganhosUpdateManyWithWhereWithoutProprietarioInput | Gerenciamento_ganhosUpdateManyWithWhereWithoutProprietarioInput[]
    deleteMany?: Gerenciamento_ganhosScalarWhereInput | Gerenciamento_ganhosScalarWhereInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutProprietarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutProprietarioInput, UsuarioUncheckedCreateWithoutProprietarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutProprietarioInput
    upsert?: UsuarioUpsertWithoutProprietarioInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutProprietarioInput, UsuarioUpdateWithoutProprietarioInput>, UsuarioUncheckedUpdateWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseUpdateManyWithoutProprietarioNestedInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput> | ProprietarioNoInteresseCreateWithoutProprietarioInput[] | ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput | ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput[]
    upsert?: ProprietarioNoInteresseUpsertWithWhereUniqueWithoutProprietarioInput | ProprietarioNoInteresseUpsertWithWhereUniqueWithoutProprietarioInput[]
    createMany?: ProprietarioNoInteresseCreateManyProprietarioInputEnvelope
    set?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    disconnect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    delete?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    update?: ProprietarioNoInteresseUpdateWithWhereUniqueWithoutProprietarioInput | ProprietarioNoInteresseUpdateWithWhereUniqueWithoutProprietarioInput[]
    updateMany?: ProprietarioNoInteresseUpdateManyWithWhereWithoutProprietarioInput | ProprietarioNoInteresseUpdateManyWithWhereWithoutProprietarioInput[]
    deleteMany?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
  }

  export type Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioNestedInput = {
    create?: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput> | Gerenciamento_ganhosCreateWithoutProprietarioInput[] | Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput | Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput[]
    upsert?: Gerenciamento_ganhosUpsertWithWhereUniqueWithoutProprietarioInput | Gerenciamento_ganhosUpsertWithWhereUniqueWithoutProprietarioInput[]
    createMany?: Gerenciamento_ganhosCreateManyProprietarioInputEnvelope
    set?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    disconnect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    delete?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    connect?: Gerenciamento_ganhosWhereUniqueInput | Gerenciamento_ganhosWhereUniqueInput[]
    update?: Gerenciamento_ganhosUpdateWithWhereUniqueWithoutProprietarioInput | Gerenciamento_ganhosUpdateWithWhereUniqueWithoutProprietarioInput[]
    updateMany?: Gerenciamento_ganhosUpdateManyWithWhereWithoutProprietarioInput | Gerenciamento_ganhosUpdateManyWithWhereWithoutProprietarioInput[]
    deleteMany?: Gerenciamento_ganhosScalarWhereInput | Gerenciamento_ganhosScalarWhereInput[]
  }

  export type ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioNestedInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput> | ProprietarioNoInteresseCreateWithoutProprietarioInput[] | ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput | ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput[]
    upsert?: ProprietarioNoInteresseUpsertWithWhereUniqueWithoutProprietarioInput | ProprietarioNoInteresseUpsertWithWhereUniqueWithoutProprietarioInput[]
    createMany?: ProprietarioNoInteresseCreateManyProprietarioInputEnvelope
    set?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    disconnect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    delete?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    update?: ProprietarioNoInteresseUpdateWithWhereUniqueWithoutProprietarioInput | ProprietarioNoInteresseUpdateWithWhereUniqueWithoutProprietarioInput[]
    updateMany?: ProprietarioNoInteresseUpdateManyWithWhereWithoutProprietarioInput | ProprietarioNoInteresseUpdateManyWithWhereWithoutProprietarioInput[]
    deleteMany?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutFotoUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutFotoUsuarioInput, UsuarioUncheckedCreateWithoutFotoUsuarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoUsuarioInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutFotoUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutFotoUsuarioInput, UsuarioUncheckedCreateWithoutFotoUsuarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoUsuarioInput
    upsert?: UsuarioUpsertWithoutFotoUsuarioInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutFotoUsuarioInput, UsuarioUpdateWithoutFotoUsuarioInput>, UsuarioUncheckedUpdateWithoutFotoUsuarioInput>
  }

  export type UsuarioCreateNestedOneWithoutNotificacaoInput = {
    create?: XOR<UsuarioCreateWithoutNotificacaoInput, UsuarioUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacaoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateOneRequiredWithoutNotificacaoNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacaoInput, UsuarioUncheckedCreateWithoutNotificacaoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacaoInput
    upsert?: UsuarioUpsertWithoutNotificacaoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutNotificacaoInput, UsuarioUpdateWithoutNotificacaoInput>, UsuarioUncheckedUpdateWithoutNotificacaoInput>
  }

  export type HotelCreateNestedOneWithoutAcomodacaoInput = {
    create?: XOR<HotelCreateWithoutAcomodacaoInput, HotelUncheckedCreateWithoutAcomodacaoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutAcomodacaoInput
    connect?: HotelWhereUniqueInput
  }

  export type TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput = {
    create?: XOR<TipoAcomodacaoCreateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedCreateWithoutAcomodacaoesInput>
    connectOrCreate?: TipoAcomodacaoCreateOrConnectWithoutAcomodacaoesInput
    connect?: TipoAcomodacaoWhereUniqueInput
  }

  export type Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Avaliacao_acomodacaoCreateWithoutAcomodacaoInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Avaliacao_acomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
  }

  export type ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput> | ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
  }

  export type Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput> | Foto_AcomodacaoCreateWithoutAcomodacaoInput[] | Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput | Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Foto_AcomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
  }

  export type Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput[] | Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput> | ReservaCreateWithoutAcomodacaoInput[] | ReservaUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutAcomodacaoInput | ReservaCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: ReservaCreateManyAcomodacaoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Avaliacao_acomodacaoCreateWithoutAcomodacaoInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Avaliacao_acomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
  }

  export type ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput> | ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
  }

  export type Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput> | Foto_AcomodacaoCreateWithoutAcomodacaoInput[] | Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput | Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Foto_AcomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput[] | Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInputEnvelope
    connect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput = {
    create?: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput> | ReservaCreateWithoutAcomodacaoInput[] | ReservaUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutAcomodacaoInput | ReservaCreateOrConnectWithoutAcomodacaoInput[]
    createMany?: ReservaCreateManyAcomodacaoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type HotelUpdateOneRequiredWithoutAcomodacaoNestedInput = {
    create?: XOR<HotelCreateWithoutAcomodacaoInput, HotelUncheckedCreateWithoutAcomodacaoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutAcomodacaoInput
    upsert?: HotelUpsertWithoutAcomodacaoInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutAcomodacaoInput, HotelUpdateWithoutAcomodacaoInput>, HotelUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput = {
    create?: XOR<TipoAcomodacaoCreateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedCreateWithoutAcomodacaoesInput>
    connectOrCreate?: TipoAcomodacaoCreateOrConnectWithoutAcomodacaoesInput
    upsert?: TipoAcomodacaoUpsertWithoutAcomodacaoesInput
    connect?: TipoAcomodacaoWhereUniqueInput
    update?: XOR<XOR<TipoAcomodacaoUpdateToOneWithWhereWithoutAcomodacaoesInput, TipoAcomodacaoUpdateWithoutAcomodacaoesInput>, TipoAcomodacaoUncheckedUpdateWithoutAcomodacaoesInput>
  }

  export type Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Avaliacao_acomodacaoCreateWithoutAcomodacaoInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Avaliacao_acomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    disconnect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    delete?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    update?: Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Avaliacao_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Avaliacao_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
  }

  export type ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput> | ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyAcomodacaoInputEnvelope
    set?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    disconnect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    delete?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    update?: ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
  }

  export type Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput> | Foto_AcomodacaoCreateWithoutAcomodacaoInput[] | Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput | Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Foto_AcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Foto_AcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Foto_AcomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    disconnect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    delete?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    connect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    update?: Foto_AcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Foto_AcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Foto_AcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Foto_AcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Foto_AcomodacaoScalarWhereInput | Foto_AcomodacaoScalarWhereInput[]
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput[] | Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Gerenciamento_ganhos_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    disconnect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    delete?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    connect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    update?: Gerenciamento_ganhos_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Gerenciamento_ganhos_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Gerenciamento_ganhos_acomodacaoScalarWhereInput | Gerenciamento_ganhos_acomodacaoScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput> | ReservaCreateWithoutAcomodacaoInput[] | ReservaUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutAcomodacaoInput | ReservaCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutAcomodacaoInput | ReservaUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: ReservaCreateManyAcomodacaoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutAcomodacaoInput | ReservaUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutAcomodacaoInput | ReservaUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Avaliacao_acomodacaoCreateWithoutAcomodacaoInput[] | Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Avaliacao_acomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    disconnect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    delete?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    connect?: Avaliacao_acomodacaoWhereUniqueInput | Avaliacao_acomodacaoWhereUniqueInput[]
    update?: Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Avaliacao_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Avaliacao_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput> | ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyAcomodacaoInputEnvelope
    set?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    disconnect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    delete?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    update?: ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
  }

  export type Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput> | Foto_AcomodacaoCreateWithoutAcomodacaoInput[] | Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput | Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Foto_AcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Foto_AcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Foto_AcomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    disconnect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    delete?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    connect?: Foto_AcomodacaoWhereUniqueInput | Foto_AcomodacaoWhereUniqueInput[]
    update?: Foto_AcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Foto_AcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Foto_AcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Foto_AcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Foto_AcomodacaoScalarWhereInput | Foto_AcomodacaoScalarWhereInput[]
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput> | Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput[] | Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: Gerenciamento_ganhos_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInputEnvelope
    set?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    disconnect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    delete?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    connect?: Gerenciamento_ganhos_acomodacaoWhereUniqueInput | Gerenciamento_ganhos_acomodacaoWhereUniqueInput[]
    update?: Gerenciamento_ganhos_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: Gerenciamento_ganhos_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput | Gerenciamento_ganhos_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: Gerenciamento_ganhos_acomodacaoScalarWhereInput | Gerenciamento_ganhos_acomodacaoScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput = {
    create?: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput> | ReservaCreateWithoutAcomodacaoInput[] | ReservaUncheckedCreateWithoutAcomodacaoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutAcomodacaoInput | ReservaCreateOrConnectWithoutAcomodacaoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutAcomodacaoInput | ReservaUpsertWithWhereUniqueWithoutAcomodacaoInput[]
    createMany?: ReservaCreateManyAcomodacaoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutAcomodacaoInput | ReservaUpdateWithWhereUniqueWithoutAcomodacaoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutAcomodacaoInput | ReservaUpdateManyWithWhereWithoutAcomodacaoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type AcomodacaoCreateNestedManyWithoutTipoAcomodacaoInput = {
    create?: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput> | AcomodacaoCreateWithoutTipoAcomodacaoInput[] | AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput | AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput[]
    createMany?: AcomodacaoCreateManyTipoAcomodacaoInputEnvelope
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
  }

  export type AcomodacaoUncheckedCreateNestedManyWithoutTipoAcomodacaoInput = {
    create?: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput> | AcomodacaoCreateWithoutTipoAcomodacaoInput[] | AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput | AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput[]
    createMany?: AcomodacaoCreateManyTipoAcomodacaoInputEnvelope
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
  }

  export type AcomodacaoUpdateManyWithoutTipoAcomodacaoNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput> | AcomodacaoCreateWithoutTipoAcomodacaoInput[] | AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput | AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput[]
    upsert?: AcomodacaoUpsertWithWhereUniqueWithoutTipoAcomodacaoInput | AcomodacaoUpsertWithWhereUniqueWithoutTipoAcomodacaoInput[]
    createMany?: AcomodacaoCreateManyTipoAcomodacaoInputEnvelope
    set?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    disconnect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    delete?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    update?: AcomodacaoUpdateWithWhereUniqueWithoutTipoAcomodacaoInput | AcomodacaoUpdateWithWhereUniqueWithoutTipoAcomodacaoInput[]
    updateMany?: AcomodacaoUpdateManyWithWhereWithoutTipoAcomodacaoInput | AcomodacaoUpdateManyWithWhereWithoutTipoAcomodacaoInput[]
    deleteMany?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
  }

  export type AcomodacaoUncheckedUpdateManyWithoutTipoAcomodacaoNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput> | AcomodacaoCreateWithoutTipoAcomodacaoInput[] | AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput[]
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput | AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput[]
    upsert?: AcomodacaoUpsertWithWhereUniqueWithoutTipoAcomodacaoInput | AcomodacaoUpsertWithWhereUniqueWithoutTipoAcomodacaoInput[]
    createMany?: AcomodacaoCreateManyTipoAcomodacaoInputEnvelope
    set?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    disconnect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    delete?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    connect?: AcomodacaoWhereUniqueInput | AcomodacaoWhereUniqueInput[]
    update?: AcomodacaoUpdateWithWhereUniqueWithoutTipoAcomodacaoInput | AcomodacaoUpdateWithWhereUniqueWithoutTipoAcomodacaoInput[]
    updateMany?: AcomodacaoUpdateManyWithWhereWithoutTipoAcomodacaoInput | AcomodacaoUpdateManyWithWhereWithoutTipoAcomodacaoInput[]
    deleteMany?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
  }

  export type AcomodacaoCreateNestedOneWithoutFotoAcomodacaoInput = {
    create?: XOR<AcomodacaoCreateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutFotoAcomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutFotoAcomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
  }

  export type AcomodacaoUpdateOneRequiredWithoutFotoAcomodacaoNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutFotoAcomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutFotoAcomodacaoInput
    upsert?: AcomodacaoUpsertWithoutFotoAcomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
    update?: XOR<XOR<AcomodacaoUpdateToOneWithWhereWithoutFotoAcomodacaoInput, AcomodacaoUpdateWithoutFotoAcomodacaoInput>, AcomodacaoUncheckedUpdateWithoutFotoAcomodacaoInput>
  }

  export type CobrancaCreateNestedOneWithoutReservaInput = {
    create?: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
    connectOrCreate?: CobrancaCreateOrConnectWithoutReservaInput
    connect?: CobrancaWhereUniqueInput
  }

  export type AcomodacaoCreateNestedOneWithoutReservaInput = {
    create?: XOR<AcomodacaoCreateWithoutReservaInput, AcomodacaoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutReservaInput
    connect?: AcomodacaoWhereUniqueInput
  }

  export type ClientCreateNestedOneWithoutReservaInput = {
    create?: XOR<ClientCreateWithoutReservaInput, ClientUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ClientCreateOrConnectWithoutReservaInput
    connect?: ClientWhereUniqueInput
  }

  export type CobrancaUncheckedCreateNestedOneWithoutReservaInput = {
    create?: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
    connectOrCreate?: CobrancaCreateOrConnectWithoutReservaInput
    connect?: CobrancaWhereUniqueInput
  }

  export type CobrancaUpdateOneWithoutReservaNestedInput = {
    create?: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
    connectOrCreate?: CobrancaCreateOrConnectWithoutReservaInput
    upsert?: CobrancaUpsertWithoutReservaInput
    disconnect?: CobrancaWhereInput | boolean
    delete?: CobrancaWhereInput | boolean
    connect?: CobrancaWhereUniqueInput
    update?: XOR<XOR<CobrancaUpdateToOneWithWhereWithoutReservaInput, CobrancaUpdateWithoutReservaInput>, CobrancaUncheckedUpdateWithoutReservaInput>
  }

  export type AcomodacaoUpdateOneRequiredWithoutReservaNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutReservaInput, AcomodacaoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutReservaInput
    upsert?: AcomodacaoUpsertWithoutReservaInput
    connect?: AcomodacaoWhereUniqueInput
    update?: XOR<XOR<AcomodacaoUpdateToOneWithWhereWithoutReservaInput, AcomodacaoUpdateWithoutReservaInput>, AcomodacaoUncheckedUpdateWithoutReservaInput>
  }

  export type ClientUpdateOneRequiredWithoutReservaNestedInput = {
    create?: XOR<ClientCreateWithoutReservaInput, ClientUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ClientCreateOrConnectWithoutReservaInput
    upsert?: ClientUpsertWithoutReservaInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutReservaInput, ClientUpdateWithoutReservaInput>, ClientUncheckedUpdateWithoutReservaInput>
  }

  export type CobrancaUncheckedUpdateOneWithoutReservaNestedInput = {
    create?: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
    connectOrCreate?: CobrancaCreateOrConnectWithoutReservaInput
    upsert?: CobrancaUpsertWithoutReservaInput
    disconnect?: CobrancaWhereInput | boolean
    delete?: CobrancaWhereInput | boolean
    connect?: CobrancaWhereUniqueInput
    update?: XOR<XOR<CobrancaUpdateToOneWithWhereWithoutReservaInput, CobrancaUpdateWithoutReservaInput>, CobrancaUncheckedUpdateWithoutReservaInput>
  }

  export type AcomodacaoCreateNestedOneWithoutGerenciamento_ganhosInput = {
    create?: XOR<AcomodacaoCreateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedCreateWithoutGerenciamento_ganhosInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutGerenciamento_ganhosInput
    connect?: AcomodacaoWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AcomodacaoUpdateOneRequiredWithoutGerenciamento_ganhosNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedCreateWithoutGerenciamento_ganhosInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutGerenciamento_ganhosInput
    upsert?: AcomodacaoUpsertWithoutGerenciamento_ganhosInput
    connect?: AcomodacaoWhereUniqueInput
    update?: XOR<XOR<AcomodacaoUpdateToOneWithWhereWithoutGerenciamento_ganhosInput, AcomodacaoUpdateWithoutGerenciamento_ganhosInput>, AcomodacaoUncheckedUpdateWithoutGerenciamento_ganhosInput>
  }

  export type AcomodacaoCreateNestedOneWithoutAvaliacao_acomodacaoInput = {
    create?: XOR<AcomodacaoCreateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutAvaliacao_acomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
  }

  export type ClientCreateNestedOneWithoutAvaliacao_acomodacaoInput = {
    create?: XOR<ClientCreateWithoutAvaliacao_acomodacaoInput, ClientUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAvaliacao_acomodacaoInput
    connect?: ClientWhereUniqueInput
  }

  export type AcomodacaoUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutAvaliacao_acomodacaoInput
    upsert?: AcomodacaoUpsertWithoutAvaliacao_acomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
    update?: XOR<XOR<AcomodacaoUpdateToOneWithWhereWithoutAvaliacao_acomodacaoInput, AcomodacaoUpdateWithoutAvaliacao_acomodacaoInput>, AcomodacaoUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
  }

  export type ClientUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput = {
    create?: XOR<ClientCreateWithoutAvaliacao_acomodacaoInput, ClientUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAvaliacao_acomodacaoInput
    upsert?: ClientUpsertWithoutAvaliacao_acomodacaoInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutAvaliacao_acomodacaoInput, ClientUpdateWithoutAvaliacao_acomodacaoInput>, ClientUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
  }

  export type ReservaCreateNestedOneWithoutCobrancaInput = {
    create?: XOR<ReservaCreateWithoutCobrancaInput, ReservaUncheckedCreateWithoutCobrancaInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutCobrancaInput
    connect?: ReservaWhereUniqueInput
  }

  export type ReservaUpdateOneRequiredWithoutCobrancaNestedInput = {
    create?: XOR<ReservaCreateWithoutCobrancaInput, ReservaUncheckedCreateWithoutCobrancaInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutCobrancaInput
    upsert?: ReservaUpsertWithoutCobrancaInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutCobrancaInput, ReservaUpdateWithoutCobrancaInput>, ReservaUncheckedUpdateWithoutCobrancaInput>
  }

  export type ProprietarioCreateNestedOneWithoutGerenciamento_ganhosInput = {
    create?: XOR<ProprietarioCreateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedCreateWithoutGerenciamento_ganhosInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutGerenciamento_ganhosInput
    connect?: ProprietarioWhereUniqueInput
  }

  export type ProprietarioUpdateOneRequiredWithoutGerenciamento_ganhosNestedInput = {
    create?: XOR<ProprietarioCreateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedCreateWithoutGerenciamento_ganhosInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutGerenciamento_ganhosInput
    upsert?: ProprietarioUpsertWithoutGerenciamento_ganhosInput
    connect?: ProprietarioWhereUniqueInput
    update?: XOR<XOR<ProprietarioUpdateToOneWithWhereWithoutGerenciamento_ganhosInput, ProprietarioUpdateWithoutGerenciamento_ganhosInput>, ProprietarioUncheckedUpdateWithoutGerenciamento_ganhosInput>
  }

  export type ProprietarioNoInteresseCreateNestedManyWithoutInteresseInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput> | ProprietarioNoInteresseCreateWithoutInteresseInput[] | ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput | ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput[]
    createMany?: ProprietarioNoInteresseCreateManyInteresseInputEnvelope
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
  }

  export type ProprietarioNoInteresseUncheckedCreateNestedManyWithoutInteresseInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput> | ProprietarioNoInteresseCreateWithoutInteresseInput[] | ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput | ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput[]
    createMany?: ProprietarioNoInteresseCreateManyInteresseInputEnvelope
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
  }

  export type ProprietarioNoInteresseUpdateManyWithoutInteresseNestedInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput> | ProprietarioNoInteresseCreateWithoutInteresseInput[] | ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput | ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput[]
    upsert?: ProprietarioNoInteresseUpsertWithWhereUniqueWithoutInteresseInput | ProprietarioNoInteresseUpsertWithWhereUniqueWithoutInteresseInput[]
    createMany?: ProprietarioNoInteresseCreateManyInteresseInputEnvelope
    set?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    disconnect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    delete?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    update?: ProprietarioNoInteresseUpdateWithWhereUniqueWithoutInteresseInput | ProprietarioNoInteresseUpdateWithWhereUniqueWithoutInteresseInput[]
    updateMany?: ProprietarioNoInteresseUpdateManyWithWhereWithoutInteresseInput | ProprietarioNoInteresseUpdateManyWithWhereWithoutInteresseInput[]
    deleteMany?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
  }

  export type ProprietarioNoInteresseUncheckedUpdateManyWithoutInteresseNestedInput = {
    create?: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput> | ProprietarioNoInteresseCreateWithoutInteresseInput[] | ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput[]
    connectOrCreate?: ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput | ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput[]
    upsert?: ProprietarioNoInteresseUpsertWithWhereUniqueWithoutInteresseInput | ProprietarioNoInteresseUpsertWithWhereUniqueWithoutInteresseInput[]
    createMany?: ProprietarioNoInteresseCreateManyInteresseInputEnvelope
    set?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    disconnect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    delete?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    connect?: ProprietarioNoInteresseWhereUniqueInput | ProprietarioNoInteresseWhereUniqueInput[]
    update?: ProprietarioNoInteresseUpdateWithWhereUniqueWithoutInteresseInput | ProprietarioNoInteresseUpdateWithWhereUniqueWithoutInteresseInput[]
    updateMany?: ProprietarioNoInteresseUpdateManyWithWhereWithoutInteresseInput | ProprietarioNoInteresseUpdateManyWithWhereWithoutInteresseInput[]
    deleteMany?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
  }

  export type InteresseCreateNestedOneWithoutProprietarioInput = {
    create?: XOR<InteresseCreateWithoutProprietarioInput, InteresseUncheckedCreateWithoutProprietarioInput>
    connectOrCreate?: InteresseCreateOrConnectWithoutProprietarioInput
    connect?: InteresseWhereUniqueInput
  }

  export type ProprietarioCreateNestedOneWithoutInteresseInput = {
    create?: XOR<ProprietarioCreateWithoutInteresseInput, ProprietarioUncheckedCreateWithoutInteresseInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutInteresseInput
    connect?: ProprietarioWhereUniqueInput
  }

  export type InteresseUpdateOneRequiredWithoutProprietarioNestedInput = {
    create?: XOR<InteresseCreateWithoutProprietarioInput, InteresseUncheckedCreateWithoutProprietarioInput>
    connectOrCreate?: InteresseCreateOrConnectWithoutProprietarioInput
    upsert?: InteresseUpsertWithoutProprietarioInput
    connect?: InteresseWhereUniqueInput
    update?: XOR<XOR<InteresseUpdateToOneWithWhereWithoutProprietarioInput, InteresseUpdateWithoutProprietarioInput>, InteresseUncheckedUpdateWithoutProprietarioInput>
  }

  export type ProprietarioUpdateOneRequiredWithoutInteresseNestedInput = {
    create?: XOR<ProprietarioCreateWithoutInteresseInput, ProprietarioUncheckedCreateWithoutInteresseInput>
    connectOrCreate?: ProprietarioCreateOrConnectWithoutInteresseInput
    upsert?: ProprietarioUpsertWithoutInteresseInput
    connect?: ProprietarioWhereUniqueInput
    update?: XOR<XOR<ProprietarioUpdateToOneWithWhereWithoutInteresseInput, ProprietarioUpdateWithoutInteresseInput>, ProprietarioUncheckedUpdateWithoutInteresseInput>
  }

  export type ClienteNoCupomCreateNestedManyWithoutCupomInput = {
    create?: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput> | ClienteNoCupomCreateWithoutCupomInput[] | ClienteNoCupomUncheckedCreateWithoutCupomInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutCupomInput | ClienteNoCupomCreateOrConnectWithoutCupomInput[]
    createMany?: ClienteNoCupomCreateManyCupomInputEnvelope
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
  }

  export type ClienteNoCupomUncheckedCreateNestedManyWithoutCupomInput = {
    create?: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput> | ClienteNoCupomCreateWithoutCupomInput[] | ClienteNoCupomUncheckedCreateWithoutCupomInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutCupomInput | ClienteNoCupomCreateOrConnectWithoutCupomInput[]
    createMany?: ClienteNoCupomCreateManyCupomInputEnvelope
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
  }

  export type ClienteNoCupomUpdateManyWithoutCupomNestedInput = {
    create?: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput> | ClienteNoCupomCreateWithoutCupomInput[] | ClienteNoCupomUncheckedCreateWithoutCupomInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutCupomInput | ClienteNoCupomCreateOrConnectWithoutCupomInput[]
    upsert?: ClienteNoCupomUpsertWithWhereUniqueWithoutCupomInput | ClienteNoCupomUpsertWithWhereUniqueWithoutCupomInput[]
    createMany?: ClienteNoCupomCreateManyCupomInputEnvelope
    set?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    disconnect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    delete?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    update?: ClienteNoCupomUpdateWithWhereUniqueWithoutCupomInput | ClienteNoCupomUpdateWithWhereUniqueWithoutCupomInput[]
    updateMany?: ClienteNoCupomUpdateManyWithWhereWithoutCupomInput | ClienteNoCupomUpdateManyWithWhereWithoutCupomInput[]
    deleteMany?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
  }

  export type ClienteNoCupomUncheckedUpdateManyWithoutCupomNestedInput = {
    create?: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput> | ClienteNoCupomCreateWithoutCupomInput[] | ClienteNoCupomUncheckedCreateWithoutCupomInput[]
    connectOrCreate?: ClienteNoCupomCreateOrConnectWithoutCupomInput | ClienteNoCupomCreateOrConnectWithoutCupomInput[]
    upsert?: ClienteNoCupomUpsertWithWhereUniqueWithoutCupomInput | ClienteNoCupomUpsertWithWhereUniqueWithoutCupomInput[]
    createMany?: ClienteNoCupomCreateManyCupomInputEnvelope
    set?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    disconnect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    delete?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    connect?: ClienteNoCupomWhereUniqueInput | ClienteNoCupomWhereUniqueInput[]
    update?: ClienteNoCupomUpdateWithWhereUniqueWithoutCupomInput | ClienteNoCupomUpdateWithWhereUniqueWithoutCupomInput[]
    updateMany?: ClienteNoCupomUpdateManyWithWhereWithoutCupomInput | ClienteNoCupomUpdateManyWithWhereWithoutCupomInput[]
    deleteMany?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutCupomInput = {
    create?: XOR<ClientCreateWithoutCupomInput, ClientUncheckedCreateWithoutCupomInput>
    connectOrCreate?: ClientCreateOrConnectWithoutCupomInput
    connect?: ClientWhereUniqueInput
  }

  export type CupomCreateNestedOneWithoutClienteInput = {
    create?: XOR<CupomCreateWithoutClienteInput, CupomUncheckedCreateWithoutClienteInput>
    connectOrCreate?: CupomCreateOrConnectWithoutClienteInput
    connect?: CupomWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutCupomNestedInput = {
    create?: XOR<ClientCreateWithoutCupomInput, ClientUncheckedCreateWithoutCupomInput>
    connectOrCreate?: ClientCreateOrConnectWithoutCupomInput
    upsert?: ClientUpsertWithoutCupomInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutCupomInput, ClientUpdateWithoutCupomInput>, ClientUncheckedUpdateWithoutCupomInput>
  }

  export type CupomUpdateOneRequiredWithoutClienteNestedInput = {
    create?: XOR<CupomCreateWithoutClienteInput, CupomUncheckedCreateWithoutClienteInput>
    connectOrCreate?: CupomCreateOrConnectWithoutClienteInput
    upsert?: CupomUpsertWithoutClienteInput
    connect?: CupomWhereUniqueInput
    update?: XOR<XOR<CupomUpdateToOneWithWhereWithoutClienteInput, CupomUpdateWithoutClienteInput>, CupomUncheckedUpdateWithoutClienteInput>
  }

  export type ClientCreateNestedOneWithoutFavoritoInput = {
    create?: XOR<ClientCreateWithoutFavoritoInput, ClientUncheckedCreateWithoutFavoritoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutFavoritoInput
    connect?: ClientWhereUniqueInput
  }

  export type HotelCreateNestedOneWithoutFavoritoInput = {
    create?: XOR<HotelCreateWithoutFavoritoInput, HotelUncheckedCreateWithoutFavoritoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutFavoritoInput
    connect?: HotelWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutFavoritoNestedInput = {
    create?: XOR<ClientCreateWithoutFavoritoInput, ClientUncheckedCreateWithoutFavoritoInput>
    connectOrCreate?: ClientCreateOrConnectWithoutFavoritoInput
    upsert?: ClientUpsertWithoutFavoritoInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutFavoritoInput, ClientUpdateWithoutFavoritoInput>, ClientUncheckedUpdateWithoutFavoritoInput>
  }

  export type HotelUpdateOneRequiredWithoutFavoritoNestedInput = {
    create?: XOR<HotelCreateWithoutFavoritoInput, HotelUncheckedCreateWithoutFavoritoInput>
    connectOrCreate?: HotelCreateOrConnectWithoutFavoritoInput
    upsert?: HotelUpsertWithoutFavoritoInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutFavoritoInput, HotelUpdateWithoutFavoritoInput>, HotelUncheckedUpdateWithoutFavoritoInput>
  }

  export type ComodidadeNaAcomodacaoCreateNestedManyWithoutComodidadeInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput> | ComodidadeNaAcomodacaoCreateWithoutComodidadeInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyComodidadeInputEnvelope
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
  }

  export type ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutComodidadeInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput> | ComodidadeNaAcomodacaoCreateWithoutComodidadeInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyComodidadeInputEnvelope
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
  }

  export type ComodidadeNaAcomodacaoUpdateManyWithoutComodidadeNestedInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput> | ComodidadeNaAcomodacaoCreateWithoutComodidadeInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput[]
    upsert?: ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutComodidadeInput | ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutComodidadeInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyComodidadeInputEnvelope
    set?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    disconnect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    delete?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    update?: ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutComodidadeInput | ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutComodidadeInput[]
    updateMany?: ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutComodidadeInput | ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutComodidadeInput[]
    deleteMany?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutComodidadeNestedInput = {
    create?: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput> | ComodidadeNaAcomodacaoCreateWithoutComodidadeInput[] | ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput | ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput[]
    upsert?: ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutComodidadeInput | ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutComodidadeInput[]
    createMany?: ComodidadeNaAcomodacaoCreateManyComodidadeInputEnvelope
    set?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    disconnect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    delete?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    connect?: ComodidadeNaAcomodacaoWhereUniqueInput | ComodidadeNaAcomodacaoWhereUniqueInput[]
    update?: ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutComodidadeInput | ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutComodidadeInput[]
    updateMany?: ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutComodidadeInput | ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutComodidadeInput[]
    deleteMany?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
  }

  export type AcomodacaoCreateNestedOneWithoutComodidadeNaAcomodacaoInput = {
    create?: XOR<AcomodacaoCreateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedCreateWithoutComodidadeNaAcomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutComodidadeNaAcomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
  }

  export type ComodidadeAcomodacaoCreateNestedOneWithoutAcomodacaoInput = {
    create?: XOR<ComodidadeAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
    connectOrCreate?: ComodidadeAcomodacaoCreateOrConnectWithoutAcomodacaoInput
    connect?: ComodidadeAcomodacaoWhereUniqueInput
  }

  export type AcomodacaoUpdateOneRequiredWithoutComodidadeNaAcomodacaoNestedInput = {
    create?: XOR<AcomodacaoCreateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedCreateWithoutComodidadeNaAcomodacaoInput>
    connectOrCreate?: AcomodacaoCreateOrConnectWithoutComodidadeNaAcomodacaoInput
    upsert?: AcomodacaoUpsertWithoutComodidadeNaAcomodacaoInput
    connect?: AcomodacaoWhereUniqueInput
    update?: XOR<XOR<AcomodacaoUpdateToOneWithWhereWithoutComodidadeNaAcomodacaoInput, AcomodacaoUpdateWithoutComodidadeNaAcomodacaoInput>, AcomodacaoUncheckedUpdateWithoutComodidadeNaAcomodacaoInput>
  }

  export type ComodidadeAcomodacaoUpdateOneRequiredWithoutAcomodacaoNestedInput = {
    create?: XOR<ComodidadeAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
    connectOrCreate?: ComodidadeAcomodacaoCreateOrConnectWithoutAcomodacaoInput
    upsert?: ComodidadeAcomodacaoUpsertWithoutAcomodacaoInput
    connect?: ComodidadeAcomodacaoWhereUniqueInput
    update?: XOR<XOR<ComodidadeAcomodacaoUpdateToOneWithWhereWithoutAcomodacaoInput, ComodidadeAcomodacaoUpdateWithoutAcomodacaoInput>, ComodidadeAcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type ComodidadeNoHotelCreateNestedManyWithoutComodidadeInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput> | ComodidadeNoHotelCreateWithoutComodidadeInput[] | ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput | ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput[]
    createMany?: ComodidadeNoHotelCreateManyComodidadeInputEnvelope
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
  }

  export type ComodidadeNoHotelUncheckedCreateNestedManyWithoutComodidadeInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput> | ComodidadeNoHotelCreateWithoutComodidadeInput[] | ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput | ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput[]
    createMany?: ComodidadeNoHotelCreateManyComodidadeInputEnvelope
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
  }

  export type ComodidadeNoHotelUpdateManyWithoutComodidadeNestedInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput> | ComodidadeNoHotelCreateWithoutComodidadeInput[] | ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput | ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput[]
    upsert?: ComodidadeNoHotelUpsertWithWhereUniqueWithoutComodidadeInput | ComodidadeNoHotelUpsertWithWhereUniqueWithoutComodidadeInput[]
    createMany?: ComodidadeNoHotelCreateManyComodidadeInputEnvelope
    set?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    disconnect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    delete?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    update?: ComodidadeNoHotelUpdateWithWhereUniqueWithoutComodidadeInput | ComodidadeNoHotelUpdateWithWhereUniqueWithoutComodidadeInput[]
    updateMany?: ComodidadeNoHotelUpdateManyWithWhereWithoutComodidadeInput | ComodidadeNoHotelUpdateManyWithWhereWithoutComodidadeInput[]
    deleteMany?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
  }

  export type ComodidadeNoHotelUncheckedUpdateManyWithoutComodidadeNestedInput = {
    create?: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput> | ComodidadeNoHotelCreateWithoutComodidadeInput[] | ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput[]
    connectOrCreate?: ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput | ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput[]
    upsert?: ComodidadeNoHotelUpsertWithWhereUniqueWithoutComodidadeInput | ComodidadeNoHotelUpsertWithWhereUniqueWithoutComodidadeInput[]
    createMany?: ComodidadeNoHotelCreateManyComodidadeInputEnvelope
    set?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    disconnect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    delete?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    connect?: ComodidadeNoHotelWhereUniqueInput | ComodidadeNoHotelWhereUniqueInput[]
    update?: ComodidadeNoHotelUpdateWithWhereUniqueWithoutComodidadeInput | ComodidadeNoHotelUpdateWithWhereUniqueWithoutComodidadeInput[]
    updateMany?: ComodidadeNoHotelUpdateManyWithWhereWithoutComodidadeInput | ComodidadeNoHotelUpdateManyWithWhereWithoutComodidadeInput[]
    deleteMany?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
  }

  export type ComodidadeHotelCreateNestedOneWithoutHotelInput = {
    create?: XOR<ComodidadeHotelCreateWithoutHotelInput, ComodidadeHotelUncheckedCreateWithoutHotelInput>
    connectOrCreate?: ComodidadeHotelCreateOrConnectWithoutHotelInput
    connect?: ComodidadeHotelWhereUniqueInput
  }

  export type HotelCreateNestedOneWithoutComodidadeNoHotelInput = {
    create?: XOR<HotelCreateWithoutComodidadeNoHotelInput, HotelUncheckedCreateWithoutComodidadeNoHotelInput>
    connectOrCreate?: HotelCreateOrConnectWithoutComodidadeNoHotelInput
    connect?: HotelWhereUniqueInput
  }

  export type ComodidadeHotelUpdateOneRequiredWithoutHotelNestedInput = {
    create?: XOR<ComodidadeHotelCreateWithoutHotelInput, ComodidadeHotelUncheckedCreateWithoutHotelInput>
    connectOrCreate?: ComodidadeHotelCreateOrConnectWithoutHotelInput
    upsert?: ComodidadeHotelUpsertWithoutHotelInput
    connect?: ComodidadeHotelWhereUniqueInput
    update?: XOR<XOR<ComodidadeHotelUpdateToOneWithWhereWithoutHotelInput, ComodidadeHotelUpdateWithoutHotelInput>, ComodidadeHotelUncheckedUpdateWithoutHotelInput>
  }

  export type HotelUpdateOneRequiredWithoutComodidadeNoHotelNestedInput = {
    create?: XOR<HotelCreateWithoutComodidadeNoHotelInput, HotelUncheckedCreateWithoutComodidadeNoHotelInput>
    connectOrCreate?: HotelCreateOrConnectWithoutComodidadeNoHotelInput
    upsert?: HotelUpsertWithoutComodidadeNoHotelInput
    connect?: HotelWhereUniqueInput
    update?: XOR<XOR<HotelUpdateToOneWithWhereWithoutComodidadeNoHotelInput, HotelUpdateWithoutComodidadeNoHotelInput>, HotelUncheckedUpdateWithoutComodidadeNoHotelInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type HotelCreateWithoutEnderecoInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
  }

  export type HotelUncheckedCreateWithoutEnderecoInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutEnderecoInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput>
  }

  export type HotelCreateManyEnderecoInputEnvelope = {
    data: HotelCreateManyEnderecoInput | HotelCreateManyEnderecoInput[]
    skipDuplicates?: boolean
  }

  export type HotelUpsertWithWhereUniqueWithoutEnderecoInput = {
    where: HotelWhereUniqueInput
    update: XOR<HotelUpdateWithoutEnderecoInput, HotelUncheckedUpdateWithoutEnderecoInput>
    create: XOR<HotelCreateWithoutEnderecoInput, HotelUncheckedCreateWithoutEnderecoInput>
  }

  export type HotelUpdateWithWhereUniqueWithoutEnderecoInput = {
    where: HotelWhereUniqueInput
    data: XOR<HotelUpdateWithoutEnderecoInput, HotelUncheckedUpdateWithoutEnderecoInput>
  }

  export type HotelUpdateManyWithWhereWithoutEnderecoInput = {
    where: HotelScalarWhereInput
    data: XOR<HotelUpdateManyMutationInput, HotelUncheckedUpdateManyWithoutEnderecoInput>
  }

  export type HotelScalarWhereInput = {
    AND?: HotelScalarWhereInput | HotelScalarWhereInput[]
    OR?: HotelScalarWhereInput[]
    NOT?: HotelScalarWhereInput | HotelScalarWhereInput[]
    id?: IntFilter<"Hotel"> | number
    nome?: StringFilter<"Hotel"> | string
    telefone?: StringFilter<"Hotel"> | string
    sobre?: StringNullableFilter<"Hotel"> | string | null
    descricao?: StringNullableFilter<"Hotel"> | string | null
    visualizacoes?: IntFilter<"Hotel"> | number
    informacoes_extras?: StringNullableFilter<"Hotel"> | string | null
    pet?: BoolFilter<"Hotel"> | boolean
    enderecoId?: IntFilter<"Hotel"> | number
  }

  export type HotelCreateWithoutFotosHotelInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutFotosHotelInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
  }

  export type HotelCreateOrConnectWithoutFotosHotelInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutFotosHotelInput, HotelUncheckedCreateWithoutFotosHotelInput>
  }

  export type HotelUpsertWithoutFotosHotelInput = {
    update: XOR<HotelUpdateWithoutFotosHotelInput, HotelUncheckedUpdateWithoutFotosHotelInput>
    create: XOR<HotelCreateWithoutFotosHotelInput, HotelUncheckedCreateWithoutFotosHotelInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutFotosHotelInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutFotosHotelInput, HotelUncheckedUpdateWithoutFotosHotelInput>
  }

  export type HotelUpdateWithoutFotosHotelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutFotosHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
  }

  export type AcomodacaoCreateWithoutHotelInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutHotelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutHotelInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput>
  }

  export type AcomodacaoCreateManyHotelInputEnvelope = {
    data: AcomodacaoCreateManyHotelInput | AcomodacaoCreateManyHotelInput[]
    skipDuplicates?: boolean
  }

  export type AvaliacaoCreateWithoutHotelInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    cliente: ClientCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateWithoutHotelInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    clientId: number
  }

  export type AvaliacaoCreateOrConnectWithoutHotelInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput>
  }

  export type AvaliacaoCreateManyHotelInputEnvelope = {
    data: AvaliacaoCreateManyHotelInput | AvaliacaoCreateManyHotelInput[]
    skipDuplicates?: boolean
  }

  export type ComodidadeNoHotelCreateWithoutHotelInput = {
    comodidade: ComodidadeHotelCreateNestedOneWithoutHotelInput
  }

  export type ComodidadeNoHotelUncheckedCreateWithoutHotelInput = {
    comodidadeId: number
  }

  export type ComodidadeNoHotelCreateOrConnectWithoutHotelInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    create: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput>
  }

  export type ComodidadeNoHotelCreateManyHotelInputEnvelope = {
    data: ComodidadeNoHotelCreateManyHotelInput | ComodidadeNoHotelCreateManyHotelInput[]
    skipDuplicates?: boolean
  }

  export type Descricao_detalhadaCreateWithoutId_hotelInput = {
    descricao?: string | null
    sobre?: string | null
    banheiro?: string | null
    quarto?: string | null
    regiao?: string | null
  }

  export type Descricao_detalhadaUncheckedCreateWithoutId_hotelInput = {
    id?: number
    descricao?: string | null
    sobre?: string | null
    banheiro?: string | null
    quarto?: string | null
    regiao?: string | null
  }

  export type Descricao_detalhadaCreateOrConnectWithoutId_hotelInput = {
    where: Descricao_detalhadaWhereUniqueInput
    create: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
  }

  export type FavoritoCreateWithoutHotelInput = {
    cliente: ClientCreateNestedOneWithoutFavoritoInput
  }

  export type FavoritoUncheckedCreateWithoutHotelInput = {
    id?: number
    clienteId: number
  }

  export type FavoritoCreateOrConnectWithoutHotelInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput>
  }

  export type FavoritoCreateManyHotelInputEnvelope = {
    data: FavoritoCreateManyHotelInput | FavoritoCreateManyHotelInput[]
    skipDuplicates?: boolean
  }

  export type FotosHotelCreateWithoutId_hotelInput = {
    url_foto: string
  }

  export type FotosHotelUncheckedCreateWithoutId_hotelInput = {
    id?: number
    url_foto: string
  }

  export type FotosHotelCreateOrConnectWithoutId_hotelInput = {
    where: FotosHotelWhereUniqueInput
    create: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput>
  }

  export type FotosHotelCreateManyId_hotelInputEnvelope = {
    data: FotosHotelCreateManyId_hotelInput | FotosHotelCreateManyId_hotelInput[]
    skipDuplicates?: boolean
  }

  export type EnderecoCreateWithoutHotelInput = {
    numero?: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
  }

  export type EnderecoUncheckedCreateWithoutHotelInput = {
    id?: number
    numero?: number | null
    rua: string
    bairro: string
    cidade: string
    estado: string
    pais: string
  }

  export type EnderecoCreateOrConnectWithoutHotelInput = {
    where: EnderecoWhereUniqueInput
    create: XOR<EnderecoCreateWithoutHotelInput, EnderecoUncheckedCreateWithoutHotelInput>
  }

  export type AcomodacaoUpsertWithWhereUniqueWithoutHotelInput = {
    where: AcomodacaoWhereUniqueInput
    update: XOR<AcomodacaoUpdateWithoutHotelInput, AcomodacaoUncheckedUpdateWithoutHotelInput>
    create: XOR<AcomodacaoCreateWithoutHotelInput, AcomodacaoUncheckedCreateWithoutHotelInput>
  }

  export type AcomodacaoUpdateWithWhereUniqueWithoutHotelInput = {
    where: AcomodacaoWhereUniqueInput
    data: XOR<AcomodacaoUpdateWithoutHotelInput, AcomodacaoUncheckedUpdateWithoutHotelInput>
  }

  export type AcomodacaoUpdateManyWithWhereWithoutHotelInput = {
    where: AcomodacaoScalarWhereInput
    data: XOR<AcomodacaoUpdateManyMutationInput, AcomodacaoUncheckedUpdateManyWithoutHotelInput>
  }

  export type AcomodacaoScalarWhereInput = {
    AND?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
    OR?: AcomodacaoScalarWhereInput[]
    NOT?: AcomodacaoScalarWhereInput | AcomodacaoScalarWhereInput[]
    id?: IntFilter<"Acomodacao"> | number
    titulo?: StringFilter<"Acomodacao"> | string
    descricao?: StringNullableFilter<"Acomodacao"> | string | null
    banheiros?: IntFilter<"Acomodacao"> | number
    quartos?: IntFilter<"Acomodacao"> | number
    camas?: IntFilter<"Acomodacao"> | number
    valor_diaria?: FloatFilter<"Acomodacao"> | number
    valor_pet?: FloatFilter<"Acomodacao"> | number
    complemento?: StringFilter<"Acomodacao"> | string
    tipo_acomodacaoId?: IntFilter<"Acomodacao"> | number
    hotelId?: IntFilter<"Acomodacao"> | number
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutHotelInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutHotelInput, AvaliacaoUncheckedUpdateWithoutHotelInput>
    create: XOR<AvaliacaoCreateWithoutHotelInput, AvaliacaoUncheckedCreateWithoutHotelInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutHotelInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutHotelInput, AvaliacaoUncheckedUpdateWithoutHotelInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutHotelInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutHotelInput>
  }

  export type AvaliacaoScalarWhereInput = {
    AND?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    OR?: AvaliacaoScalarWhereInput[]
    NOT?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    id?: IntFilter<"Avaliacao"> | number
    custo_beneficio?: IntFilter<"Avaliacao"> | number
    atendimento?: IntFilter<"Avaliacao"> | number
    comida?: IntFilter<"Avaliacao"> | number
    limpeza?: IntFilter<"Avaliacao"> | number
    conforto?: IntFilter<"Avaliacao"> | number
    localizacao?: IntFilter<"Avaliacao"> | number
    comentario?: IntNullableFilter<"Avaliacao"> | number | null
    hotelId?: IntFilter<"Avaliacao"> | number
    clientId?: IntFilter<"Avaliacao"> | number
  }

  export type ComodidadeNoHotelUpsertWithWhereUniqueWithoutHotelInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    update: XOR<ComodidadeNoHotelUpdateWithoutHotelInput, ComodidadeNoHotelUncheckedUpdateWithoutHotelInput>
    create: XOR<ComodidadeNoHotelCreateWithoutHotelInput, ComodidadeNoHotelUncheckedCreateWithoutHotelInput>
  }

  export type ComodidadeNoHotelUpdateWithWhereUniqueWithoutHotelInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    data: XOR<ComodidadeNoHotelUpdateWithoutHotelInput, ComodidadeNoHotelUncheckedUpdateWithoutHotelInput>
  }

  export type ComodidadeNoHotelUpdateManyWithWhereWithoutHotelInput = {
    where: ComodidadeNoHotelScalarWhereInput
    data: XOR<ComodidadeNoHotelUpdateManyMutationInput, ComodidadeNoHotelUncheckedUpdateManyWithoutHotelInput>
  }

  export type ComodidadeNoHotelScalarWhereInput = {
    AND?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
    OR?: ComodidadeNoHotelScalarWhereInput[]
    NOT?: ComodidadeNoHotelScalarWhereInput | ComodidadeNoHotelScalarWhereInput[]
    hotelId?: IntFilter<"ComodidadeNoHotel"> | number
    comodidadeId?: IntFilter<"ComodidadeNoHotel"> | number
  }

  export type Descricao_detalhadaUpsertWithoutId_hotelInput = {
    update: XOR<Descricao_detalhadaUpdateWithoutId_hotelInput, Descricao_detalhadaUncheckedUpdateWithoutId_hotelInput>
    create: XOR<Descricao_detalhadaCreateWithoutId_hotelInput, Descricao_detalhadaUncheckedCreateWithoutId_hotelInput>
    where?: Descricao_detalhadaWhereInput
  }

  export type Descricao_detalhadaUpdateToOneWithWhereWithoutId_hotelInput = {
    where?: Descricao_detalhadaWhereInput
    data: XOR<Descricao_detalhadaUpdateWithoutId_hotelInput, Descricao_detalhadaUncheckedUpdateWithoutId_hotelInput>
  }

  export type Descricao_detalhadaUpdateWithoutId_hotelInput = {
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Descricao_detalhadaUncheckedUpdateWithoutId_hotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    banheiro?: NullableStringFieldUpdateOperationsInput | string | null
    quarto?: NullableStringFieldUpdateOperationsInput | string | null
    regiao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoritoUpsertWithWhereUniqueWithoutHotelInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutHotelInput, FavoritoUncheckedUpdateWithoutHotelInput>
    create: XOR<FavoritoCreateWithoutHotelInput, FavoritoUncheckedCreateWithoutHotelInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutHotelInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutHotelInput, FavoritoUncheckedUpdateWithoutHotelInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutHotelInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutHotelInput>
  }

  export type FavoritoScalarWhereInput = {
    AND?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    OR?: FavoritoScalarWhereInput[]
    NOT?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    id?: IntFilter<"Favorito"> | number
    clienteId?: IntFilter<"Favorito"> | number
    hotelId?: IntFilter<"Favorito"> | number
  }

  export type FotosHotelUpsertWithWhereUniqueWithoutId_hotelInput = {
    where: FotosHotelWhereUniqueInput
    update: XOR<FotosHotelUpdateWithoutId_hotelInput, FotosHotelUncheckedUpdateWithoutId_hotelInput>
    create: XOR<FotosHotelCreateWithoutId_hotelInput, FotosHotelUncheckedCreateWithoutId_hotelInput>
  }

  export type FotosHotelUpdateWithWhereUniqueWithoutId_hotelInput = {
    where: FotosHotelWhereUniqueInput
    data: XOR<FotosHotelUpdateWithoutId_hotelInput, FotosHotelUncheckedUpdateWithoutId_hotelInput>
  }

  export type FotosHotelUpdateManyWithWhereWithoutId_hotelInput = {
    where: FotosHotelScalarWhereInput
    data: XOR<FotosHotelUpdateManyMutationInput, FotosHotelUncheckedUpdateManyWithoutId_hotelInput>
  }

  export type FotosHotelScalarWhereInput = {
    AND?: FotosHotelScalarWhereInput | FotosHotelScalarWhereInput[]
    OR?: FotosHotelScalarWhereInput[]
    NOT?: FotosHotelScalarWhereInput | FotosHotelScalarWhereInput[]
    id?: IntFilter<"FotosHotel"> | number
    url_foto?: StringFilter<"FotosHotel"> | string
    hotelId?: IntFilter<"FotosHotel"> | number
  }

  export type EnderecoUpsertWithoutHotelInput = {
    update: XOR<EnderecoUpdateWithoutHotelInput, EnderecoUncheckedUpdateWithoutHotelInput>
    create: XOR<EnderecoCreateWithoutHotelInput, EnderecoUncheckedCreateWithoutHotelInput>
    where?: EnderecoWhereInput
  }

  export type EnderecoUpdateToOneWithWhereWithoutHotelInput = {
    where?: EnderecoWhereInput
    data: XOR<EnderecoUpdateWithoutHotelInput, EnderecoUncheckedUpdateWithoutHotelInput>
  }

  export type EnderecoUpdateWithoutHotelInput = {
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUncheckedUpdateWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    rua?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
  }

  export type ClientCreateWithoutAvaliacaoInput = {
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutAvaliacaoInput = {
    id?: number
    usuarioId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutAvaliacaoInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutAvaliacaoInput, ClientUncheckedCreateWithoutAvaliacaoInput>
  }

  export type HotelCreateWithoutAvaliacaoInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutAvaliacaoInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutAvaliacaoInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutAvaliacaoInput, HotelUncheckedCreateWithoutAvaliacaoInput>
  }

  export type ClientUpsertWithoutAvaliacaoInput = {
    update: XOR<ClientUpdateWithoutAvaliacaoInput, ClientUncheckedUpdateWithoutAvaliacaoInput>
    create: XOR<ClientCreateWithoutAvaliacaoInput, ClientUncheckedCreateWithoutAvaliacaoInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutAvaliacaoInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutAvaliacaoInput, ClientUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type ClientUpdateWithoutAvaliacaoInput = {
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type HotelUpsertWithoutAvaliacaoInput = {
    update: XOR<HotelUpdateWithoutAvaliacaoInput, HotelUncheckedUpdateWithoutAvaliacaoInput>
    create: XOR<HotelCreateWithoutAvaliacaoInput, HotelUncheckedCreateWithoutAvaliacaoInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutAvaliacaoInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutAvaliacaoInput, HotelUncheckedUpdateWithoutAvaliacaoInput>
  }

  export type HotelUpdateWithoutAvaliacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutAvaliacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type HotelCreateWithoutDescricao_detalhadaInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutDescricao_detalhadaInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutDescricao_detalhadaInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutDescricao_detalhadaInput, HotelUncheckedCreateWithoutDescricao_detalhadaInput>
  }

  export type HotelUpsertWithoutDescricao_detalhadaInput = {
    update: XOR<HotelUpdateWithoutDescricao_detalhadaInput, HotelUncheckedUpdateWithoutDescricao_detalhadaInput>
    create: XOR<HotelCreateWithoutDescricao_detalhadaInput, HotelUncheckedCreateWithoutDescricao_detalhadaInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutDescricao_detalhadaInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutDescricao_detalhadaInput, HotelUncheckedUpdateWithoutDescricao_detalhadaInput>
  }

  export type HotelUpdateWithoutDescricao_detalhadaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutDescricao_detalhadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type ClientCreateWithoutUsuarioInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutUsuarioInput = {
    id?: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutUsuarioInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
  }

  export type FotoUsuarioCreateWithoutUsuarioInput = {
    url_foto: string
  }

  export type FotoUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    url_foto: string
  }

  export type FotoUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: FotoUsuarioWhereUniqueInput
    create: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type FotoUsuarioCreateManyUsuarioInputEnvelope = {
    data: FotoUsuarioCreateManyUsuarioInput | FotoUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type NotificacaoCreateWithoutUsuarioInput = {
    mensagem: string
    titulo: string
    leitura: boolean
    data_criacao: Date | string
  }

  export type NotificacaoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    mensagem: string
    titulo: string
    leitura: boolean
    data_criacao: Date | string
  }

  export type NotificacaoCreateOrConnectWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    create: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacaoCreateManyUsuarioInputEnvelope = {
    data: NotificacaoCreateManyUsuarioInput | NotificacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ProprietarioCreateWithoutUsuarioInput = {
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosCreateNestedManyWithoutProprietarioInput
    Interesse?: ProprietarioNoInteresseCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedCreateNestedManyWithoutProprietarioInput
    Interesse?: ProprietarioNoInteresseUncheckedCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioCreateOrConnectWithoutUsuarioInput = {
    where: ProprietarioWhereUniqueInput
    create: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
  }

  export type ClientUpsertWithoutUsuarioInput = {
    update: XOR<ClientUpdateWithoutUsuarioInput, ClientUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ClientCreateWithoutUsuarioInput, ClientUncheckedCreateWithoutUsuarioInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutUsuarioInput, ClientUncheckedUpdateWithoutUsuarioInput>
  }

  export type ClientUpdateWithoutUsuarioInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type FotoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: FotoUsuarioWhereUniqueInput
    update: XOR<FotoUsuarioUpdateWithoutUsuarioInput, FotoUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<FotoUsuarioCreateWithoutUsuarioInput, FotoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type FotoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: FotoUsuarioWhereUniqueInput
    data: XOR<FotoUsuarioUpdateWithoutUsuarioInput, FotoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type FotoUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: FotoUsuarioScalarWhereInput
    data: XOR<FotoUsuarioUpdateManyMutationInput, FotoUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type FotoUsuarioScalarWhereInput = {
    AND?: FotoUsuarioScalarWhereInput | FotoUsuarioScalarWhereInput[]
    OR?: FotoUsuarioScalarWhereInput[]
    NOT?: FotoUsuarioScalarWhereInput | FotoUsuarioScalarWhereInput[]
    id?: IntFilter<"FotoUsuario"> | number
    url_foto?: StringFilter<"FotoUsuario"> | string
    usuarioId?: IntFilter<"FotoUsuario"> | number
  }

  export type NotificacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    update: XOR<NotificacaoUpdateWithoutUsuarioInput, NotificacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacaoCreateWithoutUsuarioInput, NotificacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacaoWhereUniqueInput
    data: XOR<NotificacaoUpdateWithoutUsuarioInput, NotificacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacaoScalarWhereInput
    data: XOR<NotificacaoUpdateManyMutationInput, NotificacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type NotificacaoScalarWhereInput = {
    AND?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    OR?: NotificacaoScalarWhereInput[]
    NOT?: NotificacaoScalarWhereInput | NotificacaoScalarWhereInput[]
    id?: IntFilter<"Notificacao"> | number
    mensagem?: StringFilter<"Notificacao"> | string
    titulo?: StringFilter<"Notificacao"> | string
    usuarioId?: IntFilter<"Notificacao"> | number
    leitura?: BoolFilter<"Notificacao"> | boolean
    data_criacao?: DateTimeFilter<"Notificacao"> | Date | string
  }

  export type ProprietarioUpsertWithoutUsuarioInput = {
    update: XOR<ProprietarioUpdateWithoutUsuarioInput, ProprietarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ProprietarioCreateWithoutUsuarioInput, ProprietarioUncheckedCreateWithoutUsuarioInput>
    where?: ProprietarioWhereInput
  }

  export type ProprietarioUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ProprietarioWhereInput
    data: XOR<ProprietarioUpdateWithoutUsuarioInput, ProprietarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type ProprietarioUpdateWithoutUsuarioInput = {
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUpdateManyWithoutProprietarioNestedInput
    Interesse?: ProprietarioNoInteresseUpdateManyWithoutProprietarioNestedInput
  }

  export type ProprietarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioNestedInput
    Interesse?: ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioNestedInput
  }

  export type AvaliacaoCreateWithoutClienteInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    hotel: HotelCreateNestedOneWithoutAvaliacaoInput
  }

  export type AvaliacaoUncheckedCreateWithoutClienteInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    hotelId: number
  }

  export type AvaliacaoCreateOrConnectWithoutClienteInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput>
  }

  export type AvaliacaoCreateManyClienteInputEnvelope = {
    data: AvaliacaoCreateManyClienteInput | AvaliacaoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type Avaliacao_acomodacaoCreateWithoutClienteInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacao: AcomodacaoCreateNestedOneWithoutAvaliacao_acomodacaoInput
  }

  export type Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacaoId: number
  }

  export type Avaliacao_acomodacaoCreateOrConnectWithoutClienteInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    create: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput>
  }

  export type Avaliacao_acomodacaoCreateManyClienteInputEnvelope = {
    data: Avaliacao_acomodacaoCreateManyClienteInput | Avaliacao_acomodacaoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutClientInput = {
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    FotoUsuario?: FotoUsuarioCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutClientInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    FotoUsuario?: FotoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutClientInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutClientInput, UsuarioUncheckedCreateWithoutClientInput>
  }

  export type ClienteNoCupomCreateWithoutClienteInput = {
    cupom: CupomCreateNestedOneWithoutClienteInput
  }

  export type ClienteNoCupomUncheckedCreateWithoutClienteInput = {
    cupomId: number
  }

  export type ClienteNoCupomCreateOrConnectWithoutClienteInput = {
    where: ClienteNoCupomWhereUniqueInput
    create: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput>
  }

  export type ClienteNoCupomCreateManyClienteInputEnvelope = {
    data: ClienteNoCupomCreateManyClienteInput | ClienteNoCupomCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type FavoritoCreateWithoutClienteInput = {
    hotel: HotelCreateNestedOneWithoutFavoritoInput
  }

  export type FavoritoUncheckedCreateWithoutClienteInput = {
    id?: number
    hotelId: number
  }

  export type FavoritoCreateOrConnectWithoutClienteInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput>
  }

  export type FavoritoCreateManyClienteInputEnvelope = {
    data: FavoritoCreateManyClienteInput | FavoritoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutClienteInput = {
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    Cobranca?: CobrancaCreateNestedOneWithoutReservaInput
    acomodacao: AcomodacaoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutClienteInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    acomodacaoId: number
    Cobranca?: CobrancaUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutClienteInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput>
  }

  export type ReservaCreateManyClienteInputEnvelope = {
    data: ReservaCreateManyClienteInput | ReservaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutClienteInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutClienteInput, AvaliacaoUncheckedUpdateWithoutClienteInput>
    create: XOR<AvaliacaoCreateWithoutClienteInput, AvaliacaoUncheckedCreateWithoutClienteInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutClienteInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutClienteInput, AvaliacaoUncheckedUpdateWithoutClienteInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutClienteInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutClienteInput>
  }

  export type Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutClienteInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    update: XOR<Avaliacao_acomodacaoUpdateWithoutClienteInput, Avaliacao_acomodacaoUncheckedUpdateWithoutClienteInput>
    create: XOR<Avaliacao_acomodacaoCreateWithoutClienteInput, Avaliacao_acomodacaoUncheckedCreateWithoutClienteInput>
  }

  export type Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutClienteInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    data: XOR<Avaliacao_acomodacaoUpdateWithoutClienteInput, Avaliacao_acomodacaoUncheckedUpdateWithoutClienteInput>
  }

  export type Avaliacao_acomodacaoUpdateManyWithWhereWithoutClienteInput = {
    where: Avaliacao_acomodacaoScalarWhereInput
    data: XOR<Avaliacao_acomodacaoUpdateManyMutationInput, Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteInput>
  }

  export type Avaliacao_acomodacaoScalarWhereInput = {
    AND?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
    OR?: Avaliacao_acomodacaoScalarWhereInput[]
    NOT?: Avaliacao_acomodacaoScalarWhereInput | Avaliacao_acomodacaoScalarWhereInput[]
    id?: IntFilter<"Avaliacao_acomodacao"> | number
    custo_beneficio?: IntFilter<"Avaliacao_acomodacao"> | number
    atendimento?: IntFilter<"Avaliacao_acomodacao"> | number
    comida?: IntFilter<"Avaliacao_acomodacao"> | number
    limpeza?: IntFilter<"Avaliacao_acomodacao"> | number
    conforto?: IntFilter<"Avaliacao_acomodacao"> | number
    localizacao?: IntFilter<"Avaliacao_acomodacao"> | number
    comentario?: IntNullableFilter<"Avaliacao_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Avaliacao_acomodacao"> | number
    clienteId?: IntFilter<"Avaliacao_acomodacao"> | number
  }

  export type UsuarioUpsertWithoutClientInput = {
    update: XOR<UsuarioUpdateWithoutClientInput, UsuarioUncheckedUpdateWithoutClientInput>
    create: XOR<UsuarioCreateWithoutClientInput, UsuarioUncheckedCreateWithoutClientInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutClientInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutClientInput, UsuarioUncheckedUpdateWithoutClientInput>
  }

  export type UsuarioUpdateWithoutClientInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    FotoUsuario?: FotoUsuarioUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutClientInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    FotoUsuario?: FotoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type ClienteNoCupomUpsertWithWhereUniqueWithoutClienteInput = {
    where: ClienteNoCupomWhereUniqueInput
    update: XOR<ClienteNoCupomUpdateWithoutClienteInput, ClienteNoCupomUncheckedUpdateWithoutClienteInput>
    create: XOR<ClienteNoCupomCreateWithoutClienteInput, ClienteNoCupomUncheckedCreateWithoutClienteInput>
  }

  export type ClienteNoCupomUpdateWithWhereUniqueWithoutClienteInput = {
    where: ClienteNoCupomWhereUniqueInput
    data: XOR<ClienteNoCupomUpdateWithoutClienteInput, ClienteNoCupomUncheckedUpdateWithoutClienteInput>
  }

  export type ClienteNoCupomUpdateManyWithWhereWithoutClienteInput = {
    where: ClienteNoCupomScalarWhereInput
    data: XOR<ClienteNoCupomUpdateManyMutationInput, ClienteNoCupomUncheckedUpdateManyWithoutClienteInput>
  }

  export type ClienteNoCupomScalarWhereInput = {
    AND?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
    OR?: ClienteNoCupomScalarWhereInput[]
    NOT?: ClienteNoCupomScalarWhereInput | ClienteNoCupomScalarWhereInput[]
    clienteId?: IntFilter<"ClienteNoCupom"> | number
    cupomId?: IntFilter<"ClienteNoCupom"> | number
  }

  export type FavoritoUpsertWithWhereUniqueWithoutClienteInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutClienteInput, FavoritoUncheckedUpdateWithoutClienteInput>
    create: XOR<FavoritoCreateWithoutClienteInput, FavoritoUncheckedCreateWithoutClienteInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutClienteInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutClienteInput, FavoritoUncheckedUpdateWithoutClienteInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutClienteInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutClienteInput>
  }

  export type ReservaUpsertWithWhereUniqueWithoutClienteInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutClienteInput, ReservaUncheckedUpdateWithoutClienteInput>
    create: XOR<ReservaCreateWithoutClienteInput, ReservaUncheckedCreateWithoutClienteInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutClienteInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutClienteInput, ReservaUncheckedUpdateWithoutClienteInput>
  }

  export type ReservaUpdateManyWithWhereWithoutClienteInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutClienteInput>
  }

  export type ReservaScalarWhereInput = {
    AND?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    OR?: ReservaScalarWhereInput[]
    NOT?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    id?: IntFilter<"Reserva"> | number
    data_check_in?: DateTimeFilter<"Reserva"> | Date | string
    data_check_out?: DateTimeFilter<"Reserva"> | Date | string
    quantidade_pessoas?: IntFilter<"Reserva"> | number
    status?: StringFilter<"Reserva"> | string
    aceita_pet?: BoolFilter<"Reserva"> | boolean
    clienteId?: IntFilter<"Reserva"> | number
    acomodacaoId?: IntFilter<"Reserva"> | number
  }

  export type Gerenciamento_ganhosCreateWithoutProprietarioInput = {
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type Gerenciamento_ganhosCreateOrConnectWithoutProprietarioInput = {
    where: Gerenciamento_ganhosWhereUniqueInput
    create: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput>
  }

  export type Gerenciamento_ganhosCreateManyProprietarioInputEnvelope = {
    data: Gerenciamento_ganhosCreateManyProprietarioInput | Gerenciamento_ganhosCreateManyProprietarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutProprietarioInput = {
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutProprietarioInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientUncheckedCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutProprietarioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutProprietarioInput, UsuarioUncheckedCreateWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseCreateWithoutProprietarioInput = {
    interesse: InteresseCreateNestedOneWithoutProprietarioInput
  }

  export type ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput = {
    interesseId: number
  }

  export type ProprietarioNoInteresseCreateOrConnectWithoutProprietarioInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    create: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseCreateManyProprietarioInputEnvelope = {
    data: ProprietarioNoInteresseCreateManyProprietarioInput | ProprietarioNoInteresseCreateManyProprietarioInput[]
    skipDuplicates?: boolean
  }

  export type Gerenciamento_ganhosUpsertWithWhereUniqueWithoutProprietarioInput = {
    where: Gerenciamento_ganhosWhereUniqueInput
    update: XOR<Gerenciamento_ganhosUpdateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedUpdateWithoutProprietarioInput>
    create: XOR<Gerenciamento_ganhosCreateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedCreateWithoutProprietarioInput>
  }

  export type Gerenciamento_ganhosUpdateWithWhereUniqueWithoutProprietarioInput = {
    where: Gerenciamento_ganhosWhereUniqueInput
    data: XOR<Gerenciamento_ganhosUpdateWithoutProprietarioInput, Gerenciamento_ganhosUncheckedUpdateWithoutProprietarioInput>
  }

  export type Gerenciamento_ganhosUpdateManyWithWhereWithoutProprietarioInput = {
    where: Gerenciamento_ganhosScalarWhereInput
    data: XOR<Gerenciamento_ganhosUpdateManyMutationInput, Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioInput>
  }

  export type Gerenciamento_ganhosScalarWhereInput = {
    AND?: Gerenciamento_ganhosScalarWhereInput | Gerenciamento_ganhosScalarWhereInput[]
    OR?: Gerenciamento_ganhosScalarWhereInput[]
    NOT?: Gerenciamento_ganhosScalarWhereInput | Gerenciamento_ganhosScalarWhereInput[]
    id?: IntFilter<"Gerenciamento_ganhos"> | number
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos"> | number | null
    proprietarioId?: IntFilter<"Gerenciamento_ganhos"> | number
  }

  export type UsuarioUpsertWithoutProprietarioInput = {
    update: XOR<UsuarioUpdateWithoutProprietarioInput, UsuarioUncheckedUpdateWithoutProprietarioInput>
    create: XOR<UsuarioCreateWithoutProprietarioInput, UsuarioUncheckedCreateWithoutProprietarioInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutProprietarioInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutProprietarioInput, UsuarioUncheckedUpdateWithoutProprietarioInput>
  }

  export type UsuarioUpdateWithoutProprietarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutProprietarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUncheckedUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProprietarioNoInteresseUpsertWithWhereUniqueWithoutProprietarioInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    update: XOR<ProprietarioNoInteresseUpdateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedUpdateWithoutProprietarioInput>
    create: XOR<ProprietarioNoInteresseCreateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedCreateWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseUpdateWithWhereUniqueWithoutProprietarioInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    data: XOR<ProprietarioNoInteresseUpdateWithoutProprietarioInput, ProprietarioNoInteresseUncheckedUpdateWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseUpdateManyWithWhereWithoutProprietarioInput = {
    where: ProprietarioNoInteresseScalarWhereInput
    data: XOR<ProprietarioNoInteresseUpdateManyMutationInput, ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioInput>
  }

  export type ProprietarioNoInteresseScalarWhereInput = {
    AND?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
    OR?: ProprietarioNoInteresseScalarWhereInput[]
    NOT?: ProprietarioNoInteresseScalarWhereInput | ProprietarioNoInteresseScalarWhereInput[]
    proprietarioId?: IntFilter<"ProprietarioNoInteresse"> | number
    interesseId?: IntFilter<"ProprietarioNoInteresse"> | number
  }

  export type UsuarioCreateWithoutFotoUsuarioInput = {
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientCreateNestedOneWithoutUsuarioInput
    Notificacao?: NotificacaoCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutFotoUsuarioInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientUncheckedCreateNestedOneWithoutUsuarioInput
    Notificacao?: NotificacaoUncheckedCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutFotoUsuarioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutFotoUsuarioInput, UsuarioUncheckedCreateWithoutFotoUsuarioInput>
  }

  export type UsuarioUpsertWithoutFotoUsuarioInput = {
    update: XOR<UsuarioUpdateWithoutFotoUsuarioInput, UsuarioUncheckedUpdateWithoutFotoUsuarioInput>
    create: XOR<UsuarioCreateWithoutFotoUsuarioInput, UsuarioUncheckedCreateWithoutFotoUsuarioInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutFotoUsuarioInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutFotoUsuarioInput, UsuarioUncheckedUpdateWithoutFotoUsuarioInput>
  }

  export type UsuarioUpdateWithoutFotoUsuarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUpdateOneWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutFotoUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUncheckedUpdateOneWithoutUsuarioNestedInput
    Notificacao?: NotificacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutNotificacaoInput = {
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacaoInput = {
    id?: number
    nome: string
    sobrenome: string
    email: string
    hash_senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    vip: boolean
    Client?: ClientUncheckedCreateNestedOneWithoutUsuarioInput
    FotoUsuario?: FotoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    Proprietario?: ProprietarioUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacaoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacaoInput, UsuarioUncheckedCreateWithoutNotificacaoInput>
  }

  export type UsuarioUpsertWithoutNotificacaoInput = {
    update: XOR<UsuarioUpdateWithoutNotificacaoInput, UsuarioUncheckedUpdateWithoutNotificacaoInput>
    create: XOR<UsuarioCreateWithoutNotificacaoInput, UsuarioUncheckedCreateWithoutNotificacaoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutNotificacaoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutNotificacaoInput, UsuarioUncheckedUpdateWithoutNotificacaoInput>
  }

  export type UsuarioUpdateWithoutNotificacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    hash_senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vip?: BoolFieldUpdateOperationsInput | boolean
    Client?: ClientUncheckedUpdateOneWithoutUsuarioNestedInput
    FotoUsuario?: FotoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    Proprietario?: ProprietarioUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type HotelCreateWithoutAcomodacaoInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutAcomodacaoInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutAcomodacaoInput, HotelUncheckedCreateWithoutAcomodacaoInput>
  }

  export type TipoAcomodacaoCreateWithoutAcomodacaoesInput = {
    nome: string
  }

  export type TipoAcomodacaoUncheckedCreateWithoutAcomodacaoesInput = {
    id?: number
    nome: string
  }

  export type TipoAcomodacaoCreateOrConnectWithoutAcomodacaoesInput = {
    where: TipoAcomodacaoWhereUniqueInput
    create: XOR<TipoAcomodacaoCreateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedCreateWithoutAcomodacaoesInput>
  }

  export type Avaliacao_acomodacaoCreateWithoutAcomodacaoInput = {
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    cliente: ClientCreateNestedOneWithoutAvaliacao_acomodacaoInput
  }

  export type Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    clienteId: number
  }

  export type Avaliacao_acomodacaoCreateOrConnectWithoutAcomodacaoInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    create: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Avaliacao_acomodacaoCreateManyAcomodacaoInputEnvelope = {
    data: Avaliacao_acomodacaoCreateManyAcomodacaoInput | Avaliacao_acomodacaoCreateManyAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput = {
    comodidade: ComodidadeAcomodacaoCreateNestedOneWithoutAcomodacaoInput
  }

  export type ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput = {
    comodidadeId: number
  }

  export type ComodidadeNaAcomodacaoCreateOrConnectWithoutAcomodacaoInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    create: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type ComodidadeNaAcomodacaoCreateManyAcomodacaoInputEnvelope = {
    data: ComodidadeNaAcomodacaoCreateManyAcomodacaoInput | ComodidadeNaAcomodacaoCreateManyAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type Foto_AcomodacaoCreateWithoutAcomodacaoInput = {
    url_foto: string
  }

  export type Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    url_foto: string
  }

  export type Foto_AcomodacaoCreateOrConnectWithoutAcomodacaoInput = {
    where: Foto_AcomodacaoWhereUniqueInput
    create: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Foto_AcomodacaoCreateManyAcomodacaoInputEnvelope = {
    data: Foto_AcomodacaoCreateManyAcomodacaoInput | Foto_AcomodacaoCreateManyAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput = {
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type Gerenciamento_ganhos_acomodacaoCreateOrConnectWithoutAcomodacaoInput = {
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    create: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInputEnvelope = {
    data: Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInput | Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutAcomodacaoInput = {
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    Cobranca?: CobrancaCreateNestedOneWithoutReservaInput
    cliente: ClientCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
    Cobranca?: CobrancaUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutAcomodacaoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput>
  }

  export type ReservaCreateManyAcomodacaoInputEnvelope = {
    data: ReservaCreateManyAcomodacaoInput | ReservaCreateManyAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type HotelUpsertWithoutAcomodacaoInput = {
    update: XOR<HotelUpdateWithoutAcomodacaoInput, HotelUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<HotelCreateWithoutAcomodacaoInput, HotelUncheckedCreateWithoutAcomodacaoInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutAcomodacaoInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutAcomodacaoInput, HotelUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type HotelUpdateWithoutAcomodacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type TipoAcomodacaoUpsertWithoutAcomodacaoesInput = {
    update: XOR<TipoAcomodacaoUpdateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedUpdateWithoutAcomodacaoesInput>
    create: XOR<TipoAcomodacaoCreateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedCreateWithoutAcomodacaoesInput>
    where?: TipoAcomodacaoWhereInput
  }

  export type TipoAcomodacaoUpdateToOneWithWhereWithoutAcomodacaoesInput = {
    where?: TipoAcomodacaoWhereInput
    data: XOR<TipoAcomodacaoUpdateWithoutAcomodacaoesInput, TipoAcomodacaoUncheckedUpdateWithoutAcomodacaoesInput>
  }

  export type TipoAcomodacaoUpdateWithoutAcomodacaoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type TipoAcomodacaoUncheckedUpdateWithoutAcomodacaoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type Avaliacao_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    update: XOR<Avaliacao_acomodacaoUpdateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<Avaliacao_acomodacaoCreateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Avaliacao_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput = {
    where: Avaliacao_acomodacaoWhereUniqueInput
    data: XOR<Avaliacao_acomodacaoUpdateWithoutAcomodacaoInput, Avaliacao_acomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type Avaliacao_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput = {
    where: Avaliacao_acomodacaoScalarWhereInput
    data: XOR<Avaliacao_acomodacaoUpdateManyMutationInput, Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoInput>
  }

  export type ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    update: XOR<ComodidadeNaAcomodacaoUpdateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<ComodidadeNaAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    data: XOR<ComodidadeNaAcomodacaoUpdateWithoutAcomodacaoInput, ComodidadeNaAcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput = {
    where: ComodidadeNaAcomodacaoScalarWhereInput
    data: XOR<ComodidadeNaAcomodacaoUpdateManyMutationInput, ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoInput>
  }

  export type ComodidadeNaAcomodacaoScalarWhereInput = {
    AND?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
    OR?: ComodidadeNaAcomodacaoScalarWhereInput[]
    NOT?: ComodidadeNaAcomodacaoScalarWhereInput | ComodidadeNaAcomodacaoScalarWhereInput[]
    acomodacaoId?: IntFilter<"ComodidadeNaAcomodacao"> | number
    comodidadeId?: IntFilter<"ComodidadeNaAcomodacao"> | number
  }

  export type Foto_AcomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput = {
    where: Foto_AcomodacaoWhereUniqueInput
    update: XOR<Foto_AcomodacaoUpdateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<Foto_AcomodacaoCreateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Foto_AcomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput = {
    where: Foto_AcomodacaoWhereUniqueInput
    data: XOR<Foto_AcomodacaoUpdateWithoutAcomodacaoInput, Foto_AcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type Foto_AcomodacaoUpdateManyWithWhereWithoutAcomodacaoInput = {
    where: Foto_AcomodacaoScalarWhereInput
    data: XOR<Foto_AcomodacaoUpdateManyMutationInput, Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoInput>
  }

  export type Foto_AcomodacaoScalarWhereInput = {
    AND?: Foto_AcomodacaoScalarWhereInput | Foto_AcomodacaoScalarWhereInput[]
    OR?: Foto_AcomodacaoScalarWhereInput[]
    NOT?: Foto_AcomodacaoScalarWhereInput | Foto_AcomodacaoScalarWhereInput[]
    id?: IntFilter<"Foto_Acomodacao"> | number
    url_foto?: StringFilter<"Foto_Acomodacao"> | string
    acomodacaoId?: IntFilter<"Foto_Acomodacao"> | number
  }

  export type Gerenciamento_ganhos_acomodacaoUpsertWithWhereUniqueWithoutAcomodacaoInput = {
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    update: XOR<Gerenciamento_ganhos_acomodacaoUpdateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<Gerenciamento_ganhos_acomodacaoCreateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateWithWhereUniqueWithoutAcomodacaoInput = {
    where: Gerenciamento_ganhos_acomodacaoWhereUniqueInput
    data: XOR<Gerenciamento_ganhos_acomodacaoUpdateWithoutAcomodacaoInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateManyWithWhereWithoutAcomodacaoInput = {
    where: Gerenciamento_ganhos_acomodacaoScalarWhereInput
    data: XOR<Gerenciamento_ganhos_acomodacaoUpdateManyMutationInput, Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoInput>
  }

  export type Gerenciamento_ganhos_acomodacaoScalarWhereInput = {
    AND?: Gerenciamento_ganhos_acomodacaoScalarWhereInput | Gerenciamento_ganhos_acomodacaoScalarWhereInput[]
    OR?: Gerenciamento_ganhos_acomodacaoScalarWhereInput[]
    NOT?: Gerenciamento_ganhos_acomodacaoScalarWhereInput | Gerenciamento_ganhos_acomodacaoScalarWhereInput[]
    id?: IntFilter<"Gerenciamento_ganhos_acomodacao"> | number
    data?: DateTimeNullableFilter<"Gerenciamento_ganhos_acomodacao"> | Date | string | null
    valor_lucro?: FloatNullableFilter<"Gerenciamento_ganhos_acomodacao"> | number | null
    acomodacaoId?: IntFilter<"Gerenciamento_ganhos_acomodacao"> | number
  }

  export type ReservaUpsertWithWhereUniqueWithoutAcomodacaoInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutAcomodacaoInput, ReservaUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<ReservaCreateWithoutAcomodacaoInput, ReservaUncheckedCreateWithoutAcomodacaoInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutAcomodacaoInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutAcomodacaoInput, ReservaUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type ReservaUpdateManyWithWhereWithoutAcomodacaoInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutAcomodacaoInput>
  }

  export type AcomodacaoCreateWithoutTipoAcomodacaoInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutTipoAcomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput>
  }

  export type AcomodacaoCreateManyTipoAcomodacaoInputEnvelope = {
    data: AcomodacaoCreateManyTipoAcomodacaoInput | AcomodacaoCreateManyTipoAcomodacaoInput[]
    skipDuplicates?: boolean
  }

  export type AcomodacaoUpsertWithWhereUniqueWithoutTipoAcomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    update: XOR<AcomodacaoUpdateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutTipoAcomodacaoInput>
    create: XOR<AcomodacaoCreateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutTipoAcomodacaoInput>
  }

  export type AcomodacaoUpdateWithWhereUniqueWithoutTipoAcomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    data: XOR<AcomodacaoUpdateWithoutTipoAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutTipoAcomodacaoInput>
  }

  export type AcomodacaoUpdateManyWithWhereWithoutTipoAcomodacaoInput = {
    where: AcomodacaoScalarWhereInput
    data: XOR<AcomodacaoUpdateManyMutationInput, AcomodacaoUncheckedUpdateManyWithoutTipoAcomodacaoInput>
  }

  export type AcomodacaoCreateWithoutFotoAcomodacaoInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutFotoAcomodacaoInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutFotoAcomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutFotoAcomodacaoInput>
  }

  export type AcomodacaoUpsertWithoutFotoAcomodacaoInput = {
    update: XOR<AcomodacaoUpdateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutFotoAcomodacaoInput>
    create: XOR<AcomodacaoCreateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedCreateWithoutFotoAcomodacaoInput>
    where?: AcomodacaoWhereInput
  }

  export type AcomodacaoUpdateToOneWithWhereWithoutFotoAcomodacaoInput = {
    where?: AcomodacaoWhereInput
    data: XOR<AcomodacaoUpdateWithoutFotoAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutFotoAcomodacaoInput>
  }

  export type AcomodacaoUpdateWithoutFotoAcomodacaoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutFotoAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type CobrancaCreateWithoutReservaInput = {
    data_pagamento?: Date | string | null
    data_vencimento?: Date | string | null
    valor?: number | null
    status?: string | null
  }

  export type CobrancaUncheckedCreateWithoutReservaInput = {
    id?: number
    data_pagamento?: Date | string | null
    data_vencimento?: Date | string | null
    valor?: number | null
    status?: string | null
  }

  export type CobrancaCreateOrConnectWithoutReservaInput = {
    where: CobrancaWhereUniqueInput
    create: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
  }

  export type AcomodacaoCreateWithoutReservaInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutReservaInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutReservaInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutReservaInput, AcomodacaoUncheckedCreateWithoutReservaInput>
  }

  export type ClientCreateWithoutReservaInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutReservaInput = {
    id?: number
    usuarioId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutReservaInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutReservaInput, ClientUncheckedCreateWithoutReservaInput>
  }

  export type CobrancaUpsertWithoutReservaInput = {
    update: XOR<CobrancaUpdateWithoutReservaInput, CobrancaUncheckedUpdateWithoutReservaInput>
    create: XOR<CobrancaCreateWithoutReservaInput, CobrancaUncheckedCreateWithoutReservaInput>
    where?: CobrancaWhereInput
  }

  export type CobrancaUpdateToOneWithWhereWithoutReservaInput = {
    where?: CobrancaWhereInput
    data: XOR<CobrancaUpdateWithoutReservaInput, CobrancaUncheckedUpdateWithoutReservaInput>
  }

  export type CobrancaUpdateWithoutReservaInput = {
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CobrancaUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_pagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_vencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AcomodacaoUpsertWithoutReservaInput = {
    update: XOR<AcomodacaoUpdateWithoutReservaInput, AcomodacaoUncheckedUpdateWithoutReservaInput>
    create: XOR<AcomodacaoCreateWithoutReservaInput, AcomodacaoUncheckedCreateWithoutReservaInput>
    where?: AcomodacaoWhereInput
  }

  export type AcomodacaoUpdateToOneWithWhereWithoutReservaInput = {
    where?: AcomodacaoWhereInput
    data: XOR<AcomodacaoUpdateWithoutReservaInput, AcomodacaoUncheckedUpdateWithoutReservaInput>
  }

  export type AcomodacaoUpdateWithoutReservaInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type ClientUpsertWithoutReservaInput = {
    update: XOR<ClientUpdateWithoutReservaInput, ClientUncheckedUpdateWithoutReservaInput>
    create: XOR<ClientCreateWithoutReservaInput, ClientUncheckedCreateWithoutReservaInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutReservaInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutReservaInput, ClientUncheckedUpdateWithoutReservaInput>
  }

  export type ClientUpdateWithoutReservaInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type AcomodacaoCreateWithoutGerenciamento_ganhosInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutGerenciamento_ganhosInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutGerenciamento_ganhosInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedCreateWithoutGerenciamento_ganhosInput>
  }

  export type AcomodacaoUpsertWithoutGerenciamento_ganhosInput = {
    update: XOR<AcomodacaoUpdateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedUpdateWithoutGerenciamento_ganhosInput>
    create: XOR<AcomodacaoCreateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedCreateWithoutGerenciamento_ganhosInput>
    where?: AcomodacaoWhereInput
  }

  export type AcomodacaoUpdateToOneWithWhereWithoutGerenciamento_ganhosInput = {
    where?: AcomodacaoWhereInput
    data: XOR<AcomodacaoUpdateWithoutGerenciamento_ganhosInput, AcomodacaoUncheckedUpdateWithoutGerenciamento_ganhosInput>
  }

  export type AcomodacaoUpdateWithoutGerenciamento_ganhosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutGerenciamento_ganhosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoCreateWithoutAvaliacao_acomodacaoInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutAvaliacao_acomodacaoInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutAvaliacao_acomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedCreateWithoutAvaliacao_acomodacaoInput>
  }

  export type ClientCreateWithoutAvaliacao_acomodacaoInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutAvaliacao_acomodacaoInput = {
    id?: number
    usuarioId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutAvaliacao_acomodacaoInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutAvaliacao_acomodacaoInput, ClientUncheckedCreateWithoutAvaliacao_acomodacaoInput>
  }

  export type AcomodacaoUpsertWithoutAvaliacao_acomodacaoInput = {
    update: XOR<AcomodacaoUpdateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
    create: XOR<AcomodacaoCreateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    where?: AcomodacaoWhereInput
  }

  export type AcomodacaoUpdateToOneWithWhereWithoutAvaliacao_acomodacaoInput = {
    where?: AcomodacaoWhereInput
    data: XOR<AcomodacaoUpdateWithoutAvaliacao_acomodacaoInput, AcomodacaoUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
  }

  export type AcomodacaoUpdateWithoutAvaliacao_acomodacaoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutAvaliacao_acomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type ClientUpsertWithoutAvaliacao_acomodacaoInput = {
    update: XOR<ClientUpdateWithoutAvaliacao_acomodacaoInput, ClientUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
    create: XOR<ClientCreateWithoutAvaliacao_acomodacaoInput, ClientUncheckedCreateWithoutAvaliacao_acomodacaoInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutAvaliacao_acomodacaoInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutAvaliacao_acomodacaoInput, ClientUncheckedUpdateWithoutAvaliacao_acomodacaoInput>
  }

  export type ClientUpdateWithoutAvaliacao_acomodacaoInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutAvaliacao_acomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ReservaCreateWithoutCobrancaInput = {
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    acomodacao: AcomodacaoCreateNestedOneWithoutReservaInput
    cliente: ClientCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutCobrancaInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
    acomodacaoId: number
  }

  export type ReservaCreateOrConnectWithoutCobrancaInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutCobrancaInput, ReservaUncheckedCreateWithoutCobrancaInput>
  }

  export type ReservaUpsertWithoutCobrancaInput = {
    update: XOR<ReservaUpdateWithoutCobrancaInput, ReservaUncheckedUpdateWithoutCobrancaInput>
    create: XOR<ReservaCreateWithoutCobrancaInput, ReservaUncheckedCreateWithoutCobrancaInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutCobrancaInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutCobrancaInput, ReservaUncheckedUpdateWithoutCobrancaInput>
  }

  export type ReservaUpdateWithoutCobrancaInput = {
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutReservaNestedInput
    cliente?: ClientUpdateOneRequiredWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutCobrancaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    clienteId?: IntFieldUpdateOperationsInput | number
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioCreateWithoutGerenciamento_ganhosInput = {
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    usuario: UsuarioCreateNestedOneWithoutProprietarioInput
    Interesse?: ProprietarioNoInteresseCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioUncheckedCreateWithoutGerenciamento_ganhosInput = {
    id?: number
    usuarioId: number
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Interesse?: ProprietarioNoInteresseUncheckedCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioCreateOrConnectWithoutGerenciamento_ganhosInput = {
    where: ProprietarioWhereUniqueInput
    create: XOR<ProprietarioCreateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedCreateWithoutGerenciamento_ganhosInput>
  }

  export type ProprietarioUpsertWithoutGerenciamento_ganhosInput = {
    update: XOR<ProprietarioUpdateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedUpdateWithoutGerenciamento_ganhosInput>
    create: XOR<ProprietarioCreateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedCreateWithoutGerenciamento_ganhosInput>
    where?: ProprietarioWhereInput
  }

  export type ProprietarioUpdateToOneWithWhereWithoutGerenciamento_ganhosInput = {
    where?: ProprietarioWhereInput
    data: XOR<ProprietarioUpdateWithoutGerenciamento_ganhosInput, ProprietarioUncheckedUpdateWithoutGerenciamento_ganhosInput>
  }

  export type ProprietarioUpdateWithoutGerenciamento_ganhosInput = {
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutProprietarioNestedInput
    Interesse?: ProprietarioNoInteresseUpdateManyWithoutProprietarioNestedInput
  }

  export type ProprietarioUncheckedUpdateWithoutGerenciamento_ganhosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Interesse?: ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioNestedInput
  }

  export type ProprietarioNoInteresseCreateWithoutInteresseInput = {
    proprietario: ProprietarioCreateNestedOneWithoutInteresseInput
  }

  export type ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput = {
    proprietarioId: number
  }

  export type ProprietarioNoInteresseCreateOrConnectWithoutInteresseInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    create: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput>
  }

  export type ProprietarioNoInteresseCreateManyInteresseInputEnvelope = {
    data: ProprietarioNoInteresseCreateManyInteresseInput | ProprietarioNoInteresseCreateManyInteresseInput[]
    skipDuplicates?: boolean
  }

  export type ProprietarioNoInteresseUpsertWithWhereUniqueWithoutInteresseInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    update: XOR<ProprietarioNoInteresseUpdateWithoutInteresseInput, ProprietarioNoInteresseUncheckedUpdateWithoutInteresseInput>
    create: XOR<ProprietarioNoInteresseCreateWithoutInteresseInput, ProprietarioNoInteresseUncheckedCreateWithoutInteresseInput>
  }

  export type ProprietarioNoInteresseUpdateWithWhereUniqueWithoutInteresseInput = {
    where: ProprietarioNoInteresseWhereUniqueInput
    data: XOR<ProprietarioNoInteresseUpdateWithoutInteresseInput, ProprietarioNoInteresseUncheckedUpdateWithoutInteresseInput>
  }

  export type ProprietarioNoInteresseUpdateManyWithWhereWithoutInteresseInput = {
    where: ProprietarioNoInteresseScalarWhereInput
    data: XOR<ProprietarioNoInteresseUpdateManyMutationInput, ProprietarioNoInteresseUncheckedUpdateManyWithoutInteresseInput>
  }

  export type InteresseCreateWithoutProprietarioInput = {
    Nome: string
  }

  export type InteresseUncheckedCreateWithoutProprietarioInput = {
    id?: number
    Nome: string
  }

  export type InteresseCreateOrConnectWithoutProprietarioInput = {
    where: InteresseWhereUniqueInput
    create: XOR<InteresseCreateWithoutProprietarioInput, InteresseUncheckedCreateWithoutProprietarioInput>
  }

  export type ProprietarioCreateWithoutInteresseInput = {
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosCreateNestedManyWithoutProprietarioInput
    usuario: UsuarioCreateNestedOneWithoutProprietarioInput
  }

  export type ProprietarioUncheckedCreateWithoutInteresseInput = {
    id?: number
    usuarioId: number
    tempo_hospedagem?: number | null
    avaliacao?: string | null
    sobre?: string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedCreateNestedManyWithoutProprietarioInput
  }

  export type ProprietarioCreateOrConnectWithoutInteresseInput = {
    where: ProprietarioWhereUniqueInput
    create: XOR<ProprietarioCreateWithoutInteresseInput, ProprietarioUncheckedCreateWithoutInteresseInput>
  }

  export type InteresseUpsertWithoutProprietarioInput = {
    update: XOR<InteresseUpdateWithoutProprietarioInput, InteresseUncheckedUpdateWithoutProprietarioInput>
    create: XOR<InteresseCreateWithoutProprietarioInput, InteresseUncheckedCreateWithoutProprietarioInput>
    where?: InteresseWhereInput
  }

  export type InteresseUpdateToOneWithWhereWithoutProprietarioInput = {
    where?: InteresseWhereInput
    data: XOR<InteresseUpdateWithoutProprietarioInput, InteresseUncheckedUpdateWithoutProprietarioInput>
  }

  export type InteresseUpdateWithoutProprietarioInput = {
    Nome?: StringFieldUpdateOperationsInput | string
  }

  export type InteresseUncheckedUpdateWithoutProprietarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    Nome?: StringFieldUpdateOperationsInput | string
  }

  export type ProprietarioUpsertWithoutInteresseInput = {
    update: XOR<ProprietarioUpdateWithoutInteresseInput, ProprietarioUncheckedUpdateWithoutInteresseInput>
    create: XOR<ProprietarioCreateWithoutInteresseInput, ProprietarioUncheckedCreateWithoutInteresseInput>
    where?: ProprietarioWhereInput
  }

  export type ProprietarioUpdateToOneWithWhereWithoutInteresseInput = {
    where?: ProprietarioWhereInput
    data: XOR<ProprietarioUpdateWithoutInteresseInput, ProprietarioUncheckedUpdateWithoutInteresseInput>
  }

  export type ProprietarioUpdateWithoutInteresseInput = {
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUpdateManyWithoutProprietarioNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutProprietarioNestedInput
  }

  export type ProprietarioUncheckedUpdateWithoutInteresseInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tempo_hospedagem?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    Gerenciamento_ganhos?: Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioNestedInput
  }

  export type ClienteNoCupomCreateWithoutCupomInput = {
    cliente: ClientCreateNestedOneWithoutCupomInput
  }

  export type ClienteNoCupomUncheckedCreateWithoutCupomInput = {
    clienteId: number
  }

  export type ClienteNoCupomCreateOrConnectWithoutCupomInput = {
    where: ClienteNoCupomWhereUniqueInput
    create: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput>
  }

  export type ClienteNoCupomCreateManyCupomInputEnvelope = {
    data: ClienteNoCupomCreateManyCupomInput | ClienteNoCupomCreateManyCupomInput[]
    skipDuplicates?: boolean
  }

  export type ClienteNoCupomUpsertWithWhereUniqueWithoutCupomInput = {
    where: ClienteNoCupomWhereUniqueInput
    update: XOR<ClienteNoCupomUpdateWithoutCupomInput, ClienteNoCupomUncheckedUpdateWithoutCupomInput>
    create: XOR<ClienteNoCupomCreateWithoutCupomInput, ClienteNoCupomUncheckedCreateWithoutCupomInput>
  }

  export type ClienteNoCupomUpdateWithWhereUniqueWithoutCupomInput = {
    where: ClienteNoCupomWhereUniqueInput
    data: XOR<ClienteNoCupomUpdateWithoutCupomInput, ClienteNoCupomUncheckedUpdateWithoutCupomInput>
  }

  export type ClienteNoCupomUpdateManyWithWhereWithoutCupomInput = {
    where: ClienteNoCupomScalarWhereInput
    data: XOR<ClienteNoCupomUpdateManyMutationInput, ClienteNoCupomUncheckedUpdateManyWithoutCupomInput>
  }

  export type ClientCreateWithoutCupomInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Favorito?: FavoritoCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutCupomInput = {
    id?: number
    usuarioId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutCupomInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutCupomInput, ClientUncheckedCreateWithoutCupomInput>
  }

  export type CupomCreateWithoutClienteInput = {
    codigo: string
    desconto: number
    data_validade: Date | string
  }

  export type CupomUncheckedCreateWithoutClienteInput = {
    id?: number
    codigo: string
    desconto: number
    data_validade: Date | string
  }

  export type CupomCreateOrConnectWithoutClienteInput = {
    where: CupomWhereUniqueInput
    create: XOR<CupomCreateWithoutClienteInput, CupomUncheckedCreateWithoutClienteInput>
  }

  export type ClientUpsertWithoutCupomInput = {
    update: XOR<ClientUpdateWithoutCupomInput, ClientUncheckedUpdateWithoutCupomInput>
    create: XOR<ClientCreateWithoutCupomInput, ClientUncheckedCreateWithoutCupomInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutCupomInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutCupomInput, ClientUncheckedUpdateWithoutCupomInput>
  }

  export type ClientUpdateWithoutCupomInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Favorito?: FavoritoUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutCupomInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type CupomUpsertWithoutClienteInput = {
    update: XOR<CupomUpdateWithoutClienteInput, CupomUncheckedUpdateWithoutClienteInput>
    create: XOR<CupomCreateWithoutClienteInput, CupomUncheckedCreateWithoutClienteInput>
    where?: CupomWhereInput
  }

  export type CupomUpdateToOneWithWhereWithoutClienteInput = {
    where?: CupomWhereInput
    data: XOR<CupomUpdateWithoutClienteInput, CupomUncheckedUpdateWithoutClienteInput>
  }

  export type CupomUpdateWithoutClienteInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CupomUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    desconto?: FloatFieldUpdateOperationsInput | number
    data_validade?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreateWithoutFavoritoInput = {
    Avaliacao?: AvaliacaoCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutClienteInput
    usuario: UsuarioCreateNestedOneWithoutClientInput
    Cupom?: ClienteNoCupomCreateNestedManyWithoutClienteInput
    Reserva?: ReservaCreateNestedManyWithoutClienteInput
  }

  export type ClientUncheckedCreateWithoutFavoritoInput = {
    id?: number
    usuarioId: number
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutClienteInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutClienteInput
    Cupom?: ClienteNoCupomUncheckedCreateNestedManyWithoutClienteInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientCreateOrConnectWithoutFavoritoInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutFavoritoInput, ClientUncheckedCreateWithoutFavoritoInput>
  }

  export type HotelCreateWithoutFavoritoInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutFavoritoInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutFavoritoInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutFavoritoInput, HotelUncheckedCreateWithoutFavoritoInput>
  }

  export type ClientUpsertWithoutFavoritoInput = {
    update: XOR<ClientUpdateWithoutFavoritoInput, ClientUncheckedUpdateWithoutFavoritoInput>
    create: XOR<ClientCreateWithoutFavoritoInput, ClientUncheckedCreateWithoutFavoritoInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutFavoritoInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutFavoritoInput, ClientUncheckedUpdateWithoutFavoritoInput>
  }

  export type ClientUpdateWithoutFavoritoInput = {
    Avaliacao?: AvaliacaoUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutClienteNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClientNestedInput
    Cupom?: ClienteNoCupomUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUpdateManyWithoutClienteNestedInput
  }

  export type ClientUncheckedUpdateWithoutFavoritoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutClienteNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteNestedInput
    Cupom?: ClienteNoCupomUncheckedUpdateManyWithoutClienteNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type HotelUpsertWithoutFavoritoInput = {
    update: XOR<HotelUpdateWithoutFavoritoInput, HotelUncheckedUpdateWithoutFavoritoInput>
    create: XOR<HotelCreateWithoutFavoritoInput, HotelUncheckedCreateWithoutFavoritoInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutFavoritoInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutFavoritoInput, HotelUncheckedUpdateWithoutFavoritoInput>
  }

  export type HotelUpdateWithoutFavoritoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutFavoritoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type ComodidadeNaAcomodacaoCreateWithoutComodidadeInput = {
    acomodacao: AcomodacaoCreateNestedOneWithoutComodidadeNaAcomodacaoInput
  }

  export type ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput = {
    acomodacaoId: number
  }

  export type ComodidadeNaAcomodacaoCreateOrConnectWithoutComodidadeInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    create: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput>
  }

  export type ComodidadeNaAcomodacaoCreateManyComodidadeInputEnvelope = {
    data: ComodidadeNaAcomodacaoCreateManyComodidadeInput | ComodidadeNaAcomodacaoCreateManyComodidadeInput[]
    skipDuplicates?: boolean
  }

  export type ComodidadeNaAcomodacaoUpsertWithWhereUniqueWithoutComodidadeInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    update: XOR<ComodidadeNaAcomodacaoUpdateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedUpdateWithoutComodidadeInput>
    create: XOR<ComodidadeNaAcomodacaoCreateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedCreateWithoutComodidadeInput>
  }

  export type ComodidadeNaAcomodacaoUpdateWithWhereUniqueWithoutComodidadeInput = {
    where: ComodidadeNaAcomodacaoWhereUniqueInput
    data: XOR<ComodidadeNaAcomodacaoUpdateWithoutComodidadeInput, ComodidadeNaAcomodacaoUncheckedUpdateWithoutComodidadeInput>
  }

  export type ComodidadeNaAcomodacaoUpdateManyWithWhereWithoutComodidadeInput = {
    where: ComodidadeNaAcomodacaoScalarWhereInput
    data: XOR<ComodidadeNaAcomodacaoUpdateManyMutationInput, ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutComodidadeInput>
  }

  export type AcomodacaoCreateWithoutComodidadeNaAcomodacaoInput = {
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotel: HotelCreateNestedOneWithoutAcomodacaoInput
    tipoAcomodacao: TipoAcomodacaoCreateNestedOneWithoutAcomodacaoesInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoUncheckedCreateWithoutComodidadeNaAcomodacaoInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
    hotelId: number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedCreateNestedManyWithoutAcomodacaoInput
    Reserva?: ReservaUncheckedCreateNestedManyWithoutAcomodacaoInput
  }

  export type AcomodacaoCreateOrConnectWithoutComodidadeNaAcomodacaoInput = {
    where: AcomodacaoWhereUniqueInput
    create: XOR<AcomodacaoCreateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedCreateWithoutComodidadeNaAcomodacaoInput>
  }

  export type ComodidadeAcomodacaoCreateWithoutAcomodacaoInput = {
    nome: string
  }

  export type ComodidadeAcomodacaoUncheckedCreateWithoutAcomodacaoInput = {
    id?: number
    nome: string
  }

  export type ComodidadeAcomodacaoCreateOrConnectWithoutAcomodacaoInput = {
    where: ComodidadeAcomodacaoWhereUniqueInput
    create: XOR<ComodidadeAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
  }

  export type AcomodacaoUpsertWithoutComodidadeNaAcomodacaoInput = {
    update: XOR<AcomodacaoUpdateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutComodidadeNaAcomodacaoInput>
    create: XOR<AcomodacaoCreateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedCreateWithoutComodidadeNaAcomodacaoInput>
    where?: AcomodacaoWhereInput
  }

  export type AcomodacaoUpdateToOneWithWhereWithoutComodidadeNaAcomodacaoInput = {
    where?: AcomodacaoWhereInput
    data: XOR<AcomodacaoUpdateWithoutComodidadeNaAcomodacaoInput, AcomodacaoUncheckedUpdateWithoutComodidadeNaAcomodacaoInput>
  }

  export type AcomodacaoUpdateWithoutComodidadeNaAcomodacaoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutComodidadeNaAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type ComodidadeAcomodacaoUpsertWithoutAcomodacaoInput = {
    update: XOR<ComodidadeAcomodacaoUpdateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
    create: XOR<ComodidadeAcomodacaoCreateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedCreateWithoutAcomodacaoInput>
    where?: ComodidadeAcomodacaoWhereInput
  }

  export type ComodidadeAcomodacaoUpdateToOneWithWhereWithoutAcomodacaoInput = {
    where?: ComodidadeAcomodacaoWhereInput
    data: XOR<ComodidadeAcomodacaoUpdateWithoutAcomodacaoInput, ComodidadeAcomodacaoUncheckedUpdateWithoutAcomodacaoInput>
  }

  export type ComodidadeAcomodacaoUpdateWithoutAcomodacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeAcomodacaoUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeNoHotelCreateWithoutComodidadeInput = {
    hotel: HotelCreateNestedOneWithoutComodidadeNoHotelInput
  }

  export type ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput = {
    hotelId: number
  }

  export type ComodidadeNoHotelCreateOrConnectWithoutComodidadeInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    create: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput>
  }

  export type ComodidadeNoHotelCreateManyComodidadeInputEnvelope = {
    data: ComodidadeNoHotelCreateManyComodidadeInput | ComodidadeNoHotelCreateManyComodidadeInput[]
    skipDuplicates?: boolean
  }

  export type ComodidadeNoHotelUpsertWithWhereUniqueWithoutComodidadeInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    update: XOR<ComodidadeNoHotelUpdateWithoutComodidadeInput, ComodidadeNoHotelUncheckedUpdateWithoutComodidadeInput>
    create: XOR<ComodidadeNoHotelCreateWithoutComodidadeInput, ComodidadeNoHotelUncheckedCreateWithoutComodidadeInput>
  }

  export type ComodidadeNoHotelUpdateWithWhereUniqueWithoutComodidadeInput = {
    where: ComodidadeNoHotelWhereUniqueInput
    data: XOR<ComodidadeNoHotelUpdateWithoutComodidadeInput, ComodidadeNoHotelUncheckedUpdateWithoutComodidadeInput>
  }

  export type ComodidadeNoHotelUpdateManyWithWhereWithoutComodidadeInput = {
    where: ComodidadeNoHotelScalarWhereInput
    data: XOR<ComodidadeNoHotelUpdateManyMutationInput, ComodidadeNoHotelUncheckedUpdateManyWithoutComodidadeInput>
  }

  export type ComodidadeHotelCreateWithoutHotelInput = {
    nome: string
  }

  export type ComodidadeHotelUncheckedCreateWithoutHotelInput = {
    id?: number
    nome: string
  }

  export type ComodidadeHotelCreateOrConnectWithoutHotelInput = {
    where: ComodidadeHotelWhereUniqueInput
    create: XOR<ComodidadeHotelCreateWithoutHotelInput, ComodidadeHotelUncheckedCreateWithoutHotelInput>
  }

  export type HotelCreateWithoutComodidadeNoHotelInput = {
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    Acomodacao?: AcomodacaoCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelCreateNestedManyWithoutId_hotelInput
    endereco: EnderecoCreateNestedOneWithoutHotelInput
  }

  export type HotelUncheckedCreateWithoutComodidadeNoHotelInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
    enderecoId: number
    Acomodacao?: AcomodacaoUncheckedCreateNestedManyWithoutHotelInput
    Avaliacao?: AvaliacaoUncheckedCreateNestedManyWithoutHotelInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedCreateNestedOneWithoutId_hotelInput
    Favorito?: FavoritoUncheckedCreateNestedManyWithoutHotelInput
    FotosHotel?: FotosHotelUncheckedCreateNestedManyWithoutId_hotelInput
  }

  export type HotelCreateOrConnectWithoutComodidadeNoHotelInput = {
    where: HotelWhereUniqueInput
    create: XOR<HotelCreateWithoutComodidadeNoHotelInput, HotelUncheckedCreateWithoutComodidadeNoHotelInput>
  }

  export type ComodidadeHotelUpsertWithoutHotelInput = {
    update: XOR<ComodidadeHotelUpdateWithoutHotelInput, ComodidadeHotelUncheckedUpdateWithoutHotelInput>
    create: XOR<ComodidadeHotelCreateWithoutHotelInput, ComodidadeHotelUncheckedCreateWithoutHotelInput>
    where?: ComodidadeHotelWhereInput
  }

  export type ComodidadeHotelUpdateToOneWithWhereWithoutHotelInput = {
    where?: ComodidadeHotelWhereInput
    data: XOR<ComodidadeHotelUpdateWithoutHotelInput, ComodidadeHotelUncheckedUpdateWithoutHotelInput>
  }

  export type ComodidadeHotelUpdateWithoutHotelInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type ComodidadeHotelUncheckedUpdateWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type HotelUpsertWithoutComodidadeNoHotelInput = {
    update: XOR<HotelUpdateWithoutComodidadeNoHotelInput, HotelUncheckedUpdateWithoutComodidadeNoHotelInput>
    create: XOR<HotelCreateWithoutComodidadeNoHotelInput, HotelUncheckedCreateWithoutComodidadeNoHotelInput>
    where?: HotelWhereInput
  }

  export type HotelUpdateToOneWithWhereWithoutComodidadeNoHotelInput = {
    where?: HotelWhereInput
    data: XOR<HotelUpdateWithoutComodidadeNoHotelInput, HotelUncheckedUpdateWithoutComodidadeNoHotelInput>
  }

  export type HotelUpdateWithoutComodidadeNoHotelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
    endereco?: EnderecoUpdateOneRequiredWithoutHotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutComodidadeNoHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    enderecoId?: IntFieldUpdateOperationsInput | number
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type HotelCreateManyEnderecoInput = {
    id?: number
    nome: string
    telefone: string
    sobre?: string | null
    descricao?: string | null
    visualizacoes?: number
    informacoes_extras?: string | null
    pet: boolean
  }

  export type HotelUpdateWithoutEnderecoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUpdateManyWithoutId_hotelNestedInput
  }

  export type HotelUncheckedUpdateWithoutEnderecoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
    Acomodacao?: AcomodacaoUncheckedUpdateManyWithoutHotelNestedInput
    Avaliacao?: AvaliacaoUncheckedUpdateManyWithoutHotelNestedInput
    ComodidadeNoHotel?: ComodidadeNoHotelUncheckedUpdateManyWithoutHotelNestedInput
    Descricao_detalhada?: Descricao_detalhadaUncheckedUpdateOneWithoutId_hotelNestedInput
    Favorito?: FavoritoUncheckedUpdateManyWithoutHotelNestedInput
    FotosHotel?: FotosHotelUncheckedUpdateManyWithoutId_hotelNestedInput
  }

  export type HotelUncheckedUpdateManyWithoutEnderecoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    sobre?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    visualizacoes?: IntFieldUpdateOperationsInput | number
    informacoes_extras?: NullableStringFieldUpdateOperationsInput | string | null
    pet?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AcomodacaoCreateManyHotelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    tipo_acomodacaoId: number
  }

  export type AvaliacaoCreateManyHotelInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    clientId: number
  }

  export type ComodidadeNoHotelCreateManyHotelInput = {
    comodidadeId: number
  }

  export type FavoritoCreateManyHotelInput = {
    id?: number
    clienteId: number
  }

  export type FotosHotelCreateManyId_hotelInput = {
    id?: number
    url_foto: string
  }

  export type AcomodacaoUpdateWithoutHotelInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipoAcomodacao?: TipoAcomodacaoUpdateOneRequiredWithoutAcomodacaoesNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateManyWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    tipo_acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUpdateWithoutHotelInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClientUpdateOneRequiredWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUncheckedUpdateManyWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNoHotelUpdateWithoutHotelInput = {
    comodidade?: ComodidadeHotelUpdateOneRequiredWithoutHotelNestedInput
  }

  export type ComodidadeNoHotelUncheckedUpdateWithoutHotelInput = {
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNoHotelUncheckedUpdateManyWithoutHotelInput = {
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoUpdateWithoutHotelInput = {
    cliente?: ClientUpdateOneRequiredWithoutFavoritoNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoUncheckedUpdateManyWithoutHotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type FotosHotelUpdateWithoutId_hotelInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotosHotelUncheckedUpdateWithoutId_hotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotosHotelUncheckedUpdateManyWithoutId_hotelInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotoUsuarioCreateManyUsuarioInput = {
    id?: number
    url_foto: string
  }

  export type NotificacaoCreateManyUsuarioInput = {
    id?: number
    mensagem: string
    titulo: string
    leitura: boolean
    data_criacao: Date | string
  }

  export type FotoUsuarioUpdateWithoutUsuarioInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotoUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type FotoUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type NotificacaoUpdateWithoutUsuarioInput = {
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensagem?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    leitura?: BoolFieldUpdateOperationsInput | boolean
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AvaliacaoCreateManyClienteInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    hotelId: number
  }

  export type Avaliacao_acomodacaoCreateManyClienteInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    acomodacaoId: number
  }

  export type ClienteNoCupomCreateManyClienteInput = {
    cupomId: number
  }

  export type FavoritoCreateManyClienteInput = {
    id?: number
    hotelId: number
  }

  export type ReservaCreateManyClienteInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    acomodacaoId: number
  }

  export type AvaliacaoUpdateWithoutClienteInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    hotel?: HotelUpdateOneRequiredWithoutAvaliacaoNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoUpdateWithoutClienteInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput
  }

  export type Avaliacao_acomodacaoUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteNoCupomUpdateWithoutClienteInput = {
    cupom?: CupomUpdateOneRequiredWithoutClienteNestedInput
  }

  export type ClienteNoCupomUncheckedUpdateWithoutClienteInput = {
    cupomId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteNoCupomUncheckedUpdateManyWithoutClienteInput = {
    cupomId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoUpdateWithoutClienteInput = {
    hotel?: HotelUpdateOneRequiredWithoutFavoritoNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritoUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaUpdateWithoutClienteInput = {
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    Cobranca?: CobrancaUpdateOneWithoutReservaNestedInput
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    acomodacaoId?: IntFieldUpdateOperationsInput | number
    Cobranca?: CobrancaUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type Gerenciamento_ganhosCreateManyProprietarioInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type ProprietarioNoInteresseCreateManyProprietarioInput = {
    interesseId: number
  }

  export type Gerenciamento_ganhosUpdateWithoutProprietarioInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhosUncheckedUpdateWithoutProprietarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhosUncheckedUpdateManyWithoutProprietarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ProprietarioNoInteresseUpdateWithoutProprietarioInput = {
    interesse?: InteresseUpdateOneRequiredWithoutProprietarioNestedInput
  }

  export type ProprietarioNoInteresseUncheckedUpdateWithoutProprietarioInput = {
    interesseId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioNoInteresseUncheckedUpdateManyWithoutProprietarioInput = {
    interesseId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoCreateManyAcomodacaoInput = {
    id?: number
    custo_beneficio: number
    atendimento: number
    comida: number
    limpeza: number
    conforto: number
    localizacao: number
    comentario?: number | null
    clienteId: number
  }

  export type ComodidadeNaAcomodacaoCreateManyAcomodacaoInput = {
    comodidadeId: number
  }

  export type Foto_AcomodacaoCreateManyAcomodacaoInput = {
    id?: number
    url_foto: string
  }

  export type Gerenciamento_ganhos_acomodacaoCreateManyAcomodacaoInput = {
    id?: number
    data?: Date | string | null
    valor_lucro?: number | null
  }

  export type ReservaCreateManyAcomodacaoInput = {
    id?: number
    data_check_in: Date | string
    data_check_out: Date | string
    quantidade_pessoas: number
    status: string
    aceita_pet: boolean
    clienteId: number
  }

  export type Avaliacao_acomodacaoUpdateWithoutAcomodacaoInput = {
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClientUpdateOneRequiredWithoutAvaliacao_acomodacaoNestedInput
  }

  export type Avaliacao_acomodacaoUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    custo_beneficio?: IntFieldUpdateOperationsInput | number
    atendimento?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    limpeza?: IntFieldUpdateOperationsInput | number
    conforto?: IntFieldUpdateOperationsInput | number
    localizacao?: IntFieldUpdateOperationsInput | number
    comentario?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNaAcomodacaoUpdateWithoutAcomodacaoInput = {
    comodidade?: ComodidadeAcomodacaoUpdateOneRequiredWithoutAcomodacaoNestedInput
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateWithoutAcomodacaoInput = {
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoInput = {
    comodidadeId?: IntFieldUpdateOperationsInput | number
  }

  export type Foto_AcomodacaoUpdateWithoutAcomodacaoInput = {
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_AcomodacaoUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    url_foto?: StringFieldUpdateOperationsInput | string
  }

  export type Gerenciamento_ganhos_acomodacaoUpdateWithoutAcomodacaoInput = {
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_lucro?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ReservaUpdateWithoutAcomodacaoInput = {
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    Cobranca?: CobrancaUpdateOneWithoutReservaNestedInput
    cliente?: ClientUpdateOneRequiredWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    clienteId?: IntFieldUpdateOperationsInput | number
    Cobranca?: CobrancaUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    data_check_out?: DateTimeFieldUpdateOperationsInput | Date | string
    quantidade_pessoas?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    aceita_pet?: BoolFieldUpdateOperationsInput | boolean
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type AcomodacaoCreateManyTipoAcomodacaoInput = {
    id?: number
    titulo: string
    descricao?: string | null
    banheiros: number
    quartos: number
    camas: number
    valor_diaria: number
    valor_pet: number
    complemento: string
    hotelId: number
  }

  export type AcomodacaoUpdateWithoutTipoAcomodacaoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotel?: HotelUpdateOneRequiredWithoutAcomodacaoNestedInput
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateWithoutTipoAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotelId?: IntFieldUpdateOperationsInput | number
    Avaliacao_acomodacao?: Avaliacao_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    ComodidadeNaAcomodacao?: ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    FotoAcomodacao?: Foto_AcomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Gerenciamento_ganhos?: Gerenciamento_ganhos_acomodacaoUncheckedUpdateManyWithoutAcomodacaoNestedInput
    Reserva?: ReservaUncheckedUpdateManyWithoutAcomodacaoNestedInput
  }

  export type AcomodacaoUncheckedUpdateManyWithoutTipoAcomodacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    banheiros?: IntFieldUpdateOperationsInput | number
    quartos?: IntFieldUpdateOperationsInput | number
    camas?: IntFieldUpdateOperationsInput | number
    valor_diaria?: FloatFieldUpdateOperationsInput | number
    valor_pet?: FloatFieldUpdateOperationsInput | number
    complemento?: StringFieldUpdateOperationsInput | string
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioNoInteresseCreateManyInteresseInput = {
    proprietarioId: number
  }

  export type ProprietarioNoInteresseUpdateWithoutInteresseInput = {
    proprietario?: ProprietarioUpdateOneRequiredWithoutInteresseNestedInput
  }

  export type ProprietarioNoInteresseUncheckedUpdateWithoutInteresseInput = {
    proprietarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ProprietarioNoInteresseUncheckedUpdateManyWithoutInteresseInput = {
    proprietarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteNoCupomCreateManyCupomInput = {
    clienteId: number
  }

  export type ClienteNoCupomUpdateWithoutCupomInput = {
    cliente?: ClientUpdateOneRequiredWithoutCupomNestedInput
  }

  export type ClienteNoCupomUncheckedUpdateWithoutCupomInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteNoCupomUncheckedUpdateManyWithoutCupomInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNaAcomodacaoCreateManyComodidadeInput = {
    acomodacaoId: number
  }

  export type ComodidadeNaAcomodacaoUpdateWithoutComodidadeInput = {
    acomodacao?: AcomodacaoUpdateOneRequiredWithoutComodidadeNaAcomodacaoNestedInput
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateWithoutComodidadeInput = {
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNaAcomodacaoUncheckedUpdateManyWithoutComodidadeInput = {
    acomodacaoId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNoHotelCreateManyComodidadeInput = {
    hotelId: number
  }

  export type ComodidadeNoHotelUpdateWithoutComodidadeInput = {
    hotel?: HotelUpdateOneRequiredWithoutComodidadeNoHotelNestedInput
  }

  export type ComodidadeNoHotelUncheckedUpdateWithoutComodidadeInput = {
    hotelId?: IntFieldUpdateOperationsInput | number
  }

  export type ComodidadeNoHotelUncheckedUpdateManyWithoutComodidadeInput = {
    hotelId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use EnderecoCountOutputTypeDefaultArgs instead
     */
    export type EnderecoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HotelCountOutputTypeDefaultArgs instead
     */
    export type HotelCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HotelCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientCountOutputTypeDefaultArgs instead
     */
    export type ClientCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProprietarioCountOutputTypeDefaultArgs instead
     */
    export type ProprietarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProprietarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AcomodacaoCountOutputTypeDefaultArgs instead
     */
    export type AcomodacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoAcomodacaoCountOutputTypeDefaultArgs instead
     */
    export type TipoAcomodacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InteresseCountOutputTypeDefaultArgs instead
     */
    export type InteresseCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InteresseCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CupomCountOutputTypeDefaultArgs instead
     */
    export type CupomCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CupomCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeAcomodacaoCountOutputTypeDefaultArgs instead
     */
    export type ComodidadeAcomodacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeAcomodacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeHotelCountOutputTypeDefaultArgs instead
     */
    export type ComodidadeHotelCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeHotelCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EnderecoDefaultArgs instead
     */
    export type EnderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FotosHotelDefaultArgs instead
     */
    export type FotosHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FotosHotelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HotelDefaultArgs instead
     */
    export type HotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HotelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AvaliacaoDefaultArgs instead
     */
    export type AvaliacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AvaliacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Descricao_detalhadaDefaultArgs instead
     */
    export type Descricao_detalhadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Descricao_detalhadaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientDefaultArgs instead
     */
    export type ClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProprietarioDefaultArgs instead
     */
    export type ProprietarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProprietarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FotoUsuarioDefaultArgs instead
     */
    export type FotoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FotoUsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificacaoDefaultArgs instead
     */
    export type NotificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AcomodacaoDefaultArgs instead
     */
    export type AcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AcomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoAcomodacaoDefaultArgs instead
     */
    export type TipoAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoAcomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Foto_AcomodacaoDefaultArgs instead
     */
    export type Foto_AcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Foto_AcomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservaDefaultArgs instead
     */
    export type ReservaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Gerenciamento_ganhos_acomodacaoDefaultArgs instead
     */
    export type Gerenciamento_ganhos_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Gerenciamento_ganhos_acomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Avaliacao_acomodacaoDefaultArgs instead
     */
    export type Avaliacao_acomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Avaliacao_acomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CobrancaDefaultArgs instead
     */
    export type CobrancaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CobrancaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Gerenciamento_ganhosDefaultArgs instead
     */
    export type Gerenciamento_ganhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Gerenciamento_ganhosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InteresseDefaultArgs instead
     */
    export type InteresseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InteresseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProprietarioNoInteresseDefaultArgs instead
     */
    export type ProprietarioNoInteresseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProprietarioNoInteresseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CupomDefaultArgs instead
     */
    export type CupomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CupomDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteNoCupomDefaultArgs instead
     */
    export type ClienteNoCupomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteNoCupomDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FavoritoDefaultArgs instead
     */
    export type FavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FavoritoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeAcomodacaoDefaultArgs instead
     */
    export type ComodidadeAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeAcomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeNaAcomodacaoDefaultArgs instead
     */
    export type ComodidadeNaAcomodacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeNaAcomodacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeHotelDefaultArgs instead
     */
    export type ComodidadeHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeHotelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComodidadeNoHotelDefaultArgs instead
     */
    export type ComodidadeNoHotelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComodidadeNoHotelDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}