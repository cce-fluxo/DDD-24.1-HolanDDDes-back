// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Endereco {
  id     Int     @id @default(autoincrement())
  numero Int?
  rua    String
  bairro String
  cidade String
  estado String
  pais   String
  Hotel  Hotel[]
}

model FotosHotel {
  id       Int    @id @default(autoincrement())
  url_foto String
  id_hotel Hotel  @relation(fields: [hotelId], references: [id])
  hotelId  Int
}

model Hotel {
  id                  Int          @id @default(autoincrement())
  nome                String
  telefone            String
  sobre               String?
  descricao           String?
  visualizacoes       Int          @default(0)
  informacoes_extras  String?
  pet                 Boolean
  endereco            Endereco     @relation(fields: [enderecoId], references: [id])
  FotosHotel          FotosHotel[]
  enderecoId          Int
  Avaliacao           Avaliacao[]
  Descricao_detalhada Descricao_detalhada[]
  Acomodacao          Acomodacao[]
}

model Avaliacao {
  id              Int    @id @default(autoincrement())
  custo_beneficio Int
  atendimento     Int
  comida          Int
  limpeza         Int
  conforto        Int
  localizacao     Int
  comentario      Int?
  hotel           Hotel  @relation(fields: [hotelId], references: [id])
  hotelId         Int
  cliente         Client @relation(fields: [clientId], references: [id])
  clientId        Int
}

model Descricao_detalhada {
  id          Int     @id @default(autoincrement())
  descricao   String?
  sobre       String?
  banheiro    String?
  quarto      String?
  regiao      String?
  id_hotel    Hotel   @relation(fields: [hotelId], references: [id])
  hotelId     Int
}

model Usuario {
  id              Int            @id @default(autoincrement())
  nome            String
  sobrenome       String
  email           String
  hash_senha      String
  telefone        String?
  data_nascimento DateTime?
  vip             Boolean
  Client          Client[]
  Proprietario    Proprietario[]
  FotoUsuario     FotoUsuario[]
  Notificacao     Notificacao[]
}

model Client {
  id        Int         @id @default(autoincrement())
  usuario   Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  Avaliacao Avaliacao[]
  Reserva   Reserva[]
  Avaliacao_acomodacao Avaliacao_acomodacao[]
  Cupom     Cupom[]
}

model Proprietario {
  id               Int     @id @default(autoincrement())
  usuario          Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId        Int
  tempo_hospedagem Int?
  avaliacao        String?
  sobre            String?
  Gerenciamento_ganhos Gerenciamento_ganhos[]
}

model FotoUsuario {
  id              Int     @id @default(autoincrement())
  url_foto        String
  usuario         Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId       Int
}

model Notificacao {
  id              Int     @id @default(autoincrement())
  mensagem        String
  titulo          String
  usuario         Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId       Int
  leitura         Boolean
  data_criacao    DateTime
}

model Acomodacao {
  id              Int     @id @default(autoincrement())
  titulo          String
  descricao       String?
  banheiros       Int
  quartos         Int
  camas           Int
  valor_diaria    Float
  valor_pet       Float
  complemento     String
  tipo_acomodacao TipoAcomodacao[]
  hotel           Hotel   @relation(fields: [hotelId], references: [id])
  hotelId         Int
  FotoAcomodacao  FotoAcomodacao[]
  Reserva         Reserva[]
  Gerenciamento_ganhos_acomodacao Gerenciamento_ganhos_acomodacao[]
  Avaliacao_acomodacao Avaliacao_acomodacao[]
}

model TipoAcomodacao {
  id          Int           @id @default(autoincrement())
  nome        String
  Acomodacao  Acomodacao[]
}

model FotoAcomodacao {
  id              Int         @id @default(autoincrement())
  url_foto        String
  acomodacao      Acomodacao  @relation(fields: [acomodacaoId], references: [id])
  acomodacaoId    Int
}

model Reserva {
  id                  Int         @id @default(autoincrement())
  data_check_in       DateTime
  data_check_out      DateTime
  quantidade_pessoas  Int
  status              String
  aceita_pet          Boolean 
  cliente             Client      @relation(fields: [clienteId], references: [id])
  clienteId           Int
  acomodacao          Acomodacao  @relation(fields: [acomodacaoId], references: [id])
  acomodacaoId        Int
  Cobranca            Cobranca[]
}

model Gerenciamento_ganhos_acomodacao {
  id              Int         @id @default(autoincrement())
  data            DateTime?
  valor_lucro     Float?
  acomodacao      Acomodacao  @relation(fields: [acomodacaoId], references: [id])
  acomodacaoId    Int
}


model Avaliacao_acomodacao {
  id              Int    @id @default(autoincrement())
  custo_beneficio Int
  atendimento     Int
  comida          Int
  limpeza         Int
  conforto        Int
  localizacao     Int
  comentario      Int?
  acomodacao      Acomodacao  @relation(fields: [acomodacaoId], references: [id])
  acomodacaoId    Int
  cliente         Client     @relation(fields: [clienteId], references: [id])
  clienteId       Int
}

model Cobranca {
  id              Int         @id @default(autoincrement())
  data_pagamento  DateTime?
  data_vencimento DateTime?
  valor           Float?
  status          String?
  reserva         Reserva     @relation(fields: [reservaId], references: [id])
  reservaId       Int
}

model Gerenciamento_ganhos {
  id              Int         @id @default(autoincrement())
  data            DateTime?
  valor_lucro     Float?
  proprietario    Proprietario  @relation(fields: [proprietarioId], references: [id])
  proprietarioId  Int
}