generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Endereco {
  id     Int     @id @default(autoincrement())
  numero Int?
  rua    String
  bairro String
  cidade String
  estado String
  pais   String
  Hotel  Hotel[]
}

model FotosHotel {
  id       Int    @id @default(autoincrement())
  url_foto String
  hotelId  Int
  id_hotel Hotel  @relation(fields: [hotelId], references: [id])
}

model Hotel {
  id                  Int                  @id @default(autoincrement())
  nome                String
  telefone            String
  sobre               String?
  descricao           String?
  visualizacoes       Int                  @default(0)
  informacoes_extras  String?
  pet                 Boolean
  enderecoId          Int
  Acomodacao          Acomodacao[]
  Avaliacao           Avaliacao[]
  ComodidadeNoHotel   ComodidadeNoHotel[]
  Descricao_detalhada Descricao_detalhada?
  Favorito            Favorito[]
  FotosHotel          FotosHotel[]
  endereco            Endereco             @relation(fields: [enderecoId], references: [id])
  proprietarioId      Int                  @unique
  Proprietario        Proprietario         @relation(fields: [proprietarioId], references: [id])
}

model Avaliacao {
  id              Int    @id @default(autoincrement())
  custo_beneficio Int
  atendimento     Int
  comida          Int
  limpeza         Int
  conforto        Int
  localizacao     Int
  comentario      String?
  hotelId         Int
  clientId        Int
  cliente         Client @relation(fields: [clientId], references: [id])
  hotel           Hotel  @relation(fields: [hotelId], references: [id])
}

model Descricao_detalhada {
  id        Int     @id @default(autoincrement())
  sobre     String?
  banheiro  String?
  quarto    String?
  regiao    String?
  hotelId   Int     @unique
  id_hotel  Hotel   @relation(fields: [hotelId], references: [id])
}

model Usuario {
  id              Int           @id @default(autoincrement())
  nome            String
  sobrenome       String
  email           String
  hash_senha      String
  telefone        String?
  data_nascimento DateTime?
  vip             Boolean
  Client          Client?
  FotoUsuario     FotoUsuario[]
  Notificacao     Notificacao[]
  Proprietario    Proprietario?
}

model Client {
  id                   Int                    @id @default(autoincrement())
  usuarioId            Int                    @unique
  Avaliacao            Avaliacao[]
  Avaliacao_acomodacao Avaliacao_acomodacao[]
  usuario              Usuario                @relation(fields: [usuarioId], references: [id])
  Cupom                ClienteNoCupom[]
  Favorito             Favorito[]
  Reserva              Reserva[]
}

model Proprietario {
  id                   Int                       @id @default(autoincrement())
  usuarioId            Int                       @unique
  tempo_hospedagem     Int?
  avaliacao            String?
  sobre                String?
  Gerenciamento_ganhos Gerenciamento_ganhos[]
  usuario              Usuario                   @relation(fields: [usuarioId], references: [id])
  Interesse            ProprietarioNoInteresse[]
  Hotel                Hotel?
}

model FotoUsuario {
  id        Int     @id @default(autoincrement())
  url_foto  String
  usuarioId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model Notificacao {
  id           Int      @id @default(autoincrement())
  mensagem     String
  titulo       String
  usuarioId    Int
  leitura      Boolean
  data_criacao DateTime
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
}

model Acomodacao {
  id                     Int                               @id @default(autoincrement())
  titulo                 String
  descricao              String?
  banheiros              Int
  quartos                Int
  camas                  Int
  valor_diaria           Float
  valor_pet              Float
  complemento            String
  tipo_acomodacaoId      Int
  hotelId                Int
  hotel                  Hotel                             @relation(fields: [hotelId], references: [id])
  tipoAcomodacao         TipoAcomodacao                    @relation(fields: [tipo_acomodacaoId], references: [id])
  Avaliacao_acomodacao   Avaliacao_acomodacao[]
  ComodidadeNaAcomodacao ComodidadeNaAcomodacao[]
  FotoAcomodacao         Foto_Acomodacao[]
  Gerenciamento_ganhos   Gerenciamento_ganhos_acomodacao[]
  Reserva                Reserva[]
}

model TipoAcomodacao {
  id           Int          @id @default(autoincrement())
  nome         String
  Acomodacaoes Acomodacao[]
}

model Foto_Acomodacao {
  id           Int        @id @default(autoincrement())
  url_foto     String
  acomodacaoId Int
  acomodacao   Acomodacao @relation(fields: [acomodacaoId], references: [id])
}

model Reserva {
  id                 Int        @id @default(autoincrement())
  data_check_in      DateTime
  data_check_out     DateTime
  quantidade_pessoas Int
  status             String
  aceita_pet         Boolean
  clienteId          Int
  acomodacaoId       Int
  Cobranca           Cobranca?
  acomodacao         Acomodacao @relation(fields: [acomodacaoId], references: [id])
  cliente            Client     @relation(fields: [clienteId], references: [id])
  cupomId            Int?       @unique
  cupom              Cupom?     @relation(fields: [cupomId], references: [id])
}

model Gerenciamento_ganhos_acomodacao {
  id           Int        @id @default(autoincrement())
  data         DateTime?
  valor_lucro  Float?
  acomodacaoId Int
  acomodacao   Acomodacao @relation(fields: [acomodacaoId], references: [id])
}

model Avaliacao_acomodacao {
  id              Int        @id @default(autoincrement())
  custo_beneficio Int
  atendimento     Int
  comida          Int
  limpeza         Int
  conforto        Int
  localizacao     Int
  comentario      String?
  acomodacaoId    Int
  clienteId       Int
  acomodacao      Acomodacao @relation(fields: [acomodacaoId], references: [id])
  cliente         Client     @relation(fields: [clienteId], references: [id])
}

model Cobranca {
  id              Int       @id @default(autoincrement())
  data_pagamento  DateTime?
  data_vencimento DateTime?
  valor           Float?
  status          String?
  reservaId       Int       @unique
  reserva         Reserva   @relation(fields: [reservaId], references: [id])
}

model Gerenciamento_ganhos {
  id             Int          @id @default(autoincrement())
  data           DateTime?
  valor_lucro    Float?
  proprietarioId Int
  proprietario   Proprietario @relation(fields: [proprietarioId], references: [id])
}

model Interesse {
  id           Int                       @id @default(autoincrement())
  Nome         String
  Proprietario ProprietarioNoInteresse[]
}

model ProprietarioNoInteresse {
  proprietarioId Int
  interesseId    Int
  interesse      Interesse    @relation(fields: [interesseId], references: [id])
  proprietario   Proprietario @relation(fields: [proprietarioId], references: [id])

  @@id([proprietarioId, interesseId])
}

model Cupom {
  id            Int              @id @default(autoincrement())
  titulo        String
  Status        Boolean
  codigo        String
  desconto      Float
  data_validade DateTime
  descricao     String
  Cliente       ClienteNoCupom[]
  Reserva       Reserva?
}

model ClienteNoCupom {
  clienteId Int
  cupomId   Int
  cliente   Client @relation(fields: [clienteId], references: [id])
  cupom     Cupom  @relation(fields: [cupomId], references: [id])

  @@id([clienteId, cupomId])
}

model Favorito {
  id        Int    @id @default(autoincrement())
  clienteId Int
  hotelId   Int
  cliente   Client @relation(fields: [clienteId], references: [id])
  hotel     Hotel  @relation(fields: [hotelId], references: [id])
}

model ComodidadeAcomodacao {
  id         Int                      @id @default(autoincrement())
  nome       String
  Acomodacao ComodidadeNaAcomodacao[]
}

model ComodidadeNaAcomodacao {
  acomodacaoId Int
  comodidadeId Int
  acomodacao   Acomodacao           @relation(fields: [acomodacaoId], references: [id])
  comodidade   ComodidadeAcomodacao @relation(fields: [comodidadeId], references: [id])

  @@id([acomodacaoId, comodidadeId])
}

model ComodidadeHotel {
  id    Int                 @id @default(autoincrement())
  nome  String
  Hotel ComodidadeNoHotel[]
}

model ComodidadeNoHotel {
  hotelId      Int
  comodidadeId Int
  comodidade   ComodidadeHotel @relation(fields: [comodidadeId], references: [id])
  hotel        Hotel           @relation(fields: [hotelId], references: [id])

  @@id([hotelId, comodidadeId])
}
